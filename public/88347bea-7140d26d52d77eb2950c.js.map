{"version":3,"file":"88347bea-7140d26d52d77eb2950c.js","mappings":"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","sources":["webpack://physicalculator/./node_modules/nerdamer/nerdamer.core.js"],"sourcesContent":["/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\n\n/* global trig, trigh, Infinity, define, arguments2Array, NaN */\n//externals ====================================================================\n\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\n//var nerdamerBigInt = typeof nerdamerBigInt !== 'undefined' ? nerdamerBigInt : require(\"big-integer\");\n\n/* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\n//var nerdamerBigDecimal = typeof nerdamerBigDecimal !== 'undefined' ? nerdamerBigDecimal : require('big.js');\nvar nerdamer = function (imports) {\n  \"use strict\"; //version ======================================================================\n\n  var version = '1.1.13'; //inits ========================================================================\n\n  var _ = new Parser(); //nerdamer's parser\n  //import bigInt\n\n\n  var bigInt = imports.bigInt;\n  var bigDec = imports.bigDec; //set the precision to js precision\n\n  bigDec.set({\n    precision: 250\n  });\n  var Groups = {}; //container of pregenerated primes\n\n  var PRIMES = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083]; //Settings =====================================================================\n\n  var CUSTOM_OPERATORS = {};\n  var Settings = {\n    //Enables/Disables call peekers. False means callPeekers are disabled and true means callPeekers are enabled.\n    callPeekers: false,\n    //the max number up to which to cache primes. Making this too high causes performance issues\n    init_primes: 1000,\n    exclude: [],\n    //If you don't care about division by zero for example then this can be set to true.\n    //Has some nasty side effects so choose carefully.\n    suppress_errors: false,\n    //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\n    //cos(9) for convenience but parse to number will always try to return a number if set to true.\n    PARSE2NUMBER: false,\n    //this flag forces the a clone to be returned when add, subtract, etc... is called\n    SAFE: false,\n    //the symbol to use for imaginary symbols\n    IMAGINARY: 'i',\n    //the modules used to link numeric function holders\n    FUNCTION_MODULES: [Math],\n    //Allow certain characters\n    ALLOW_CHARS: ['π'],\n    //Allow nerdamer to convert multi-character variables\n    USE_MULTICHARACTER_VARS: true,\n    //Allow changing of power operator\n    POWER_OPERATOR: '^',\n    //The variable validation regex\n    //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\n    VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\n    // The regex used to determine which characters should be included in implied multiplication\n    IMPLIED_MULTIPLICATION_REGEX: /([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi,\n    //Aliases\n    ALIASES: {\n      'π': 'pi',\n      '∞': 'Infinity'\n    },\n    POSITIVE_MULTIPLIERS: false,\n    //Cached items\n    CACHE: {},\n    //Print out warnings or not\n    SILENCE_WARNINGS: false,\n    // Precision\n    PRECISION: 21,\n    // The Expression defaults to this value for decimal places\n    EXPRESSION_DECP: 19,\n    // The text function defaults to this value for decimal places\n    DEFAULT_DECP: 16,\n    //function mappings\n    VECTOR: 'vector',\n    PARENTHESIS: 'parens',\n    SQRT: 'sqrt',\n    ABS: 'abs',\n    FACTORIAL: 'factorial',\n    DOUBLEFACTORIAL: 'dfactorial',\n    //reference pi and e\n    LONG_PI: '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214' + '808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',\n    LONG_E: '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466' + '39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',\n    PI: Math.PI,\n    E: Math.E,\n    LOG: 'log',\n    LOG10: 'log10',\n    LOG10_LATEX: 'log_{10}',\n    MAX_EXP: 200000,\n    //The number of scientific place to round to\n    SCIENTIFIC_MAX_DECIMAL_PLACES: 14,\n    //True if ints should not be converted to\n    SCIENTIFIC_IGNORE_ZERO_EXPONENTS: true\n  };\n\n  (function () {\n    Settings.CACHE.roots = {};\n    var x = 40,\n        y = 40;\n\n    for (var i = 2; i <= x; i++) {\n      for (var j = 2; j <= y; j++) {\n        var nthpow = bigInt(i).pow(j);\n        Settings.CACHE.roots[nthpow + '-' + j] = i;\n      }\n    }\n  })(); //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\n  //The groups that help with organizing during parsing. Note that for FN is still a function even\n  //when it's raised to a symbol, which typically results in an EX\n\n\n  var N = Groups.N = 1,\n      // A number\n  P = Groups.P = 2,\n      // A number with a rational power e.g. 2^(3/5).\n  S = Groups.S = 3,\n      // A single variable e.g. x.\n  EX = Groups.EX = 4,\n      // An exponential\n  FN = Groups.FN = 5,\n      // A function\n  PL = Groups.PL = 6,\n      // A symbol/expression having same name with different powers e.g. 1/x + x^2\n  CB = Groups.CB = 7,\n      // A symbol/expression composed of one or more variables through multiplication e.g. x*y\n  CP = Groups.CP = 8; // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\n\n  var CONST_HASH = Settings.CONST_HASH = '#';\n  var PARENTHESIS = Settings.PARENTHESIS;\n  var SQRT = Settings.SQRT;\n  var ABS = Settings.ABS;\n  var FACTORIAL = Settings.FACTORIAL;\n  var DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL; //the storage container \"memory\" for parsed expressions\n\n  var EXPRESSIONS = []; //variables\n\n  var VARS = {}; //the container used to store all the reserved functions\n\n  var RESERVED = [];\n  var WARNINGS = [];\n  /**\r\n   * Use this when errors are suppressible\r\n   * @param {String} msg\r\n   * @param {object} ErrorObj\r\n   */\n\n  var err = function err(msg, ErrorObj) {\n    if (!Settings.suppress_errors) {\n      if (ErrorObj) throw new ErrorObj(msg);else throw new Error(msg);\n    }\n  }; //Utils ========================================================================\n\n\n  var customError = function customError(name) {\n    var E = function E(message) {\n      this.name = name;\n      this.message = message !== undefined ? message : '';\n      var error = new Error(this.message);\n      error.name = this.name;\n      this.stack = error.stack;\n    }; //create an empty error\n\n\n    E.prototype = Object.create(Error.prototype);\n    return E;\n  };\n  /**\r\n   * Checks to see if value is one of nerdamer's reserved names\r\n   * @param {String} value\r\n   * @return boolean\r\n   */\n\n\n  var isReserved = function isReserved(value) {\n    return RESERVED.indexOf(value) !== -1;\n  };\n  /**\r\n   * Checks to see that all symbols in array are the same\r\n   * @param {Symbol[]} arr\r\n   * @returns {bool}\r\n   */\n\n\n  var allSame = function allSame(arr) {\n    var last = arr[0];\n\n    for (var i = 1, l = arr.length; i < l; i++) {\n      if (!arr[i].equals(last)) return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Used to pass warnings or low severity errors about the library\r\n   * @param msg\r\n   */\n\n\n  var warn = function warn(msg) {\n    WARNINGS.push(msg);\n\n    if (Settings.SHOW_WARNINGS && console && console.warn) {\n      console.warn(msg);\n    }\n  };\n  /**\r\n   * Enforces rule: \"must start with a letter or underscore and\r\n   * can have any number of underscores, letters, and numbers thereafter.\"\r\n   * @param name The name of the symbol being checked\r\n   * @param {String} typ - The type of symbols that's being validated\r\n   * @throws {Exception}  - Throws an exception on fail\r\n   */\n\n\n  var validateName = function validateName(name, typ) {\n    typ = typ || 'variable';\n    if (Settings.ALLOW_CHARS.indexOf(name) !== -1) return;\n    var regex = Settings.VALIDATION_REGEX;\n\n    if (!regex.test(name)) {\n      throw new InvalidVariableNameError(name + ' is not a valid ' + typ + ' name');\n    }\n  };\n  /**\r\n   * Convert number from scientific format to decimal format\r\n   * @param {Number} num\r\n   */\n\n\n  var scientificToDecimal = function scientificToDecimal(num) {\n    var nsign = Math.sign(num); //remove the sign\n\n    num = Math.abs(num); //if the number is in scientific notation remove it\n\n    if (/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\n      var zero = '0',\n          parts = String(num).toLowerCase().split('e'),\n          //split into coeff and exponent\n      e = parts.pop(),\n          //store the exponential part\n      l = Math.abs(e),\n          //get the number of zeros\n      sign = e / l,\n          coeff_array = parts[0].split('.');\n\n      if (sign === -1) {\n        l = l - coeff_array[0].length;\n\n        if (l < 0) {\n          num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\n        } else {\n          num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\n        }\n      } else {\n        var dec = coeff_array[1];\n        if (dec) l = l - dec.length;\n\n        if (l < 0) {\n          num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\n        } else {\n          num = coeff_array.join('') + new Array(l + 1).join(zero);\n        }\n      }\n    }\n\n    return nsign < 0 ? '-' + num : num;\n  };\n  /**\r\n   * Checks if number is a prime number\r\n   * @param {Number} n - the number to be checked\r\n   */\n\n\n  var isPrime = function isPrime(n) {\n    var q = Math.floor(Math.sqrt(n));\n\n    for (var i = 2; i <= q; i++) {\n      if (n % i === 0) return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Generates an object with known variable value for evaluation\r\n   * @param {String} variable\r\n   * @param {any} value Any stringifyable object\r\n   * @returns {Object} \r\n   */\n\n\n  var knownVariable = function knownVariable(variable, value) {\n    var o = {};\n    o[variable] = value;\n    return o;\n  };\n  /**\r\n   * Checks if n is a number\r\n   * @param {any} n\r\n   */\n\n\n  var isNumber = function isNumber(n) {\n    return /^\\d+\\.?\\d*$/.test(n);\n  };\n  /**\r\n   * Checks to see if an array contains only numeric values\r\n   * @param {Array} arr\r\n   */\n\n\n  var allNumeric = function allNumeric(arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (!isNumber(arr[i])) return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Checks to see if a number or Symbol is a fraction\r\n   * @param {Number|Symbol} num\r\n   * @returns {boolean}\r\n   */\n\n\n  var _isFraction = function isFraction(num) {\n    if (isSymbol(num)) return _isFraction(num.multiplier.toDecimal());\n    return num % 1 !== 0;\n  };\n  /**\r\n   * Checks to see if the object provided is a Symbol\r\n   * @param {Object} obj\r\n   */\n\n\n  var isSymbol = function isSymbol(obj) {\n    return obj instanceof Symbol;\n  };\n  /**\r\n   * Checks to see if the object provided is an Expression\r\n   * @param {Object} obj\r\n   */\n\n\n  var isExpression = function isExpression(obj) {\n    return obj instanceof Expression;\n  };\n  /**\r\n   * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\r\n   * names are then returned in alphabetical order.\r\n   * @param {Symbol} obj\r\n   * @param {Boolean} poly\r\n   * @param {Object} vars - An object containing the variables. Do not pass this in as it generated\r\n   * automatically. In the future this will be a Collector object.\r\n   * @returns {String[]} - An array containing variable names\r\n   */\n\n\n  var _variables = function variables(obj, poly, vars) {\n    vars = vars || {\n      c: [],\n      add: function add(value) {\n        if (this.c.indexOf(value) === -1 && isNaN(value)) this.c.push(value);\n      }\n    };\n\n    if (isSymbol(obj)) {\n      var group = obj.group,\n          prevgroup = obj.previousGroup;\n      if (group === EX) _variables(obj.power, poly, vars);\n\n      if (group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\n        for (var x in obj.symbols) {\n          _variables(obj.symbols[x], poly, vars);\n        }\n      } else if (group === S || prevgroup === S) {\n        //very crude needs fixing. TODO\n        if (!(obj.value === 'e' || obj.value === 'pi' || obj.value === Settings.IMAGINARY)) vars.add(obj.value);\n      } else if (group === PL || prevgroup === PL) {\n        _variables(firstObject(obj.symbols), poly, vars);\n      } else if (group === EX) {\n        if (!isNaN(obj.value)) vars.add(obj.value);\n\n        _variables(obj.power, poly, vars);\n      } else if (group === FN && !poly) {\n        for (var i = 0; i < obj.args.length; i++) {\n          _variables(obj.args[i], poly, vars);\n        }\n      }\n    }\n\n    return vars.c.sort();\n  };\n  /**\r\n   * Returns the sum of an array\r\n   * @param {Array} arr\r\n   * @param {boolean} toNumber\r\n   * @returns {Symbol}\r\n   */\n\n\n  var arraySum = function arraySum(arr, toNumber) {\n    var sum = new Symbol(0);\n\n    for (var i = 0; i < arr.length; i++) {\n      var x = arr[i]; // Convert to symbol if not\n\n      sum = _.add(sum, !isSymbol(x) ? _.parse(x) : x);\n    }\n\n    return toNumber ? Number(sum) : sum;\n  };\n  /**\r\n   * Separates out the variables into terms of variabls.\r\n   * e.g. x+y+x*y+sqrt(2)+pi returns\r\n   * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\r\n   * @param {type} symbol\r\n   * @param {type} o\r\n   * @returns {undefined}\r\n   * @throws {Error} for expontentials\r\n   */\n\n\n  var separate = function separate(symbol, o) {\n    symbol = _.expand(symbol);\n    o = o || {};\n\n    var insert = function insert(key, sym) {\n      if (!o[key]) o[key] = new Symbol(0);\n      o[key] = _.add(o[key], sym.clone());\n    };\n\n    symbol.each(function (x) {\n      if (x.isConstant('all')) {\n        insert('constants', x);\n      } else if (x.group === S) {\n        insert(x.value, x);\n      } else if (x.group === FN && (x.fname === ABS || x.fname === '')) {\n        separate(x.args[0]);\n      } else if (x.group === EX || x.group === FN) {\n        throw new Error('Unable to separate. Term cannot be a function!');\n      } else {\n        insert(_variables(x).join(' '), x);\n      }\n    });\n    return o;\n  };\n  /**\r\n   * Fills holes in an array with zero symbol or generates one with n zeroes\r\n   * @param {Array} arr\r\n   * @param {Number} n\r\n   */\n\n\n  var fillHoles = function fillHoles(arr, n) {\n    n = n || arr.length;\n\n    for (var i = 0; i < n; i++) {\n      var sym = arr[i];\n      if (!sym) arr[i] = new Symbol(0);\n    }\n\n    return arr;\n  };\n  /**\r\n   *\r\n   * Checks to see if the object provided is a Vector\r\n   * @param {Object} obj\r\n   */\n\n\n  var isVector = function isVector(obj) {\n    return obj instanceof Vector;\n  };\n  /**\r\n   * Checks to see if the object provided is a Matrix\r\n   * @param {Object} obj\r\n   */\n\n\n  var isMatrix = function isMatrix(obj) {\n    return obj instanceof Matrix;\n  };\n\n  var isSet = function isSet(obj) {\n    return obj instanceof Set;\n  };\n  /**\r\n   * Checks to see if a symbol is in group N\r\n   * @param {Symbol} symbol\r\n   */\n\n\n  var isNumericSymbol = function isNumericSymbol(symbol) {\n    return symbol.group === N || symbol.group === P;\n  };\n  /**\r\n   * Checks to see if a symbol is a variable with no multiplier nor power\r\n   * @param {Symbol} symbol\r\n   */\n\n\n  var isVariableSymbol = function isVariableSymbol(symbol) {\n    return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\n  };\n  /**\r\n   * Checks to see if the object provided is an Array\r\n   * @param {Object} arr\r\n   */\n\n\n  var isArray = function isArray(arr) {\n    return Array.isArray(arr);\n  };\n  /**\r\n   * Checks to see if a number is an integer\r\n   * @param {Number} num\r\n   */\n\n\n  var isInt = function isInt(num) {\n    return /^[-+]?\\d+e?\\+?\\d*$/gim.test(num.toString());\n  };\n  /**\r\n   * @param {Number|Symbol} obj\r\n   * @returns {boolean}\r\n   */\n\n\n  var isNegative = function isNegative(obj) {\n    if (isSymbol(obj)) {\n      obj = obj.multiplier;\n    }\n\n    return obj.lessThan(0);\n  };\n  /**\r\n   * Safely stringify object\r\n   * @param o\r\n   */\n\n\n  var stringify = function stringify(o) {\n    if (!o) return o;\n    return String(o);\n  };\n  /**\r\n   * @param {String} str\r\n   * @returns {String} - returns a formatted string surrounded by brackets\r\n   */\n\n\n  var inBrackets = function inBrackets(str) {\n    return '(' + str + ')';\n  };\n  /**\r\n   * A helper function to replace parts of string\r\n   * @param {String} str - The original string\r\n   * @param {Integer} from - The starting index\r\n   * @param {Integer} to - The ending index\r\n   * @param {String} with_str - The replacement string\r\n   * @returns {String} - A formatted string\r\n   */\n\n\n  var stringReplace = function stringReplace(str, from, to, with_str) {\n    return str.substr(0, from) + with_str + str.substr(to, str.length);\n  };\n  /**\r\n   * the Parser uses this to check if it's allowed to convert the obj to type Symbol\r\n   * @param {Object} obj\r\n   * @returns {boolean}\r\n   */\n\n\n  var customType = function customType(obj) {\n    return obj !== undefined && obj.custom;\n  };\n  /**\r\n   * Checks to see if numbers are both negative or are both positive\r\n   * @param {Number} a\r\n   * @param {Number} b\r\n   * @returns {boolean}\r\n   */\n\n\n  var sameSign = function sameSign(a, b) {\n    return a < 0 === b < 0;\n  };\n  /**\r\n   * A helper function to replace multiple occurences in a string. Takes multiple arguments\r\n   * @example format('{0} nice, {0} sweet', 'something')\r\n   * //returns 'something nice, something sweet'\r\n   */\n\n\n  var format = function format() {\n    var args = [].slice.call(arguments),\n        str = args.shift();\n    var new_str = str.replace(/{(\\d+)}/g, function (match, index) {\n      var arg = args[index];\n      return typeof arg === 'function' ? arg() : arg;\n    });\n    return new_str;\n  };\n  /**\r\n   * Generates an array with values within a range. Multiplies by a step if provided\r\n   * @param {Number} start\r\n   * @param {Number} end\r\n   * @param {Number} step\r\n   */\n\n\n  var range = function range(start, end, step) {\n    var arr = [];\n    step = step || 1;\n\n    for (var i = start; i <= end; i++) {\n      arr.push(i * step);\n    }\n\n    return arr;\n  };\n  /**\r\n   * Returns an array of all the keys in an array\r\n   * @param {Object} obj\r\n   * @returns {Array}\r\n   */\n\n\n  var keys = Object.keys;\n  /**\r\n   * Returns the first encountered item in an object. Items do not have a fixed order in objects\r\n   * so only use if you need any first random or if there's only one item in the object\r\n   * @param {Object} obj\r\n   * @param {String} key Return this key as first object\r\n   * @param {Boolean} both\r\n   * @returns {*}\r\n   */\n\n  var firstObject = function firstObject(obj, key, both) {\n    for (var x in obj) {\n      break;\n    }\n\n    if (key) return x;\n    if (both) return {\n      key: x,\n      obj: obj[x]\n    };\n    return obj[x];\n  };\n  /**\r\n   * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\r\n   * @param {Symbol} sym1\r\n   * @param {Symbol} sym2\r\n   * @param {String[]} vars - an optional array of variables to use\r\n   * @returns {bool}\r\n   */\n\n\n  var compare = function compare(sym1, sym2, vars) {\n    var n = 5; //a random number between 1 and 5 is good enough\n\n    var scope = {}; // scope object with random numbers generated using vars\n\n    var comparison;\n\n    for (var i = 0; i < vars.length; i++) {\n      scope[vars[i]] = new Symbol(Math.floor(Math.random() * n) + 1);\n    }\n\n    block('PARSE2NUMBER', function () {\n      comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\n    });\n    return comparison;\n  };\n  /**\r\n   * Is used to set a user defined function using the function assign operator\r\n   * @param {String} name\r\n   * @param {String[]} params_array\r\n   * @param {String} body\r\n   * @returns {Boolean}\r\n   */\n\n\n  var setFunction = function setFunction(name, params_array, body) {\n    validateName(name);\n\n    if (!isReserved(name)) {\n      params_array = params_array || _variables(_.parse(body)); // The function gets set to PARSER.mapped function which is just\n      // a generic function call.\n\n      _.functions[name] = [_.mapped_function, params_array.length, {\n        name: name,\n        params: params_array,\n        body: body\n      }];\n      return body;\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the minimum number in an array\r\n   * @param {Array} arr\r\n   * @returns {Number}\r\n   */\n\n\n  var arrayMax = function arrayMax(arr) {\n    return Math.max.apply(undefined, arr);\n  };\n  /**\r\n   * Returns the maximum number in an array\r\n   * @param {Array} arr\r\n   * @returns {Number}\r\n   */\n\n\n  var arrayMin = function arrayMin(arr) {\n    return Math.min.apply(undefined, arr);\n  };\n  /**\r\n   * Checks to see if two arrays are equal\r\n   * @param {Array} arr1 \r\n   * @param {Array} arr2 \r\n   */\n\n\n  var arrayEqual = function arrayEqual(arr1, arr2) {\n    arr1.sort();\n    arr2.sort(); // The must be of the same length\n\n    if (arr1.length === arr2.length) {\n      for (var i = 0; i < arr1.length; i++) {\n        // If any two items don't match we're done\n        if (arr1[i] !== arr2[i]) {\n          return false;\n        }\n      } // Otherwise they're equal\n\n\n      return true;\n    }\n\n    return false;\n  };\n  /**\r\n   * Clones array with clonable items\r\n   * @param {Array} arr\r\n   * @returns {Array}\r\n   */\n\n\n  var arrayClone = function arrayClone(arr) {\n    var new_array = [],\n        l = arr.length;\n\n    for (var i = 0; i < l; i++) {\n      new_array[i] = arr[i].clone();\n    }\n\n    return new_array;\n  };\n  /**\r\n   * Fills numbers between array values\r\n   * @param {Numbers[]} arr\r\n   * @param {Integer} slices\r\n   */\n\n\n  var arrayAddSlices = function arrayAddSlices(arr, slices) {\n    slices = slices || 20;\n    var retval = [];\n    var c, delta, e;\n    retval.push(arr[0]); //push the beginning\n\n    for (var i = 0; i < arr.length - 1; i++) {\n      c = arr[i];\n      delta = arr[i + 1] - c; //get the difference\n\n      e = delta / slices; //chop it up in the desired number of slices\n\n      for (var j = 0; j < slices; j++) {\n        c += e; //add the mesh to the last slice\n\n        retval.push(c);\n      }\n    }\n\n    return retval;\n  };\n  /**\r\n   * Gets nth roots of a number\r\n   * @param {Symbol} symbol\r\n   * @returns {Vector}\r\n   */\n\n\n  var nroots = function nroots(symbol) {\n    var a, b;\n\n    if (symbol.group === FN && symbol.fname === '') {\n      a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n      b = _.parse(symbol.power);\n    } else if (symbol.group === P) {\n      a = _.parse(symbol.value);\n      b = _.parse(symbol.power);\n    }\n\n    if (a && b && a.group === N && b.group === N && a.multiplier.isNegative()) {\n      var _roots = [];\n      var parts = Symbol.toPolarFormArray(evaluate(symbol));\n      var r = parts[0]; //var r = _.parse(a).abs().toString();\n      //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n\n      var x = _.arg(a);\n\n      var n = b.multiplier.den.toString();\n      var p = b.multiplier.num.toString();\n      var formula = '(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';\n\n      for (var i = 0; i < n; i++) {\n        var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n\n        _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n      }\n\n      return Vector.fromArray(_roots);\n    } else if (symbol.isConstant(true, true)) {\n      var sign = symbol.sign();\n      var x = evaluate(symbol.abs());\n\n      var root = _.sqrt(x);\n\n      var _roots = [root.clone(), root.negate()];\n      if (sign < 0) _roots = _roots.map(function (x) {\n        return _.multiply(x, Symbol.imaginary());\n      });\n    } else {\n      _roots = [_.parse(symbol)];\n    }\n\n    return Vector.fromArray(_roots);\n  };\n  /**\r\n   * Sorts and array given 2 parameters\r\n   * @param {String} a\r\n   * @param {String} b\r\n   */\n\n\n  var comboSort = function comboSort(a, b) {\n    var l = a.length,\n        combined = []; //the linker\n\n    for (var i = 0; i < a.length; i++) {\n      combined.push([a[i], b[i]]); //create the map\n    }\n\n    combined.sort(function (x, y) {\n      return x[0] - y[0];\n    });\n    var na = [],\n        nb = [];\n\n    for (i = 0; i < l; i++) {\n      na.push(combined[i][0]);\n      nb.push(combined[i][1]);\n    }\n\n    return [na, nb];\n  };\n  /**\r\n   * TODO: Pick a more descriptive name and better description\r\n   * Breaks a function down into it's parts wrt to a variable, mainly coefficients\r\n   * Example a*x^2+b wrt x\r\n   * @param {Symbol} fn\r\n   * @param {String} wrt\r\n   * @param {bool} as_obj\r\n   */\n\n\n  var decompose_fn = function decompose_fn(fn, wrt, as_obj) {\n    wrt = String(wrt); //convert to string\n\n    var ax, a, x, b;\n\n    if (fn.group === CP) {\n      var t = _.expand(fn.clone()).stripVar(wrt);\n\n      ax = _.subtract(fn.clone(), t.clone());\n      b = t;\n    } else ax = fn.clone();\n\n    a = ax.stripVar(wrt);\n    x = _.divide(ax.clone(), a.clone());\n    b = b || new Symbol(0);\n    if (as_obj) return {\n      a: a,\n      x: x,\n      ax: ax,\n      b: b\n    };\n    return [a, x, ax, b];\n  };\n  /**\r\n   * Rounds a number up to x decimal places\r\n   * @param {Number} x\r\n   * @param {Number} s\r\n   */\n\n\n  var nround = function nround(x, s) {\n    if (isInt(x)) {\n      if (x >= Number.MAX_VALUE) return x.toString();\n      return Number(x);\n    }\n\n    s = typeof s === 'undefined' ? 14 : s;\n    return Math.round(x * Math.pow(10, s)) / Math.pow(10, s);\n  };\n  /**\r\n   * Is used for u-substitution. Gets a suitable u for substitution. If for\r\n   * instance a is used in the symbol then it keeps going down the line until\r\n   * one is found that's not in use. If all letters are taken then it\r\n   * starts appending numbers.\r\n   * IMPORTANT! It assumes that the substitution will be undone\r\n   * beore the user gets to interact with the object again.\r\n   * @param {Symbol} symbol\r\n   */\n\n\n  var getU = function getU(symbol) {\n    //start with u\n    var u = 'u',\n        //start with u\n    v = u,\n        //init with u\n    c = 0,\n        //postfix number\n    vars = _variables(symbol); //make sure this variable isn't reserved and isn't in the variable list\n\n\n    while (!(RESERVED.indexOf(v) === -1 && vars.indexOf(v) === -1)) {\n      v = u + c++;\n    } //get an empty slot. It seems easier to just push but the\n    //problem is that we may have some which are created by clearU\n\n\n    for (var i = 0, l = RESERVED.length; i <= l; i++) {\n      //reserved cannot equals false or 0 so we can safely check for a falsy type\n      if (!RESERVED[i]) {\n        RESERVED[i] = v; //reserve the variable\n\n        break;\n      }\n    }\n\n    return v;\n  };\n  /**\r\n   * Clears the u variable so it's no longer reserved\r\n   * @param {String} u\r\n   */\n\n\n  var clearU = function clearU(u) {\n    var indx = RESERVED.indexOf(u);\n    if (indx !== -1) RESERVED[indx] = undefined;\n  };\n  /**\r\n   * Loops through each item in object and calls function with item as param\r\n   * @param {Object|Array} obj\r\n   * @param {Function} fn\r\n   */\n\n\n  var each = function each(obj, fn) {\n    if (isArray(obj)) {\n      var l = obj.length;\n\n      for (var i = 0; i < l; i++) {\n        fn.call(obj, i);\n      }\n    } else {\n      for (var x in obj) {\n        if (obj.hasOwnProperty(x)) fn.call(obj, x);\n      }\n    }\n  };\n  /**\r\n   * Checks to see if a number is an even number\r\n   * @param {Number} num\r\n   * @returns {boolean}\r\n   */\n\n\n  var even = function even(num) {\n    return num % 2 === 0;\n  };\n  /**\r\n   * Checks to see if a fraction is divisible by 2\r\n   * @param {Number} num\r\n   * @returns {boolean}\r\n   */\n\n\n  var evenFraction = function evenFraction(num) {\n    return 1 / (num % 1) % 2 === 0;\n  };\n  /**\r\n   * Strips duplicates out of an array\r\n   * @param {Array} arr\r\n   */\n\n\n  var arrayUnique = function arrayUnique(arr) {\n    var l = arr.length,\n        a = [];\n\n    for (var i = 0; i < l; i++) {\n      var item = arr[i];\n      if (a.indexOf(item) === -1) a.push(item);\n    }\n\n    return a;\n  };\n  /**\r\n   * Gets all the variables in an array of Symbols\r\n   * @param {Symbol[]} arr \r\n   */\n\n\n  var arrayGetVariables = function arrayGetVariables(arr) {\n    var vars = _variables(arr[0], null, null, true); //get all variables\n\n\n    for (var i = 1, l = arr.length; i < l; i++) {\n      vars = vars.concat(_variables(arr[i]));\n    } //remove duplicates\n\n\n    vars = arrayUnique(vars).sort(); //done\n\n    return vars;\n  };\n  /**\r\n   * Removes duplicates from an array. Returns a new array\r\n   * @param {Array} arr\r\n   * @param {Function} condition\r\n   */\n\n\n  var removeDuplicates = function removeDuplicates(arr, condition) {\n    var conditionType = typeof condition;\n\n    if (conditionType !== 'function' || conditionType === 'undefined') {\n      condition = function condition(a, b) {\n        return a === b;\n      };\n    }\n\n    var seen = [];\n\n    while (arr.length) {\n      var a = arr[0]; //only one element left so we're done\n\n      if (arr.length === 1) {\n        seen.push(a);\n        break;\n      }\n\n      var temp = [];\n      seen.push(a); //we already scanned these\n\n      for (var i = 1; i < arr.length; i++) {\n        var b = arr[i]; //if the number is outside the specified tolerance\n\n        if (!condition(a, b)) temp.push(b);\n      } //start over with the remainder\n\n\n      arr = temp;\n    }\n\n    return seen;\n  };\n  /**\r\n   * Reserves the names in an object so they cannot be used as function names\r\n   * @param {Object} obj\r\n   */\n\n\n  var reserveNames = function reserveNames(obj) {\n    var add = function add(item) {\n      if (RESERVED.indexOf(item) === -1) RESERVED.push(item);\n    };\n\n    if (typeof obj === 'string') add(obj);else {\n      each(obj, function (x) {\n        add(x);\n      });\n    }\n  };\n  /**\r\n   * Removes an item from either an array or an object. If the object is an array, the index must be\r\n   * specified after the array. If it's an object then the key must be specified\r\n   * @param {Object|Array} obj\r\n   * @param {Integer} indexOrKey\r\n   */\n\n\n  var _remove = function remove(obj, indexOrKey) {\n    var result;\n\n    if (isArray(obj)) {\n      result = obj.splice(indexOrKey, 1)[0];\n    } else {\n      result = obj[indexOrKey];\n      delete obj[indexOrKey];\n    }\n\n    return result;\n  };\n  /**\r\n   * Creates a temporary block in which one of the global settings is temporarily modified while\r\n   * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\r\n   * answer for a period you would set PARSE2NUMBER to true in the block.\r\n   * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\r\n   * @param {String} setting - The setting being accessed\r\n   * @param {Function} f\r\n   * @param {boolean} opt - The value of the setting in the block\r\n   * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\r\n   */\n\n\n  var block = function block(setting, f, opt, obj) {\n    var current_setting = Settings[setting];\n    Settings[setting] = opt === undefined ? true : !!opt;\n    var retval = f.call(obj);\n    Settings[setting] = current_setting;\n    return retval;\n  };\n  /**\r\n   * provide a mechanism for accessing functions directly. Not yet complete!!!\r\n   * Some functions will return undefined. This can maybe just remove the\r\n   * function object at some point when all functions are eventually\r\n   * housed in the global function object. Returns ALL parser available\r\n   * functions. Parser.functions may not contain all functions\r\n   */\n\n\n  var importFunctions = function importFunctions() {\n    var o = {};\n\n    for (var x in _.functions) {\n      o[x] = _.functions[x][0];\n    }\n\n    return o;\n  };\n  /**\r\n   * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\r\n   * @param {Array|object} obj\r\n   */\n\n\n  var arguments2Array = function arguments2Array(obj) {\n    return [].slice.call(obj);\n  };\n  /**\r\n   * Returns the coefficients of a symbol given a variable. Given ax^2+b^x+c, it divides\r\n   * each nth term by x^n.\r\n   * @param {Symbol} symbol\r\n   * @param {Symbol} wrt\r\n   */\n\n\n  var getCoeffs = function getCoeffs(symbol, wrt, info) {\n    var coeffs = []; //we loop through the symbols and stick them in their respective\n    //containers e.g. y*x^2 goes to index 2\n\n    symbol.each(function (term) {\n      if (term.contains(wrt)) {\n        //we want only the coefficient which in this case will be everything but the variable\n        //e.g. a*b*x -> a*b if the variable to solve for is x\n        var coeff = term.stripVar(wrt),\n            x = _.divide(term.clone(), coeff.clone()),\n            p = x.power.toDecimal();\n      } else {\n        coeff = term;\n        p = 0;\n      }\n\n      var e = coeffs[p]; //if it exists just add it to it\n\n      coeffs[p] = e ? _.add(e, coeff) : coeff;\n    }, true);\n\n    for (var i = 0; i < coeffs.length; i++) {\n      if (!coeffs[i]) coeffs[i] = new Symbol(0);\n    } //fill the holes\n\n\n    return coeffs;\n  };\n  /**\r\n   * As the name states. It forces evaluation of the expression\r\n   * @param {Symbol} symbol\r\n   * @param {Symbol} o\r\n   */\n\n\n  var evaluate = function evaluate(symbol, o) {\n    return block('PARSE2NUMBER', function () {\n      return _.parse(symbol, o);\n    }, true);\n  };\n  /**\r\n   * Converts an array to a vector. Consider moving this to Vector.fromArray\r\n   * @param {String[]|String|Symbol|Number|Number[]} x\r\n   */\n\n\n  var convertToVector = function convertToVector(x) {\n    if (isArray(x)) {\n      var vector = new Vector([]);\n\n      for (var i = 0; i < x.length; i++) {\n        vector.elements.push(convertToVector(x[i]));\n      }\n\n      return vector;\n    } //Ensure that a nerdamer ready object is returned\n\n\n    if (!isSymbol(x)) return _.parse(x);\n    return x;\n  };\n  /**\r\n   * Generates prime numbers up to a specified number\r\n   * @param {Number} upto\r\n   */\n\n\n  var generatePrimes = function generatePrimes(upto) {\n    //get the last prime in the array\n    var last_prime = PRIMES[PRIMES.length - 1] || 2; //no need to check if we've already encountered the number. Just check the cache.\n\n    for (var i = last_prime; i < upto; i++) {\n      if (isPrime(i)) PRIMES.push(i);\n    }\n  };\n  /**\r\n   * Checks to see if all arguments are numbers\r\n   * @param {object} args\r\n   */\n\n\n  var allNumbers = function allNumbers(args) {\n    for (var i = 0; i < args.length; i++) {\n      if (args[i].group !== N) return false;\n    }\n\n    return true;\n  };\n  /*\r\n   * Checks if all arguments aren't just all number but if they\r\n   * are constants as well e.g. pi, e.\r\n   * @param {object} args\r\n   */\n\n\n  var allConstants = function allConstants(args) {\n    for (var i = 0; i < args.length; i++) {\n      if (args[i].isPi() || args[i].isE()) continue;\n      if (!args[i].isConstant(true)) return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Used to multiply two expression in expanded form\r\n   * @param {Symbol} a\r\n   * @param {Symbol} b\r\n   */\n\n\n  var mix = function mix(a, b, opt) {\n    // Flip them if b is a CP or PL and a is not\n    if (b.isComposite() && !a.isComposite() || b.isLinear() && !a.isLinear()) {\n      var _ref = [b, a];\n      a = _ref[0];\n      b = _ref[1];\n    } // A temporary variable to hold the expanded terms\n\n\n    var t = new Symbol(0);\n\n    if (a.isLinear()) {\n      a.each(function (x) {\n        // If b is not a PL or a CP then simply multiply it\n        if (!b.isComposite()) {\n          var term = _.multiply(_.parse(x), _.parse(b));\n\n          t = _.add(t, _.expand(term, opt));\n        } // Otherwise multiply out each term.\n        else if (b.isLinear()) {\n          b.each(function (y) {\n            var term = _.multiply(_.parse(x), _.parse(y));\n\n            var expanded = _.expand(_.parse(term), opt);\n\n            t = _.add(t, expanded);\n          }, true);\n        } else {\n          t = _.add(t, _.multiply(x, _.parse(b)));\n        }\n      }, true);\n    } else {\n      // Just multiply them together\n      t = _.multiply(a, b);\n    } // The expanded function is now t\n\n\n    return t;\n  }; //Exceptions ===================================================================\n  //Is thrown for division by zero\n\n\n  var DivisionByZero = customError('DivisionByZero'); // Is throw if an error occured during parsing\n\n  var ParseError = customError('ParseError'); // Is thrown if the expression results in undefined\n\n  var UndefinedError = customError('UndefinedError'); // Is throw input is out of the function domain\n\n  var OutOfFunctionDomainError = customError('OutOfFunctionDomainError'); // Is throw if a function exceeds x amount of iterations\n\n  var MaximumIterationsReached = customError('MaximumIterationsReached'); // Is thrown if the parser receives an incorrect type\n\n  var NerdamerTypeError = customError('NerdamerTypeError'); // Is thrown if bracket parity is not correct\n\n  var ParityError = customError('ParityError'); // Is thrown if an unexpectd or incorrect operator is encountered\n\n  var OperatorError = customError('OperatorError'); // Is thrown if an index is out of range.\n\n  var OutOfRangeError = customError('OutOfRangeError'); // Is thrown if dimensions are incorrect. Mostly for matrices\n\n  var DimensionError = customError('DimensionError'); // Is thrown if variable name violates naming rule\n\n  var InvalidVariableNameError = customError('InvalidVariableNameError'); // Is thrown if the limits of the library are exceeded for a function\n  // This can be that the function become unstable passed a value\n\n  var ValueLimitExceededError = customError('ValueLimitExceededError'); // Is throw if the value is an incorrect LH or RH value\n\n  var NerdamerValueError = customError('NerdamerValueError'); // Is thrown if the value is an incorrect LH or RH value\n\n  var SolveError = customError('SolveError'); // Is thrown for an infinite loop\n\n  var InfiniteLoopError = customError('InfiniteLoopError'); // Is thrown if an operator is found when there shouldn't be one\n\n  var UnexpectedTokenError = customError('UnexpectedTokenError');\n  var exceptions = {\n    DivisionByZero: DivisionByZero,\n    ParseError: ParseError,\n    OutOfFunctionDomainError: OutOfFunctionDomainError,\n    UndefinedError: UndefinedError,\n    MaximumIterationsReached: MaximumIterationsReached,\n    NerdamerTypeError: NerdamerTypeError,\n    ParityError: ParityError,\n    OperatorError: OperatorError,\n    OutOfRangeError: OutOfRangeError,\n    DimensionError: DimensionError,\n    InvalidVariableNameError: InvalidVariableNameError,\n    ValueLimitExceededError: ValueLimitExceededError,\n    NerdamerValueError: NerdamerValueError,\n    SolveError: SolveError,\n    InfiniteLoopError: InfiniteLoopError,\n    UnexpectedTokenError: UnexpectedTokenError\n  }; //Math2 ========================================================================\n  //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\n  //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the\n  //functions within are pretty self-explanatory.\n  //NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\n\n  var Math2 = {\n    csc: function csc(x) {\n      return 1 / Math.sin(x);\n    },\n    sec: function sec(x) {\n      return 1 / Math.cos(x);\n    },\n    cot: function cot(x) {\n      return 1 / Math.tan(x);\n    },\n    acsc: function acsc(x) {\n      return Math.asin(1 / x);\n    },\n    asec: function asec(x) {\n      return Math.acos(1 / x);\n    },\n    acot: function acot(x) {\n      return Math.PI / 2 - Math.atan(x);\n    },\n    // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\n    erf: function erf(x) {\n      var t = 1 / (1 + 0.5 * Math.abs(x));\n      var result = 1 - t * Math.exp(-x * x - 1.26551223 + t * (1.00002368 + t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 + t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 + t * (-0.82215223 + t * 0.17087277)))))))));\n      return x >= 0 ? result : -result;\n    },\n    diff: function diff(f) {\n      var h = 0.001;\n\n      var derivative = function derivative(x) {\n        return (f(x + h) - f(x - h)) / (2 * h);\n      };\n\n      return derivative;\n    },\n    median: function median() {\n      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n\n      values.sort(function (a, b) {\n        return a - b;\n      });\n      var half = Math.floor(values.length / 2);\n      if (values.length % 2) return values[half];\n      return (values[half - 1] + values[half]) / 2.0;\n    },\n\n    /*\r\n     * Reverses continued fraction calculation\r\n     * @param {obj} contd\r\n     * @returns {Number}\r\n     */\n    fromContinued: function fromContinued(contd) {\n      var arr = contd.fractions.slice();\n      var e = 1 / arr.pop();\n\n      for (var i = 0, l = arr.length; i < l; i++) {\n        e = 1 / (arr.pop() + e);\n      }\n\n      return contd.sign * (contd.whole + e);\n    },\n\n    /*\r\n     * Calculates continued fractions\r\n     * @param {Number} n\r\n     * @param {Number} x The number of places\r\n     * @returns {Number}\r\n     */\n    continuedFraction: function continuedFraction(n, x) {\n      x = x || 20;\n      var sign = Math.sign(n);\n      /*store the sign*/\n\n      var absn = Math.abs(n);\n      /*get the absolute value of the number*/\n\n      var whole = Math.floor(absn);\n      /*get the whole*/\n\n      var ni = absn - whole;\n      /*subtract the whole*/\n\n      var c = 0;\n      /*the counter to keep track of iterations*/\n\n      var done = false;\n      var epsilon = 1e-14;\n      var max = 1e7;\n      var e, w;\n      var retval = {\n        whole: whole,\n        sign: sign,\n        fractions: []\n      };\n      /*start calculating*/\n\n      while (!done && ni !== 0) {\n        /*invert and get the whole*/\n        e = 1 / ni;\n        w = Math.floor(e);\n\n        if (w > max) {\n          /*this signals that we may have already gone too far*/\n          var d = Math2.fromContinued(retval) - n;\n          if (d <= Number.EPSILON) break;\n        }\n        /*add to result*/\n\n\n        retval.fractions.push(w);\n        /*move the ni to the decimal*/\n\n        ni = e - w;\n        /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\n\n        if (ni <= epsilon || c >= x - 1) done = true;\n        c++;\n      }\n      /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\n\n\n      var idx = retval.fractions.length - 1;\n\n      if (retval.fractions[idx] === 1) {\n        retval.fractions.pop();\n        /*increase the last one by one*/\n\n        retval.fractions[--idx]++;\n      }\n\n      return retval;\n    },\n    bigpow: function bigpow(n, p) {\n      if (!(n instanceof Frac)) n = Frac.create(n);\n      if (!(p instanceof Frac)) p = Frac.create(p);\n      var retval = new Frac(0);\n\n      if (p.isInteger()) {\n        retval.num = n.num.pow(p.toString());\n        retval.den = n.den.pow(p.toString());\n      } else {\n        var num = Frac.create(Math.pow(n.num, p.num));\n        var den = Frac.create(Math.pow(n.den, p.num));\n        retval.num = Math2.nthroot(num, p.den.toString());\n        retval.den = Math2.nthroot(den, p.den);\n      }\n\n      return retval;\n    },\n    //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\n    gamma: function gamma(z) {\n      var g = 7;\n      var C = [0.99999999999980993, 676.5203681218851, -1259.1392167224028, 771.32342877765313, -176.61502916214059, 12.507343278686905, -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7];\n      if (z < 0.5) return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));else {\n        z -= 1;\n        var x = C[0];\n\n        for (var i = 1; i < g + 2; i++) {\n          x += C[i] / (z + i);\n        }\n\n        var t = z + g + 0.5;\n        return Math.sqrt(2 * Math.PI) * Math.pow(t, z + 0.5) * Math.exp(-t) * x;\n      }\n    },\n    //factorial\n    bigfactorial: function bigfactorial(x) {\n      var retval = new bigInt(1);\n\n      for (var i = 2; i <= x; i++) {\n        retval = retval.times(i);\n      }\n\n      return new Frac(retval);\n    },\n    //https://en.wikipedia.org/wiki/Logarithm#Calculation\n    bigLog: function bigLog(x) {\n      varn\n      if (CACHE[x]) {\n        return Frac.quick.apply(null, CACHE[x].split('/'));\n      }\n\n      x = new Frac(x);\n      var n = 80;\n      var retval = new Frac(0);\n      var a = x.subtract(new Frac(1));\n      var b = x.add(new Frac(1));\n\n      for (var i = 0; i < n; i++) {\n        var t = new Frac(2 * i + 1);\n        var k = Math2.bigpow(a.divide(b), t);\n        var r = t.clone().invert().multiply(k);\n        retval = retval.add(r);\n      }\n\n      return retval.multiply(new Frac(2));\n    },\n    //the factorial function but using the big library instead\n    factorial: function factorial(x) {\n      var is_int = x % 1 === 0;\n      /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\n\n      if (is_int && x < 0) return NaN;\n      if (!is_int) return Math2.gamma(x + 1);\n      var retval = 1;\n\n      for (var i = 2; i <= x; i++) {\n        retval = retval * i;\n      }\n\n      return retval;\n    },\n    //double factorial\n    //http://mathworld.wolfram.com/DoubleFactorial.html\n    dfactorial: function dfactorial(x) {\n      if (isInt(x)) {\n        var even = x % 2 === 0;\n        /* If x = even then n = x/2 else n = (x-1)/2*/\n\n        var n = even ? x / 2 : (x + 1) / 2;\n        /*the return value*/\n\n        var r = new Frac(1);\n        /*start the loop*/\n\n        if (even) for (var i = 1; i <= n; i++) {\n          r = r.multiply(new Frac(2).multiply(new Frac(i)));\n        } else for (var i = 1; i <= n; i++) {\n          r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\n        }\n      } else {\n        /*Not yet extended to bigNum*/\n        r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * Math2.gamma(1 + x / 2);\n      }\n      /*done*/\n\n\n      return r;\n    },\n    GCD: function GCD() {\n      var args = arrayUnique([].slice.call(arguments).map(function (x) {\n        return Math.abs(x);\n      })).sort(),\n          a = Math.abs(args.shift()),\n          n = args.length;\n\n      while (n-- > 0) {\n        var b = Math.abs(args.shift());\n\n        while (true) {\n          a %= b;\n\n          if (a === 0) {\n            a = b;\n            break;\n          }\n\n          b %= a;\n          if (b === 0) break;\n          ;\n        }\n      }\n\n      return a;\n    },\n    QGCD: function QGCD() {\n      var args = [].slice.call(arguments);\n      var a = args[0];\n\n      for (var i = 1; i < args.length; i++) {\n        var b = args[i];\n        var sign = a.isNegative() && b.isNegative() ? -1 : 1;\n        a = b.gcd(a);\n        if (sign < 0) a.negate();\n      }\n\n      return a;\n    },\n    LCM: function LCM(a, b) {\n      return a * b / Math2.GCD(a, b);\n    },\n    //pow but with the handling of negative numbers\n    //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\n    pow: function pow(b, e) {\n      if (b < 0) {\n        if (Math.abs(e) < 1) {\n          /*nth root of a negative number is imaginary when n is even*/\n          if (1 / e % 2 === 0) return NaN;\n          return -Math.pow(Math.abs(b), e);\n        }\n      }\n\n      return Math.pow(b, e);\n    },\n    factor: function factor(n) {\n      n = Number(n);\n      var sign = Math.sign(n);\n      /*store the sign*/\n\n      /*move the number to absolute value*/\n\n      n = Math.abs(n);\n      var ifactors = Math2.ifactor(n);\n      var factors = new Symbol();\n      factors.symbols = {};\n      factors.group = CB;\n\n      for (var x in ifactors) {\n        var factor = new Symbol(1);\n        factor.group = P;\n        /*cheat a little*/\n\n        factor.value = x;\n        factor.power = new Symbol(ifactors[x]);\n        factors.symbols[x] = factor;\n      }\n\n      factors.updateHash();\n\n      if (n === 1) {\n        factors = new Symbol(n);\n      }\n      /*put back the sign*/\n\n\n      if (sign < 0) factors.negate();\n      return factors;\n    },\n\n    /**\r\n     * Uses trial division\r\n     * @param {Integer} n - the number being factored\r\n     * @param {object} factors -  the factors object\r\n     * @returns {object}\r\n     */\n    sfactor: function sfactor(n, factors) {\n      factors = factors || {};\n      var r = Math.floor(Math.sqrt(n));\n      var lcprime = PRIMES[PRIMES.length - 1];\n      /*a one-time cost... Hopefully ... And don't bother for more than a million*/\n\n      /*takes too long*/\n\n      if (r > lcprime && n < 1e6) generatePrimes(r);\n      var l = PRIMES.length;\n\n      for (var i = 0; i < l; i++) {\n        var prime = PRIMES[i];\n        /*trial division*/\n\n        while (n % prime === 0) {\n          n = n / prime;\n          factors[prime] = (factors[prime] || 0) + 1;\n        }\n      }\n\n      if (n > 1) factors[n] = 1;\n      return factors;\n    },\n\n    /**\r\n     * Pollard's rho\r\n     * @param {Integer} n\r\n     * @returns {object}\r\n     */\n    ifactor: function ifactor(n) {\n      var input = new bigInt(n);\n      n = String(n);\n      if (n === '0') return {\n        '0': 1\n      };\n      n = new bigInt(n);\n      /*convert to bigInt for safety*/\n\n      var sign = n.sign ? -1 : 1;\n      n = n.abs();\n      var factors = {};\n      /*factor object being returned.*/\n\n      if (n.lt('65536')) {\n        /*less than 2^16 just use trial division*/\n        factors = Math2.sfactor(n, factors);\n      } else {\n        var add = function add(e) {\n          if (!e.isPrime()) {\n            factors = Math2.sfactor(e, factors);\n          } else factors[e] = (factors[e] || 0) + 1;\n        };\n\n        try {\n          //set a safety\n          var max = 1e3;\n          var safety = 0;\n\n          while (!n.abs().equals(1)) {\n            if (n.isPrime()) {\n              add(n);\n              break;\n            } else {\n              var factor;\n\n              (function () {\n                var rho = function rho(c) {\n                  var xf = new bigInt(c),\n                      cz = 2,\n                      x = new bigInt(c),\n                      factor = new bigInt(1);\n\n                  while (factor.equals(1)) {\n                    for (var i = 0; i <= cz && factor.equals(1); i++) {\n                      //trigger the safety\n                      if (safety++ > max) throw new Error('stopping');\n                      x = x.pow(2).add(1).mod(n);\n                      factor = bigInt.gcd(x.minus(xf).abs(), n);\n                    }\n\n                    cz = cz * 2;\n                    xf = x;\n                  }\n\n                  if (factor.equals(n)) {\n                    return rho(c + 1);\n                  }\n\n                  return factor;\n                };\n\n                factor = rho(2);\n                add(factor);\n                /*divide out the factor*/\n\n                n = n.divide(factor);\n              })();\n            }\n          }\n        } catch (e) {\n          //reset factors\n          factors = {};\n          add(input);\n        }\n      }\n      /*put the sign back*/\n\n\n      if (sign === -1) {\n        var sm = arrayMin(keys(factors));\n        /*/get the smallest number*/\n\n        factors['-' + sm] = factors[sm];\n        delete factors[sm];\n      }\n\n      return factors;\n    },\n    //factors a number into rectangular box. If sides are primes that this will be\n    //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\n    boxfactor: function boxfactor(n, max) {\n      max = max || 200; //stop after this number of iterations\n\n      var c,\n          r,\n          d = Math.floor(5 / 12 * n),\n          //the divisor\n      i = 0,\n          //number of iterations\n      safety = false;\n\n      while (true) {\n        c = Math.floor(n / d);\n        r = n % d;\n        if (r === 0) break; //we're done\n\n        if (safety) return [n, 1];\n        d = Math.max(r, d - r);\n        i++;\n        safety = i > max;\n      }\n\n      return [c, d, i];\n    },\n    fib: function fib(n) {\n      var sign = Math.sign(n);\n      n = Math.abs(n);\n      sign = even(n) ? sign : Math.abs(sign);\n      var a = 0,\n          b = 1,\n          f = 1;\n\n      for (var i = 2; i <= n; i++) {\n        f = a + b;\n        a = b;\n        b = f;\n      }\n\n      return f * sign;\n    },\n    mod: function mod(x, y) {\n      return x % y;\n    },\n    //http://mathworld.wolfram.com/IntegerPart.html\n    integer_part: function integer_part(x) {\n      var sign = Math.sign(x);\n      return sign * Math.floor(Math.abs(x));\n    },\n    simpson: function simpson(f, a, b, step) {\n      var get_value = function get_value(f, x, side) {\n        var v = f(x);\n        var d = 0.000000000001;\n\n        if (isNaN(v)) {\n          v = f(side === 1 ? x + d : x - d);\n        }\n\n        return v;\n      };\n\n      step = step || 0.0001; //calculate the number of intervals\n\n      var n = Math.abs(Math.floor((b - a) / step)); //simpson's rule requires an even number of intervals. If it's not then add 1\n\n      if (n % 2 !== 0) n++; //get the interval size\n\n      var dx = (b - a) / n; //get x0\n\n      var retval = get_value(f, a, 1); //get the middle part 4x1+2x2+4x3 ...\n      //but first set a flag to see if it's even or odd.\n      //The first one is odd so we start there\n\n      var even = false; //get x1\n\n      var xi = a + dx; //the coefficient\n\n      var c, k; //https://en.wikipedia.org/wiki/Simpson%27s_rule\n\n      for (var i = 1; i < n; i++) {\n        c = even ? 2 : 4;\n        k = c * get_value(f, xi, 1);\n        retval += k; //flip the even flag\n\n        even = !even; //increment xi\n\n        xi += dx;\n      } //add xn\n\n\n      return (retval + get_value(f, xi, 2)) * (dx / 3);\n    },\n\n    /**\r\n     * https://github.com/scijs/integrate-adaptive-simpson\r\n     * @param {Function} f - the function being integrated\r\n     * @param {Number} a - lower bound\r\n     * @param {Number} b - upper bound\r\n     * @param {Number} tol - step width\r\n     * @param {Number} maxdepth\r\n     * @returns {Number}\r\n     */\n    num_integrate: function num_integrate(f, a, b, tol, maxdepth) {\n      if (maxdepth < 0) throw new Error('max depth cannot be negative');\n      /* This algorithm adapted from pseudocode in:*/\n\n      /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\n\n      function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n        if (state.nanEncountered) {\n          return NaN;\n        }\n\n        var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n        h = b - a;\n        f1 = f(a + h * 0.25);\n        f2 = f(b - h * 0.25);\n        /* Simple check for NaN:*/\n\n        if (isNaN(f1)) {\n          state.nanEncountered = true;\n          return;\n        }\n        /* Simple check for NaN:*/\n\n\n        if (isNaN(f2)) {\n          state.nanEncountered = true;\n          return;\n        }\n\n        sl = h * (fa + 4 * f1 + fm) / 12;\n        sr = h * (fm + 4 * f2 + fb) / 12;\n        s2 = sl + sr;\n        err = (s2 - V0) / 15;\n\n        if (state.maxDepthCount > 1000 * maxdepth) {\n          return;\n        }\n\n        if (depth > maxdepth) {\n          state.maxDepthCount++;\n          return s2 + err;\n        } else if (Math.abs(err) < tol) {\n          return s2 + err;\n        } else {\n          m = a + h * 0.5;\n          V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n\n          if (isNaN(V1)) {\n            state.nanEncountered = true;\n            return NaN;\n          }\n\n          V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n\n          if (isNaN(V2)) {\n            state.nanEncountered = true;\n            return NaN;\n          }\n\n          return V1 + V2;\n        }\n      }\n\n      function integrate(f, a, b, tol, maxdepth) {\n        var state = {\n          maxDepthCount: 0,\n          nanEncountered: false\n        };\n\n        if (tol === undefined) {\n          tol = 1e-9;\n        }\n\n        if (maxdepth === undefined) {\n          /*Issue #458 - This was lowered because of performance issues. */\n\n          /*This was suspected from before but is now confirmed with this issue*/\n          maxdepth = 45;\n        }\n\n        var fa = f(a);\n        var fm = f(0.5 * (a + b));\n        var fb = f(b);\n        var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n        var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n\n        if (state.maxDepthCount > 0) {\n          warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n        }\n\n        if (state.nanEncountered) {\n          throw new Error('Function does not converge over interval!');\n        }\n\n        return result;\n      }\n\n      var retval;\n\n      try {\n        retval = integrate(f, a, b, tol, maxdepth);\n      } catch (e) {\n        /*fallback to non-adaptive*/\n        return Math2.simpson(f, a, b);\n      }\n\n      return nround(retval, 12);\n    },\n    //https://en.wikipedia.org/wiki/Trigonometric_integral\n    //CosineIntegral\n    Ci: function Ci(x) {\n      var n = 20,\n\n      /*roughly Euler–Mascheroni*/\n      g = 0.5772156649015329,\n          sum = 0;\n\n      for (var i = 1; i < n; i++) {\n        /*cache 2n*/\n        var n2 = 2 * i;\n        sum += Math.pow(-1, i) * Math.pow(x, n2) / (n2 * Math2.factorial(n2));\n      }\n\n      return Math.log(x) + g + sum;\n    },\n\n    /*SineIntegral*/\n    Si: function Si(x) {\n      var n = 20,\n          sum = 0;\n\n      for (var i = 0; i < n; i++) {\n        var n2 = 2 * i;\n        sum += Math.pow(-1, i) * Math.pow(x, n2 + 1) / ((n2 + 1) * Math2.factorial(n2 + 1));\n      }\n\n      return sum;\n    },\n\n    /*ExponentialIntegral*/\n    Ei: function Ei(x) {\n      if (Number(x) === 0) return -Infinity;\n      var n = 30,\n          g = 0.5772156649015328606,\n\n      /*roughly Euler–Mascheroni*/\n      sum = 0;\n\n      for (var i = 1; i < n; i++) {\n        sum += Math.pow(x, i) / (i * Math2.factorial(i));\n      }\n\n      return g + Math.abs(Math.log(x)) + sum;\n    },\n\n    /*Hyperbolic Sine Integral*/\n\n    /*http://mathworld.wolfram.com/Shi.html*/\n    Shi: function Shi(x) {\n      var n = 30,\n          sum = 0,\n          k,\n          t;\n\n      for (var i = 0; i < n; i++) {\n        k = 2 * i;\n        t = k + 1;\n        sum += Math.pow(x, t) / (t * t * Math2.factorial(k));\n      }\n\n      return sum;\n    },\n\n    /*the cosine integral function*/\n    Chi: function Chi(x) {\n      var dx, g, f;\n      dx = 0.001;\n      g = 0.5772156649015328606;\n\n      f = function f(t) {\n        return (Math.cosh(t) - 1) / t;\n      };\n\n      return Math.log(x) + g + Math2.num_integrate(f, 0.002, x, dx);\n    },\n\n    /*the log integral*/\n    Li: function Li(x) {\n      return Math2.Ei(Math2.bigLog(x));\n    },\n\n    /*the gamma incomplete function*/\n    gamma_incomplete: function gamma_incomplete(n, x) {\n      var t = n - 1,\n          sum = 0,\n          x = x || 0;\n\n      for (var i = 0; i < t; i++) {\n        sum += Math.pow(x, i) / Math2.factorial(i);\n      }\n\n      return Math2.factorial(t) * Math.exp(-x) * sum;\n    },\n\n    /*\r\n     * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n     * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\r\n     * if x > 0 then 1\r\n     * if x == 0 then 1/2\r\n     * if x < 0 then 0\r\n     */\n    step: function step(x) {\n      if (x > 0) return 1;\n      if (x < 0) return 0;\n      return 0.5;\n    },\n\n    /*\r\n     * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n     * Specification : http://mathworld.wolfram.com/RectangleFunction.html\r\n     * if |x| > 1/2 then 0\r\n     * if |x| == 1/2 then 1/2\r\n     * if |x| < 1/2 then 1\r\n     */\n    rect: function rect(x) {\n      var x = Math.abs(x);\n      if (x === 0.5) return x;\n      if (x > 0.5) return 0;\n      return 1;\n    },\n\n    /*\r\n     * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n     * Specification : http://mathworld.wolfram.com/SincFunction.html\r\n     * if x == 0 then 1\r\n     * otherwise sin(x)/x\r\n     */\n    sinc: function sinc(x) {\n      if (x.equals(0)) return 1;\n      return Math.sin(x) / x;\n    },\n\n    /*\r\n     * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n     * Specification : http://mathworld.wolfram.com/TriangleFunction.html\r\n     * if |x| >= 1 then 0\r\n     * if |x| < then 1-|x|\r\n     */\n    tri: function tri(x) {\n      x = Math.abs(x);\n      if (x >= 1) return 0;\n      return 1 - x;\n    },\n    //https://en.wikipedia.org/wiki/Nth_root_algorithm\n    nthroot: function nthroot(A, n) {\n      /*make sure the input is of type Frac*/\n      if (!(A instanceof Frac)) A = new Frac(A.toString());\n      if (!(n instanceof Frac)) n = new Frac(n.toString());\n      if (n.equals(1)) return A;\n      /*begin algorithm*/\n\n      var xk = A.divide(new Frac(2));\n      /*x0*/\n\n      var e = new Frac(1e-15);\n      var dk, dk0, d0;\n      var a = n.clone().invert(),\n          b = n.subtract(new Frac(1));\n\n      do {\n        var powb = Math2.bigpow(xk, b);\n        var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\n        dk = Frac.create(dk_dec);\n        if (d0) break;\n        xk = xk.add(dk);\n        /*check to see if there's no change from the last xk*/\n\n        var dk_dec = dk.toDecimal();\n        d0 = dk0 ? dk0 === dk_dec : false;\n        dk0 = dk_dec;\n      } while (dk.abs().gte(e));\n\n      return xk;\n    },\n\n    /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\n\n    /*Just the square root function but big :)*/\n    sqrt: function sqrt(n) {\n      if (!(n instanceof Frac)) n = new Frac(n);\n      var xn, d, ld, same_delta;\n      var c = 0;\n      /*counter*/\n\n      var done = false;\n      var delta = new Frac(1e-20);\n      xn = n.divide(new Frac(2));\n      var safety = 1000;\n\n      do {\n        /*break if we're not converging*/\n        if (c > safety) throw new Error('Unable to calculate square root for ' + n);\n        xn = xn.add(n.divide(xn)).divide(new Frac(2));\n        xn = new Frac(xn.decimal(30));\n        /*get the difference from the true square*/\n\n        d = n.subtract(xn.multiply(xn));\n        /*if the square of the calculated number is close enough to the number*/\n\n        /*we're getting the square root or the last delta was the same as the new delta*/\n\n        /*then we're done*/\n\n        same_delta = ld ? ld.equals(d) : false;\n        if (d.clone().abs().lessThan(delta) || same_delta) done = true;\n        /*store the calculated delta*/\n\n        ld = d;\n        c++;\n        /*increase the counter*/\n      } while (!done);\n\n      return xn;\n    }\n  }; //link the Math2 object to Settings.FUNCTION_MODULES\n\n  Settings.FUNCTION_MODULES.push(Math2);\n  reserveNames(Math2); //reserve the names in Math2\n  //Polyfills ====================================================================\n  //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\n\n  Math.sign = Math.sign || function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n\n  Math.cosh = Math.cosh || function (x) {\n    var y = Math.exp(x);\n    return (y + 1 / y) / 2;\n  };\n\n  Math.sech = Math.sech || function (x) {\n    return 1 / Math.cosh(x);\n  };\n\n  Math.csch = Math.csch || function (x) {\n    return 1 / Math.sinh(x);\n  };\n\n  Math.coth = Math.coth || function (x) {\n    return 1 / Math.tanh(x);\n  };\n\n  Math.sinh = Math.sinh || function (x) {\n    var y = Math.exp(x);\n    return (y - 1 / y) / 2;\n  };\n\n  Math.tanh = Math.tanh || function (x) {\n    if (x === Infinity) {\n      return 1;\n    } else if (x === -Infinity) {\n      return -1;\n    } else {\n      var y = Math.exp(2 * x);\n      return (y - 1) / (y + 1);\n    }\n  };\n\n  Math.asinh = Math.asinh || function (x) {\n    if (x === -Infinity) {\n      return x;\n    } else {\n      return Math.log(x + Math.sqrt(x * x + 1));\n    }\n  };\n\n  Math.acosh = Math.acosh || function (x) {\n    return Math.log(x + Math.sqrt(x * x - 1));\n  };\n\n  Math.atanh = Math.atanh || function (x) {\n    return Math.log((1 + x) / (1 - x)) / 2;\n  };\n\n  Math.log10 = Math.log10 || function (x) {\n    return Math.log(x) * Math.LOG10E;\n  };\n\n  Math.trunc = Math.trunc || function (x) {\n    if (isNaN(x)) {\n      return NaN;\n    }\n\n    if (x > 0) {\n      return Math.floor(x);\n    }\n\n    return Math.ceil(x);\n  }; //Global functions =============================================================\n\n  /**\r\n   * This method will return a hash or a text representation of a Symbol, Matrix, or Vector.\r\n   * If all else fails it *assumes* the object has a toString method and will call that.\r\n   *\r\n   * @param {Object} obj\r\n   * @param {String} option get is as a hash\r\n   * @param {int} useGroup\r\n   * @returns {String}\r\n   */\n\n\n  function _text(obj, option, useGroup, decp) {\n    var asHash = option === 'hash',\n        //whether to wrap numbers in brackets\n    wrapCondition = undefined,\n        opt = asHash ? undefined : option,\n        asDecimal = opt === 'decimal' || opt === 'decimals';\n    if (asDecimal && typeof decp === 'undefined') decp = Settings.DEFAULT_DECP;\n\n    function toString(obj) {\n      switch (option) {\n        case 'decimals':\n        case 'decimal':\n          wrapCondition = wrapCondition || function (str) {\n            return false;\n          };\n\n          return obj.valueOf();\n\n        case 'recurring':\n          wrapCondition = wrapCondition || function (str) {\n            return str.indexOf(\"'\") !== -1;\n          };\n\n          var str = obj.toString(); //verify that the string is actually a fraction\n\n          var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n          if (frac.length === 0) return str; //split the fraction into the numerator and denominator\n\n          var parts = frac[0].split('/');\n          var negative = false;\n          var m = Number(parts[0]);\n\n          if (m < 0) {\n            m = -m;\n            negative = true;\n          }\n\n          var n = Number(parts[1]);\n          if (!n) n = 1; //https://softwareengineering.stackexchange.com/questions/192070/what-is-a-efficient-way-to-find-repeating-decimal#comment743574_192081\n\n          var quotient = Math.floor(m / n),\n              c = 10 * (m - quotient * n);\n          quotient = quotient.toString() + \".\";\n\n          while (c && c < n) {\n            c *= 10;\n            quotient += \"0\";\n          }\n\n          var digits = \"\",\n              passed = [],\n              i = 0;\n\n          while (true) {\n            if (typeof passed[c] !== 'undefined') {\n              var prefix = digits.slice(0, passed[c]),\n                  cycle = digits.slice(passed[c]),\n                  result = quotient + prefix + \"'\" + cycle + \"'\";\n              return (negative ? \"-\" : \"\") + result.replace(\"'0'\", \"\").replace(/\\.$/, \"\");\n            }\n\n            var q = Math.floor(c / n),\n                r = c - q * n;\n            passed[c] = i;\n            digits += q.toString();\n            i += 1;\n            c = 10 * r;\n          }\n\n        case 'mixed':\n          wrapCondition = wrapCondition || function (str) {\n            return str.indexOf('/') !== -1;\n          };\n\n          var str = obj.toString(); //verify that the string is actually a fraction\n\n          var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n          if (frac.length === 0) return str; //split the fraction into the numerator and denominator\n\n          var parts = frac[0].split('/');\n          var numer = new bigInt(parts[0]);\n          var denom = new bigInt(parts[1]);\n          if (denom.equals(0)) denom = new bigInt(1); //return the quotient plus the remainder\n\n          var divmod = numer.divmod(denom);\n          var quotient = divmod.quotient;\n          var remainder = divmod.remainder;\n          var operator = parts[0][0] === '-' || quotient.equals(0) || remainder.equals(0) ? '' : '+';\n          return (quotient.equals(0) ? '' : quotient.toString()) + operator + (remainder.equals(0) ? '' : remainder.toString() + '/' + parts[1]);\n\n        case 'scientific':\n          wrapCondition = wrapCondition || function (str) {\n            return false;\n          };\n\n          return new Scientific(obj.valueOf()).toString(Settings.SCIENTIFIC_MAX_DECIMAL_PLACES);\n\n        default:\n          wrapCondition = wrapCondition || function (str) {\n            return str.indexOf('/') !== -1;\n          };\n\n          return obj.toString();\n      }\n    } //if the object is a symbol\n\n\n    if (isSymbol(obj)) {\n      var multiplier = '',\n          power = '',\n          sign = '',\n          group = obj.group || useGroup,\n          value = obj.value; //if the value is to be used as a hash then the power and multiplier need to be suppressed\n\n      if (!asHash) {\n        //use asDecimal to get the object back as a decimal\n        var om = toString(obj.multiplier);\n\n        if (om == '-1' && String(obj.multiplier) === '-1') {\n          sign = '-';\n          om = '1';\n        } //only add the multiplier if it's not 1\n\n\n        if (om != '1') multiplier = om; //use asDecimal to get the object back as a decimal\n\n        var p = obj.power ? toString(obj.power) : ''; //only add the multiplier\n\n        if (p != '1') {\n          //is it a symbol\n          if (isSymbol(p)) {\n            power = _text(p, opt);\n          } else {\n            power = p;\n          }\n        }\n      }\n\n      switch (group) {\n        case N:\n          multiplier = ''; //round if requested\n\n          var m = decp && asDecimal ? obj.multiplier.toDecimal(decp) : toString(obj.multiplier); //if it's numerical then all we need is the multiplier\n\n          value = String(obj.multiplier) == '-1' ? '1' : m;\n          power = '';\n          break;\n\n        case PL:\n          value = obj.collectSymbols().map(function (x) {\n            var txt = _text(x, opt, useGroup, decp);\n\n            if (txt == '0') txt = '';\n            return txt;\n          }).sort().join('+').replace(/\\+\\-/g, '-');\n          break;\n\n        case CP:\n          value = obj.collectSymbols().map(function (x) {\n            var txt = _text(x, opt, useGroup, decp);\n\n            if (txt == '0') txt = '';\n            return txt;\n          }).sort().join('+').replace(/\\+\\-/g, '-');\n          break;\n\n        case CB:\n          value = obj.collectSymbols(function (symbol) {\n            var g = symbol.group; //both groups will already be in brackets if their power is greater than 1\n            //so skip it.\n\n            if ((g === PL || g === CP) && symbol.power.equals(1) && symbol.multiplier.equals(1)) {\n              return inBrackets(_text(symbol, opt));\n            }\n\n            return _text(symbol, opt);\n          }).join('*');\n          break;\n\n        case EX:\n          var pg = obj.previousGroup,\n              pwg = obj.power.group; //PL are the exception. It's simpler to just collect and set the value\n\n          if (pg === PL) value = obj.collectSymbols(_text, opt).join('+').replace('+-', '-');\n\n          if (!(pg === N || pg === S || pg === FN) && !asHash) {\n            value = inBrackets(value);\n          }\n\n          if ((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\n            power = inBrackets(power);\n          }\n\n          break;\n      }\n\n      if (group === FN) {\n        value = obj.fname + inBrackets(obj.args.map(function (symbol) {\n          return _text(symbol, opt);\n        }).join(','));\n      } //TODO: Needs to be more efficient. Maybe.\n\n\n      if (group === FN && obj.fname in CUSTOM_OPERATORS) {\n        var a = _text(obj.args[0]);\n\n        var b = _text(obj.args[1]);\n\n        if (obj.args[0].isComposite()) //preserve the brackets\n          a = inBrackets(a);\n        if (obj.args[1].isComposite()) //preserve the brackets\n          b = inBrackets(b);\n        value = a + CUSTOM_OPERATORS[obj.fname] + b;\n      } //wrap the power since / is less than ^\n      //TODO: introduce method call isSimple\n\n\n      if (power && group !== EX && wrapCondition(power)) {\n        power = inBrackets(power);\n      } //the following groups are held together by plus or minus. They can be raised to a power or multiplied\n      //by a multiplier and have to be in brackets to preserve the order of precedence\n\n\n      if ((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-') || (group === CB || group === CP || group === PL) && power && power != '1' || !asHash && group === P && value == -1 || obj.fname === PARENTHESIS) {\n        value = inBrackets(value);\n      }\n\n      if (decp && (option === 'decimal' || option === 'decimals' && multiplier)) {\n        multiplier = nround(multiplier, decp);\n      } //add the sign back\n\n\n      var c = sign + multiplier;\n      if (multiplier && wrapCondition(multiplier)) c = inBrackets(c);\n      if (power < 0) power = inBrackets(power); //add the multiplication back\n\n      if (multiplier) c = c + '*';\n\n      if (power) {\n        if (value === 'e' && Settings.E_TO_EXP) {\n          return c + 'exp' + inBrackets(power);\n        }\n\n        power = Settings.POWER_OPERATOR + power;\n      } //this needs serious rethinking. Must fix\n\n\n      if (group === EX && value.charAt(0) === '-') {\n        value = inBrackets(value);\n      }\n\n      var cv = c + value;\n\n      if (obj.parens) {\n        cv = inBrackets(cv);\n      }\n\n      return cv + power;\n    } else if (isVector(obj)) {\n      var l = obj.elements.length,\n          c = [];\n\n      for (var i = 0; i < l; i++) {\n        c.push(obj.elements[i].text(option));\n      }\n\n      return '[' + c.join(',') + ']';\n    } else {\n      try {\n        return obj.toString();\n      } catch (e) {\n        return '';\n      }\n    }\n  }\n  /**\r\n   * Calculates prime factors for a number. It first checks if the number\r\n   * is a prime number. If it's not then it will calculate all the primes \r\n   * for that number.\r\n   * @param {int} num\r\n   * @returns {Array}\r\n   */\n\n\n  function primeFactors(num) {\n    if (isPrime(num)) {\n      return [num];\n    }\n\n    var l = num,\n        i = 1,\n        factors = [],\n        epsilon = 2.2204460492503130808472633361816E-16;\n\n    while (i < l) {\n      var quotient = num / i;\n      var whole = Math.floor(quotient);\n      var remainder = quotient - whole;\n\n      if (remainder <= epsilon && i > 1) {\n        // If the prime wasn't found but calculated then save it and\n        // add it as a factor.\n        if (isPrime(i)) {\n          if (PRIMES.indexOf(i) === -1) {\n            PRIMES.push(i);\n          }\n\n          factors.push(i);\n        } // Check if the remainder is a prime\n\n\n        if (isPrime(whole)) {\n          factors.push(whole);\n          break;\n        }\n\n        l = whole;\n      }\n\n      i++;\n    }\n\n    return factors.sort(function (a, b) {\n      return a - b;\n    });\n  }\n\n  ;\n  primeFactors(314146179365); //Expression ===================================================================\n\n  /**\r\n   * This is what nerdamer returns. It's sort of a wrapper around the symbol class and\r\n   * provides the user with some useful functions. If you want to provide the user with extra\r\n   * library functions then add them to this class's prototype.\r\n   * @param {Symbol} symbol\r\n   * @returns {Expression} wraps around the Symbol class\r\n   */\n\n  function Expression(symbol) {\n    //we don't want arrays wrapped\n    this.symbol = symbol;\n  }\n  /**\r\n   * Returns stored expression at index. For first index use 1 not 0.\r\n   * @param {bool} asType\r\n   * @param {Integer} expression_number\r\n   */\n\n\n  Expression.getExpression = function (expression_number, asType) {\n    if (expression_number === 'last' || !expression_number) expression_number = EXPRESSIONS.length;\n    if (expression_number === 'first') expression_number = 1;\n    var index = expression_number - 1,\n        expression = EXPRESSIONS[index],\n        retval = expression ? new Expression(expression) : expression;\n    return retval;\n  };\n\n  Expression.prototype = {\n    /**\r\n     * Returns the text representation of the expression\r\n     * @param {String} opt - option of formatting numbers\r\n     * @param {Number} n The number of significant figures\r\n     * @returns {String}\r\n     */\n    text: function text(opt, n) {\n      n = n || Settings.EXPRESSION_DECP;\n      opt = opt || 'decimals';\n      if (this.symbol.text_) return this.symbol.text_(opt);\n      return _text(this.symbol, opt, undefined, n);\n    },\n\n    /**\r\n     * Returns the latex representation of the expression\r\n     * @param {String} option - option for formatting numbers\r\n     * @returns {String}\r\n     */\n    latex: function latex(option) {\n      if (this.symbol.latex) return this.symbol.latex(option);\n      return LaTeX.latex(this.symbol, option);\n    },\n    valueOf: function valueOf() {\n      return this.symbol.valueOf();\n    },\n\n    /**\r\n     * Evaluates the expression and tries to reduce it to a number if possible.\r\n     * If an argument is given in the form of %{integer} it will evaluate that expression.\r\n     * Other than that it will just use it's own text and reparse\r\n     * @returns {Expression}\r\n     */\n    evaluate: function evaluate() {\n      // Don't evaluate an empty vector\n      if (isVector(this.symbol) && this.symbol.dimensions() === 0) {\n        return this;\n      }\n\n      var first_arg = arguments[0],\n          expression,\n          idx = 1; //Enable getting of expressions using the % so for example %1 should get the first expression\n\n      if (typeof first_arg === 'string') {\n        expression = first_arg.charAt(0) === '%' ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\n      } else if (first_arg instanceof Expression || isSymbol(first_arg)) {\n        expression = first_arg.text();\n      } else {\n        expression = this.symbol.text();\n        idx--;\n      }\n\n      var subs = arguments[idx] || {};\n      var retval = new Expression(block('PARSE2NUMBER', function () {\n        return _.parse(expression, subs);\n      }, true));\n      return retval;\n    },\n\n    /**\r\n     * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of\r\n     * the default alphabetical order\r\n     * @param vars {Array}\r\n     */\n    buildFunction: function buildFunction(vars) {\n      return Build.build(this.symbol, vars);\n    },\n\n    /**\r\n     * Checks to see if the expression is just a plain old number\r\n     * @returns {boolean}\r\n     */\n    isNumber: function isNumber() {\n      return isNumericSymbol(this.symbol);\n    },\n\n    /**\r\n     * Checks to see if the expression is infinity\r\n     * @returns {boolean}\r\n     */\n    isInfinity: function isInfinity() {\n      return Math.abs(this.symbol.multiplier) === Infinity;\n    },\n\n    /**\r\n     * Checks to see if the expression contains imaginary numbers\r\n     * @returns {boolean}\r\n     */\n    isImaginary: function isImaginary() {\n      return evaluate(_.parse(this.symbol)).isImaginary();\n    },\n\n    /**\r\n     * Returns all the variables in the expression\r\n     * @returns {Array}\r\n     */\n    variables: function variables() {\n      return _variables(this.symbol);\n    },\n    toString: function toString() {\n      try {\n        if (isArray(this.symbol)) return '[' + this.symbol.toString() + ']';\n        return this.symbol.toString();\n      } catch (e) {\n        return '';\n      }\n    },\n    //forces the symbol to be returned as a decimal\n    toDecimal: function toDecimal(prec) {\n      Settings.precision = prec;\n\n      var dec = _text(this.symbol, 'decimals');\n\n      Settings.precision = undefined;\n      return dec;\n    },\n    //checks to see if the expression is a fraction\n    isFraction: function isFraction() {\n      return _isFraction(this.symbol);\n    },\n    //checks to see if the symbol is a multivariate polynomial\n    isPolynomial: function isPolynomial() {\n      return this.symbol.isPoly();\n    },\n    //performs a substitution\n    sub: function sub(symbol, for_symbol) {\n      return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\n    },\n    operation: function operation(otype, symbol) {\n      if (isExpression(symbol)) symbol = symbol.symbol;else if (!isSymbol(symbol)) symbol = _.parse(symbol);\n      return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\n    },\n    add: function add(symbol) {\n      return this.operation('add', symbol);\n    },\n    subtract: function subtract(symbol) {\n      return this.operation('subtract', symbol);\n    },\n    multiply: function multiply(symbol) {\n      return this.operation('multiply', symbol);\n    },\n    divide: function divide(symbol) {\n      return this.operation('divide', symbol);\n    },\n    pow: function pow(symbol) {\n      return this.operation('pow', symbol);\n    },\n    expand: function expand() {\n      return new Expression(_.expand(this.symbol));\n    },\n    each: function each(callback, i) {\n      if (this.symbol.each) this.symbol.each(callback, i);else if (isArray(this.symbol)) {\n        for (var i = 0; i < this.symbol.length; i++) {\n          callback.call(this.symbol, this.symbol[i], i);\n        }\n      } else callback.call(this.symbol);\n    },\n    eq: function eq(value) {\n      if (!isSymbol(value)) value = _.parse(value);\n\n      try {\n        var d = _.subtract(this.symbol.clone(), value);\n\n        return d.equals(0);\n      } catch (e) {\n        return false;\n      }\n\n      ;\n    },\n    lt: function lt(value) {\n      if (!isSymbol(value)) value = _.parse(value);\n\n      try {\n        var d = evaluate(_.subtract(this.symbol.clone(), value));\n        return d.lessThan(0);\n      } catch (e) {\n        return false;\n      }\n\n      ;\n    },\n    gt: function gt(value) {\n      if (!isSymbol(value)) value = _.parse(value);\n\n      try {\n        var d = evaluate(_.subtract(this.symbol.clone(), value));\n        return d.greaterThan(0);\n      } catch (e) {\n        return false;\n      }\n    },\n    gte: function gte(value) {\n      return this.gt(value) || this.eq(value);\n    },\n    lte: function lte(value) {\n      return this.lt(value) || this.eq(value);\n    },\n    numerator: function numerator() {\n      return new Expression(this.symbol.getNum());\n    },\n    denominator: function denominator() {\n      return new Expression(this.symbol.getDenom());\n    },\n    hasFunction: function hasFunction(f) {\n      return this.symbol.containsFunction(f);\n    },\n    contains: function contains(variable) {\n      return this.symbol.contains(variable);\n    }\n  }; //Aliases\n\n  Expression.prototype.toTeX = Expression.prototype.latex; //Scientific ===================================================================\n\n  /*\r\n   * Javascript has the toExponential method but this allows you to work with string and therefore any number of digits of your choosing\r\n   * For example Scientific('464589498449496467924197545625247695464569568959124568489548454');\r\n   */\n\n  function Scientific(num) {\n    if (!(this instanceof Scientific)) return new Scientific(num);\n    num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\n    //remove the sign\n\n    if (num.startsWith('-')) {\n      this.sign = -1; //remove the sign\n\n      num = num.substr(1, num.length);\n    } else {\n      this.sign = 1;\n    }\n\n    if (Scientific.isScientific(num)) {\n      this.fromScientific(num);\n    } else {\n      this.convert(num);\n    }\n\n    return this;\n  }\n\n  Scientific.prototype = {\n    fromScientific: function fromScientific(num) {\n      var parts = String(num).toLowerCase().split('e');\n      this.coeff = parts[0];\n      this.exponent = parts[1];\n      return this;\n    },\n    convert: function convert(num) {\n      //get wholes and decimals\n      var parts = num.split('.'); //make zero go away\n\n      var w = parts[0] || '';\n      var d = parts[1] || ''; //convert zero to blank strings\n\n      w = Scientific.removeLeadingZeroes(w);\n      d = Scientific.removeTrailingZeroes(d); //find the location of the decimal place which is right after the wholes\n\n      var dot_location = w.length; //add them together so we can move the dot\n\n      var n = w + d; //find the next number\n\n      var zeroes = Scientific.leadingZeroes(n).length; //set the exponent\n\n      this.exponent = dot_location - (zeroes + 1); //set the coeff but first remove leading zeroes\n\n      var coeff = Scientific.removeLeadingZeroes(n);\n      this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0'); //the coeff decimal places\n\n      var dec = this.coeff.split('.')[1] || ''; //if it's undefined or zero it's going to blank\n\n      this.decp = dec === '0' ? 0 : dec.length; //decimals\n\n      this.dec = d; //wholes\n\n      this.wholes = w;\n      return this;\n    },\n    round: function round(num) {\n      var n = this.copy();\n      num = Number(num); //cast to number for safety\n      //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\n      //we can round based on this\n\n      if (num === 0) n.coeff = n.coeff.charAt(0);else {\n        //get up to n-1 digits\n        var rounded = this.coeff.substring(0, num + 1); //get the next two\n\n        var next_two = this.coeff.substring(num + 1, num + 3); //the extra digit\n\n        var ed = next_two.charAt(0);\n        if (next_two.charAt(1) > 4) ed++;\n        n.coeff = rounded + ed;\n      }\n      return n;\n    },\n    copy: function copy() {\n      var n = new Scientific(0);\n      n.coeff = this.coeff;\n      n.exponent = this.exponent;\n      n.sign = this.sign;\n      return n;\n    },\n    toString: function toString(n) {\n      var retval;\n\n      if (Settings.SCIENTIFIC_IGNORE_ZERO_EXPONENTS && this.exponent === 0 && this.decp < n) {\n        if (this.decp === 0) retval = this.wholes;else retval = this.coeff;\n      } else {\n        var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, Math.min(n, this.decp || 1));\n        retval = this.exponent === 0 ? coeff : coeff + 'e' + this.exponent;\n      }\n\n      return (this.sign === -1 ? '-' : '') + retval;\n    }\n  };\n\n  Scientific.isScientific = function (num) {\n    return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\n  };\n\n  Scientific.leadingZeroes = function (num) {\n    var match = num.match(/^(0*).*$/);\n    return match ? match[1] : '';\n  };\n\n  Scientific.removeLeadingZeroes = function (num) {\n    var match = num.match(/^0*(.*)$/);\n    return match ? match[1] : '';\n  };\n\n  Scientific.removeTrailingZeroes = function (num) {\n    var match = num.match(/0*$/);\n    return match ? num.substring(0, num.length - match[0].length) : '';\n  };\n\n  Scientific.round = function (c, n) {\n    var coeff = nround(c, n);\n    var m = String(coeff).split('.').pop();\n    var d = n - m.length; //if we're asking for more significant figures\n\n    if (d > 0) {\n      coeff = coeff + new Array(d + 1).join(0);\n    }\n\n    return coeff;\n  }; //Frac =========================================================================\n\n\n  function Frac(n) {\n    if (n instanceof Frac) return n;\n    if (n === undefined) return this;\n\n    try {\n      if (isInt(n)) {\n        try {\n          this.num = bigInt(n);\n          this.den = bigInt(1);\n        } catch (e) {\n          return Frac.simple(n);\n        }\n      } else {\n        var frac = n instanceof bigDec ? Fraction.quickConversion(n) : Fraction.convert(n);\n        this.num = new bigInt(frac[0]);\n        this.den = new bigInt(frac[1]);\n      }\n    } catch (e) {\n      return Frac.simple(n);\n    }\n  } //safe to use with negative numbers or other types\n\n\n  Frac.create = function (n) {\n    if (n instanceof Frac) return n;\n    n = n.toString();\n    var is_neg = n.charAt(0) === '-'; //check if it's negative\n\n    if (is_neg) n = n.substr(1, n.length - 1); //remove the sign\n\n    var frac = new Frac(n); //put the sign back\n\n    if (is_neg) frac.negate();\n    return frac;\n  };\n\n  Frac.isFrac = function (o) {\n    return o instanceof Frac;\n  };\n\n  Frac.quick = function (n, d) {\n    var frac = new Frac();\n    frac.num = new bigInt(n);\n    frac.den = new bigInt(d);\n    return frac;\n  };\n\n  Frac.simple = function (n) {\n    var nstr = String(scientificToDecimal(n)),\n        m_dc = nstr.split('.'),\n        num = m_dc.join(''),\n        den = 1,\n        l = (m_dc[1] || '').length;\n\n    for (var i = 0; i < l; i++) {\n      den += '0';\n    }\n\n    var frac = Frac.quick(num, den);\n    return frac.simplify();\n  };\n\n  Frac.prototype = {\n    multiply: function multiply(m) {\n      if (this.isOne()) {\n        return m.clone();\n      }\n\n      if (m.isOne()) {\n        return this.clone();\n      }\n\n      var c = this.clone();\n      c.num = c.num.multiply(m.num);\n      c.den = c.den.multiply(m.den);\n      return c.simplify();\n    },\n    divide: function divide(m) {\n      if (m.equals(0)) throw new DivisionByZero('Division by zero not allowed!');\n      return this.clone().multiply(m.clone().invert()).simplify();\n    },\n    subtract: function subtract(m) {\n      return this.clone().add(m.clone().neg());\n    },\n    neg: function neg() {\n      this.num = this.num.multiply(-1);\n      return this;\n    },\n    add: function add(m) {\n      var n1 = this.den,\n          n2 = m.den,\n          c = this.clone();\n      var a = c.num,\n          b = m.num;\n\n      if (n1.equals(n2)) {\n        c.num = a.add(b);\n      } else {\n        c.num = a.multiply(n2).add(b.multiply(n1));\n        c.den = n1.multiply(n2);\n      }\n\n      return c.simplify();\n    },\n    mod: function mod(m) {\n      var a = this.clone(),\n          b = m.clone(); //make their denominators even and return the mod of their numerators\n\n      a.num = a.num.multiply(b.den);\n      a.den = a.den.multiply(b.den);\n      b.num = b.num.multiply(this.den);\n      b.den = b.den.multiply(this.den);\n      a.num = a.num.mod(b.num);\n      return a.simplify();\n    },\n    simplify: function simplify() {\n      var gcd = bigInt.gcd(this.num, this.den);\n      this.num = this.num.divide(gcd);\n      this.den = this.den.divide(gcd);\n      return this;\n    },\n    clone: function clone() {\n      var m = new Frac();\n      m.num = new bigInt(this.num);\n      m.den = new bigInt(this.den);\n      return m;\n    },\n    decimal: function decimal(prec) {\n      var sign = this.num.isNegative() ? '-' : '';\n\n      if (this.num.equals(this.den)) {\n        return '1';\n      } //go plus one for rounding\n\n\n      prec = prec || Settings.PRECISION;\n      prec++;\n      var narr = [],\n          n = this.num.abs(),\n          d = this.den;\n\n      for (var i = 0; i < prec; i++) {\n        var w = n.divide(d),\n            //divide out whole\n        r = n.subtract(w.multiply(d)); //get remainder\n\n        narr.push(w);\n        if (r.equals(0)) break;\n        n = r.times(10); //shift one dec place\n      }\n\n      var whole = narr.shift();\n\n      if (narr.length === 0) {\n        return sign + whole.toString();\n      }\n\n      if (i === prec) {\n        var lt = []; //get the last two so we can round it\n\n        for (var i = 0; i < 2; i++) {\n          lt.unshift(narr.pop());\n        } //put the last digit back by rounding the last two\n\n\n        narr.push(Math.round(lt.join('.')));\n      }\n\n      var dec = whole.toString() + '.' + narr.join('');\n      return sign + dec;\n    },\n    toDecimal: function toDecimal(prec) {\n      prec = prec || Settings.PRECISION;\n\n      if (prec) {\n        return this.decimal(prec);\n      } else {\n        return this.num / this.den;\n      }\n    },\n    qcompare: function qcompare(n) {\n      return [this.num.multiply(n.den), n.num.multiply(this.den)];\n    },\n    equals: function equals(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].equals(q[1]);\n    },\n    absEquals: function absEquals(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].abs().equals(q[1]);\n    },\n    //lazy check to be fixed. Sufficient for now but will cause future problems\n    greaterThan: function greaterThan(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].gt(q[1]);\n    },\n    gte: function gte(n) {\n      return this.greaterThan(n) || this.equals(n);\n    },\n    lte: function lte(n) {\n      return this.lessThan(n) || this.equals(n);\n    },\n    lessThan: function lessThan(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].lt(q[1]);\n    },\n    isInteger: function isInteger() {\n      return this.den.equals(1);\n    },\n    negate: function negate() {\n      this.num = this.num.multiply(-1);\n      return this;\n    },\n    invert: function invert() {\n      var t = this.den; //why invert 0/1? It'll become 1/0 and that's a lie.\n\n      if (!this.num.equals(0)) {\n        var isnegative = this.num.isNegative();\n        this.den = this.num.abs();\n        this.num = t;\n        if (isnegative) this.num = this.num.multiply(-1);\n      }\n\n      return this;\n    },\n    isOne: function isOne() {\n      return this.num.equals(1) && this.den.equals(1);\n    },\n    sign: function sign() {\n      return this.num.isNegative() ? -1 : 1;\n    },\n    abs: function abs() {\n      this.num = this.num.abs();\n      return this;\n    },\n    gcd: function gcd(f) {\n      return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\n    },\n    toString: function toString() {\n      return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\n    },\n    valueOf: function valueOf() {\n      //            if(this.num == 24) throw new Error(999)\n      if (Settings.USE_BIG) return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));\n      var retval = this.num / this.den;\n      return retval;\n    },\n    isNegative: function isNegative() {\n      return this.toDecimal() < 0;\n    }\n  }; //Symbol =======================================================================\n\n  /**\r\n   * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group.\r\n   * All symbols except for \"numbers (group N)\" have a power.\r\n   * @class Primary data type for the Parser.\r\n   * @param {String} obj\r\n   * @returns {Symbol}\r\n   */\n\n  function Symbol(obj) {\n    var isInfinity = obj === 'Infinity'; // This enables the class to be instantiated without the new operator\n\n    if (!(this instanceof Symbol)) {\n      return new Symbol(obj);\n    } // Convert big numbers to a string\n\n\n    if (obj instanceof bigDec) {\n      obj = obj.toString();\n    } //define numeric symbols\n\n\n    if (/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(obj) || obj instanceof bigDec) {\n      this.group = N;\n      this.value = CONST_HASH;\n      this.multiplier = new Frac(obj);\n    } //define symbolic symbols\n    else {\n      this.group = S;\n      validateName(obj);\n      this.value = obj;\n      this.multiplier = new Frac(1);\n      this.imaginary = obj === Settings.IMAGINARY;\n      this.isInfinity = isInfinity;\n    } //As of 6.0.0 we switched to infinite precision so all objects have a power\n    //Although this is still redundant in constants, it simplifies the logic in\n    //other parts so we'll keep it\n\n\n    this.power = new Frac(1); // Added to silence the strict warning.\n\n    return this;\n  }\n  /**\r\n   * Returns vanilla imaginary symbol\r\n   * @returns {Symbol}\r\n   */\n\n\n  Symbol.imaginary = function () {\n    var s = new Symbol(Settings.IMAGINARY);\n    s.imaginary = true;\n    return s;\n  };\n  /**\r\n   * Return nerdamer's representation of Infinity\r\n   * @param {int} negative -1 to return negative infinity\r\n   * @returns {Symbol}\r\n   */\n\n\n  Symbol.infinity = function (negative) {\n    var v = new Symbol('Infinity');\n    if (negative === -1) v.negate();\n    return v;\n  };\n\n  Symbol.shell = function (group, value) {\n    var symbol = new Symbol(value);\n    symbol.group = group;\n    symbol.symbols = {};\n    symbol.length = 0;\n    return symbol;\n  }; //sqrt(x) -> x^(1/2)\n\n\n  Symbol.unwrapSQRT = function (symbol, all) {\n    var p = symbol.power;\n\n    if (symbol.fname === SQRT && (symbol.isLinear() || all)) {\n      var t = symbol.args[0].clone();\n      t.power = t.power.multiply(new Frac(1 / 2));\n      t.multiplier = t.multiplier.multiply(symbol.multiplier);\n      symbol = t;\n      if (all) symbol.power = p.multiply(new Frac(1 / 2));\n    }\n\n    return symbol;\n  };\n\n  Symbol.hyp = function (a, b) {\n    a = a || new Symbol(0);\n    b = b || new Symbol(0);\n    return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\n  }; //converts to polar form array\n\n\n  Symbol.toPolarFormArray = function (symbol) {\n    var re, im, r, theta;\n    re = symbol.realpart();\n    im = symbol.imagpart();\n    r = Symbol.hyp(re, im);\n    theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\n    return [r, theta];\n  }; //removes parentheses\n\n\n  Symbol.unwrapPARENS = function (symbol) {\n    if (symbol.fname === '') {\n      var r = symbol.args[0];\n      r.power = r.power.multiply(symbol.power);\n      r.multiplier = r.multiplier.multiply(symbol.multiplier);\n      if (symbol.fname === '') return Symbol.unwrapPARENS(r);\n      return r;\n    }\n\n    return symbol;\n  }; //quickly creates a Symbol\n\n\n  Symbol.create = function (value, power) {\n    power = power === undefined ? 1 : power;\n    return _.parse('(' + value + ')^(' + power + ')');\n  };\n\n  Symbol.prototype = {\n    /**\r\n     * Gets nth root accounting for rounding errors\r\n     * @param {Number} n\r\n     * @return {Number}\r\n     */\n    getNth: function getNth(n) {\n      // First calculate the root\n      var root = evaluate(_.pow(_.parse(this.multiplier), _.parse(n).invert())); // Round of any errors\n\n      var rounded = _.parse(nround(root)); // Reverse the root\n\n\n      var e = evaluate(_.pow(rounded, _.parse(n))); // If the rounded root equals the original number then we're good \n\n      if (e.equals(_.parse(this.multiplier))) {\n        return rounded;\n      } // Otherwise return the unrounded version\n\n\n      return root;\n    },\n\n    /**\r\n     * Checks if symbol is to the nth power\r\n     * @returns {Boolean}\r\n     */\n    isToNth: function isToNth(n) {\n      // Start by check in the multiplier for squareness\n      // First get the root but round it because currently we still depend \n      var root = this.getNth(n);\n      var nthMultiplier = isInt(root);\n      var nthPower;\n\n      if (this.group === CB) {\n        // Start by assuming that all will be square.\n        nthPower = true; // All it takes is for one of the symbols to not have an even power\n        // e.g. x^n1*y^n2 requires that both n1 and n2 are even\n\n        this.each(function (x) {\n          var isNth = x.isToNth(n);\n\n          if (!isNth) {\n            nthPower = false;\n          }\n        });\n      } else {\n        // Check if the power is divisible by n if it's not a number.\n        nthPower = this.group === N ? true : isInt(_.divide(_.parse(this.power), _.parse(n)));\n      }\n\n      return nthMultiplier && nthPower;\n    },\n\n    /**\r\n     * Checks if a symbol is square\r\n     * @return {Boolean}\r\n     */\n    isSquare: function isSquare() {\n      return this.isToNth(2);\n    },\n\n    /**\r\n     * Checks if a symbol is cube\r\n     * @return {Boolean}\r\n     */\n    isCube: function isCube() {\n      return this.isToNth(3);\n    },\n\n    /**\r\n     * Checks if a symbol is a bare variable\r\n     * @return {Boolean}\r\n     */\n    isSimple: function isSimple() {\n      return this.power.equals(1) && this.multiplier.equals(1);\n    },\n\n    /**\r\n     * Simplifies the power of the symbol\r\n     * @returns {Symbol} a clone of the symbol\r\n     */\n    powSimp: function powSimp() {\n      if (this.group === CB) {\n        var powers = [],\n            sign = this.multiplier.sign();\n        this.each(function (x) {\n          var p = x.power; //why waste time if I can't do anything anyway\n\n          if (isSymbol(p) || p.equals(1)) return this.clone();\n          powers.push(p);\n        });\n        var min = new Frac(arrayMin(powers)); //handle the coefficient\n        //handle the multiplier\n\n        var sign = this.multiplier.sign(),\n            m = this.multiplier.clone().abs(),\n            mfactors = Math2.ifactor(m); //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\n        //we can then reduce it to 2*3*5*(15)^2\n\n        var out_ = new Frac(1);\n        var in_ = new Frac(1);\n\n        for (var x in mfactors) {\n          var n = new Frac(mfactors[x]);\n\n          if (!n.lessThan(min)) {\n            n = n.divide(min).subtract(new Frac(1));\n            in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\n          }\n\n          out_ = out_.multiply(_.parse(inBrackets(x) + '^' + inBrackets(n)).multiplier);\n        }\n\n        var t = new Symbol(in_);\n        this.each(function (x) {\n          x = x.clone();\n          x.power = x.power.divide(min);\n          t = _.multiply(t, x);\n        });\n\n        var xt = _.symfunction(PARENTHESIS, [t]);\n\n        xt.power = min;\n        xt.multiplier = sign < 0 ? out_.negate() : out_;\n        return xt;\n      }\n\n      return this.clone();\n    },\n\n    /**\r\n     * Checks to see if two functions are of equal value\r\n     * @param {Symbol} symbol\r\n     */\n    equals: function equals(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.value === symbol.value && this.power.equals(symbol.power) && this.multiplier.equals(symbol.multiplier) && this.group === symbol.group;\n    },\n    abs: function abs() {\n      var e = this.clone();\n      e.multiplier.abs();\n      return e;\n    },\n    // Greater than\n    gt: function gt(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n    },\n    // Greater than\n    gte: function gte(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.equals(symbol) || this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n    },\n    // Less than\n    lt: function lt(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n    },\n    // Less than\n    lte: function lte(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.equals(symbol) || this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n    },\n\n    /**\r\n     * Because nerdamer doesn't group symbols by polynomials but\r\n     * rather a custom grouping method, this has to be\r\n     * reinserted in order to make use of most algorithms. This function\r\n     * checks if the symbol meets the criteria of a polynomial.\r\n     * @param {bool} multivariate\r\n     * @returns {boolean}\r\n     */\n    isPoly: function isPoly(multivariate) {\n      var g = this.group,\n          p = this.power; //the power must be a integer so fail if it's not\n\n      if (!isInt(p) || p < 0) return false; //constants and first orders\n\n      if (g === N || g === S || this.isConstant(true)) return true;\n\n      var vars = _variables(this);\n\n      if (g === CB && vars.length === 1) {\n        //the variable is assumed the only one that was found\n        var v = vars[0]; //if no variable then guess what!?!? We're done!!! We have a polynomial.\n\n        if (!v) return true;\n\n        for (var x in this.symbols) {\n          var sym = this.symbols[x]; //sqrt(x)\n\n          if (sym.group === FN && !sym.args[0].isConstant()) return false;\n          if (!sym.contains(v) && !sym.isConstant(true)) return false;\n        }\n\n        return true;\n      } //PL groups. These only fail if a power is not an int\n      //this should handle cases such as x^2*t\n\n\n      if (this.isComposite() || g === CB && multivariate) {\n        //fail if we're not checking for multivariate polynomials\n        if (!multivariate && vars.length > 1) return false; //loop though the symbols and check if they qualify\n\n        for (var x in this.symbols) {\n          //we've already the symbols if we're not checking for multivariates at this point\n          //so we check the sub-symbols\n          if (!this.symbols[x].isPoly(multivariate)) return false;\n        }\n\n        return true;\n      } else return false;\n      /*\r\n       //all tests must have passed so we must be dealing with a polynomial\r\n       return true;\r\n       */\n\n    },\n    //removes the requested variable from the symbol and returns the remainder\n    stripVar: function stripVar(x, exclude_x) {\n      var retval;\n      if ((this.group === PL || this.group === S) && this.value === x) retval = new Symbol(exclude_x ? 0 : this.multiplier);else if (this.group === CB && this.isLinear()) {\n        retval = new Symbol(1);\n        this.each(function (s) {\n          if (!s.contains(x, true)) retval = _.multiply(retval, s.clone());\n        });\n        retval.multiplier = retval.multiplier.multiply(this.multiplier);\n      } else if (this.group === CP && !this.isLinear()) {\n        retval = new Symbol(this.multiplier);\n      } else if (this.group === CP && this.isLinear()) {\n        retval = new Symbol(0);\n        this.each(function (s) {\n          if (!s.contains(x)) {\n            var t = s.clone();\n            t.multiplier = t.multiplier.multiply(this.multiplier);\n            retval = _.add(retval, t);\n          }\n        }); //BIG TODO!!! It doesn't make much sense\n\n        if (retval.equals(0)) retval = new Symbol(this.multiplier);\n      } else if (this.group === EX && this.power.contains(x, true)) {\n        retval = new Symbol(this.multiplier);\n      } else if (this.group === FN && this.contains(x)) {\n        retval = new Symbol(this.multiplier);\n      } else //wth? This should technically be the multiplier.\n        //Unfortunately this method wasn't very well thought out :`(.\n        //should be: retval = new Symbol(this.multiplier);\n        //use: ((1+x^2)*sqrt(-1+x^2))^(-1) for correction.\n        //this will break a bunch of unit tests so be ready to for the long haul\n        retval = this.clone();\n      return retval;\n    },\n    //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a].\n    toArray: function toArray(v, arr) {\n      arr = arr || {\n        arr: [],\n        add: function add(x, idx) {\n          var e = this.arr[idx];\n          this.arr[idx] = e ? _.add(e, x) : x;\n        }\n      };\n      var g = this.group;\n\n      if (g === S && this.contains(v)) {\n        arr.add(new Symbol(this.multiplier), this.power);\n      } else if (g === CB) {\n        var a = this.stripVar(v),\n            x = _.divide(this.clone(), a.clone());\n\n        var p = x.isConstant() ? 0 : x.power;\n        arr.add(a, p);\n      } else if (g === PL && this.value === v) {\n        this.each(function (x, p) {\n          arr.add(x.stripVar(v), p);\n        });\n      } else if (g === CP) {\n        //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\n        //each case is handled above\n        this.each(function (x) {\n          x.toArray(v, arr);\n        });\n      } else if (this.contains(v)) {\n        throw new NerdamerTypeError('Cannot convert to array! Exiting');\n      } else {\n        arr.add(this.clone(), 0); //it's just a constant wrt to v\n      } //fill the holes\n\n\n      arr = arr.arr; //keep only the array since we don't need the object anymore\n\n      for (var i = 0; i < arr.length; i++) {\n        if (!arr[i]) arr[i] = new Symbol(0);\n      }\n\n      return arr;\n    },\n    //checks to see if a symbol contans a function\n    hasFunc: function hasFunc(v) {\n      var fn_group = this.group === FN || this.group === EX;\n      if (fn_group && !v || fn_group && this.contains(v)) return true;\n\n      if (this.symbols) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].hasFunc(v)) return true;\n        }\n      }\n\n      return false;\n    },\n    sub: function sub(a, b) {\n      a = !isSymbol(a) ? _.parse(a) : a.clone();\n      b = !isSymbol(b) ? _.parse(b) : b.clone();\n      if (a.group === N || a.group === P) err('Cannot substitute a number. Must be a variable');\n      var same_pow = false,\n          a_is_unit_multiplier = a.multiplier.equals(1),\n          m = this.multiplier.clone(),\n          retval;\n      /*\r\n       * In order to make the substitution the bases have to first match take\r\n       * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\r\n       * In both cases the first condition is that the bases match so we begin there\r\n       * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\r\n       */\n\n      if (this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) {\n        //we cleared the first hurdle but a subsitution may not be possible just yet\n        if (a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\n          if (a.isLinear()) {\n            retval = b;\n          } else if (a.power.equals(this.power)) {\n            retval = b;\n            same_pow = true;\n          }\n\n          if (a.multiplier.equals(this.multiplier)) m = new Frac(1);\n        }\n      } //the next thing is to handle CB\n      else if (this.group === CB || this.previousGroup === CB) {\n        retval = new Symbol(1);\n        this.each(function (x) {\n          var subbed = _.parse(x.sub(a, b)); //parse it again for safety\n\n\n          retval = _.multiply(retval, subbed);\n        });\n      } else if (this.isComposite()) {\n        var symbol = this.clone();\n\n        if (a.isComposite() && symbol.isComposite() && symbol.isLinear() && a.isLinear()) {\n          var find = function find(stack, needle) {\n            for (var x in stack.symbols) {\n              var sym = stack.symbols[x]; //if the symbol equals the needle or it's within the sub-symbols we're done\n\n              if (sym.isComposite() && find(sym, needle) || sym.equals(needle)) return true;\n            }\n\n            return false;\n          }; //go fish\n\n\n          for (var x in a.symbols) {\n            if (!find(symbol, a.symbols[x])) return symbol.clone();\n          }\n\n          retval = _.add(_.subtract(symbol.clone(), a), b);\n        } else {\n          retval = new Symbol(0);\n          symbol.each(function (x) {\n            retval = _.add(retval, x.sub(a, b));\n          });\n        }\n      } else if (this.group === EX) {\n        // the parsed value could be a function so parse and sub\n        retval = _.parse(this.value).sub(a, b);\n      } else if (this.group === FN) {\n        var nargs = [];\n\n        for (var i = 0; i < this.args.length; i++) {\n          var arg = this.args[i];\n          if (!isSymbol(arg)) arg = _.parse(arg);\n          nargs.push(arg.sub(a, b));\n        }\n\n        retval = _.symfunction(this.fname, nargs);\n      } //if we did manage a substitution\n\n\n      if (retval) {\n        if (!same_pow) {\n          //substitute the power\n          var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power); //now raise the symbol to that power\n\n          retval = _.pow(retval, p);\n        } //transfer the multiplier\n\n\n        retval.multiplier = retval.multiplier.multiply(m); //done\n\n        return retval;\n      } //if all else fails\n\n\n      return this.clone();\n    },\n    isMonomial: function isMonomial() {\n      if (this.group === S) return true;\n\n      if (this.group === CB) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].group !== S) return false;\n        }\n      } else return false;\n\n      return true;\n    },\n    isPi: function isPi() {\n      return this.group === S && this.value === 'pi';\n    },\n    sign: function sign() {\n      return this.multiplier.sign();\n    },\n    isE: function isE() {\n      return this.value === 'e';\n    },\n    isSQRT: function isSQRT() {\n      return this.fname === SQRT;\n    },\n    isConstant: function isConstant(check_all, check_symbols) {\n      if (check_symbols && this.group === CB) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].isConstant(true)) return true;\n        }\n      }\n\n      if (check_all === 'functions' && this.isComposite()) {\n        var isConstant = true;\n        this.each(function (x) {\n          if (!x.isConstant(check_all, check_symbols)) {\n            isConstant = false;\n          }\n        }, true);\n        return isConstant;\n      }\n\n      if (check_all === 'all' && (this.isPi() || this.isE())) {\n        return true;\n      }\n\n      if (check_all && this.group === FN) {\n        for (var i = 0; i < this.args.length; i++) {\n          if (!this.args[i].isConstant(check_all)) return false;\n        }\n\n        return true;\n      }\n\n      if (check_all) return isNumericSymbol(this);\n      return this.value === CONST_HASH;\n    },\n    //the symbols is imaginary if\n    //1. n*i\n    //2. a+b*i\n    //3. a*i\n    isImaginary: function isImaginary() {\n      if (this.imaginary) return true;else if (this.symbols) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].isImaginary()) return true;\n        }\n      }\n      return false;\n    },\n\n    /**\r\n     * Returns the real part of a symbol\r\n     * @returns {Symbol}\r\n     */\n    realpart: function realpart() {\n      if (this.isConstant()) {\n        return this.clone();\n      } else if (this.imaginary) return new Symbol(0);else if (this.isComposite()) {\n        var retval = new Symbol(0);\n        this.each(function (x) {\n          retval = _.add(retval, x.realpart());\n        });\n        return retval;\n      } else if (this.isImaginary()) return new Symbol(0);\n\n      return this.clone();\n    },\n\n    /*\r\n     * Return imaginary part of a symbol\r\n     * @returns {Symbol}\r\n     */\n    imagpart: function imagpart() {\n      if (this.group === S && this.isImaginary()) return new Symbol(this.multiplier);\n\n      if (this.isComposite()) {\n        var retval = new Symbol(0);\n        this.each(function (x) {\n          retval = _.add(retval, x.imagpart());\n        });\n        return retval;\n      }\n\n      if (this.group === CB) return this.stripVar(Settings.IMAGINARY);\n      return new Symbol(0);\n    },\n    isInteger: function isInteger() {\n      return this.isConstant() && this.multiplier.isInteger();\n    },\n    isLinear: function isLinear(wrt) {\n      if (wrt) {\n        if (this.isConstant()) return true;\n\n        if (this.group === S) {\n          if (this.value === wrt) return this.power.equals(1);else return true;\n        }\n\n        if (this.isComposite() && this.power.equals(1)) {\n          for (var x in this.symbols) {\n            if (!this.symbols[x].isLinear(wrt)) return false;\n          }\n\n          return true;\n        }\n\n        if (this.group === CB && this.symbols[wrt]) return this.symbols[wrt].isLinear(wrt);\n        return false;\n      } else return this.power.equals(1);\n    },\n\n    /**\r\n     * Checks to see if a symbol has a function by a specified name or within a specified list\r\n     * @param {String|String[]} names\r\n     * @returns {Boolean}\r\n     */\n    containsFunction: function containsFunction(names) {\n      if (typeof names === 'string') names = [names];\n      if (this.group === FN && names.indexOf(this.fname) !== -1) return true;\n\n      if (this.symbols) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].containsFunction(names)) return true;\n        }\n      }\n\n      return false;\n    },\n    multiplyPower: function multiplyPower(p2) {\n      //leave out 1\n      if (this.group === N && this.multiplier.equals(1)) return this;\n      var p1 = this.power;\n\n      if (this.group !== EX && p2.group === N) {\n        var p = p2.multiplier;\n\n        if (this.group === N && !p.isInteger()) {\n          this.convert(P);\n        }\n\n        this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\n\n        if (this.group === P && isInt(this.power)) {\n          //bring it back to an N\n          this.value = Math.pow(this.value, this.power);\n          this.toLinear();\n          this.convert(N);\n        }\n      } else {\n        if (this.group !== EX) {\n          p1 = new Symbol(p1);\n          this.convert(EX);\n        }\n\n        this.power = _.multiply(p1, p2);\n      }\n\n      return this;\n    },\n    setPower: function setPower(p, retainSign) {\n      //leave out 1\n      if (this.group === N && this.multiplier.equals(1)) {\n        return this;\n      }\n\n      if (this.group === EX && !isSymbol(p)) {\n        this.group = this.previousGroup;\n        delete this.previousGroup;\n\n        if (this.group === N) {\n          this.multiplier = new Frac(this.value);\n          this.value = CONST_HASH;\n        } else this.power = p;\n      } else {\n        var isSymbolic = false;\n\n        if (isSymbol(p)) {\n          if (p.group === N) {\n            //p should be the multiplier instead\n            p = p.multiplier;\n          } else {\n            isSymbolic = true;\n          }\n        }\n\n        var group = isSymbolic ? EX : P;\n        this.power = p;\n        if (this.group === N && group) this.convert(group, retainSign);\n      }\n\n      return this;\n    },\n\n    /**\r\n     * Checks to see if symbol is located in the denominator\r\n     * @returns {boolean}\r\n     */\n    isInverse: function isInverse() {\n      if (this.group === EX) return this.power.multiplier.lessThan(0);\n      return this.power < 0;\n    },\n\n    /**\r\n     * Make a duplicate of a symbol by copying a predefined list of items.\r\n     * The name 'copy' would probably be a more appropriate name.\r\n     * to a new symbol\r\n     * @param {Symbol} c\r\n     * @returns {Symbol}\r\n     */\n    clone: function clone(c) {\n      var clone = c || new Symbol(0),\n          //list of properties excluding power as this may be a symbol and would also need to be a clone.\n      properties = ['value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity', 'scientific'],\n          l = properties.length,\n          i;\n\n      if (this.symbols) {\n        clone.symbols = {};\n\n        for (var x in this.symbols) {\n          clone.symbols[x] = this.symbols[x].clone();\n        }\n      }\n\n      for (i = 0; i < l; i++) {\n        if (this[properties[i]] !== undefined) {\n          clone[properties[i]] = this[properties[i]];\n        }\n      }\n\n      clone.power = this.power.clone();\n      clone.multiplier = this.multiplier.clone(); //add back the flag to track if this symbol is a conversion symbol\n\n      if (this.isConversion) clone.isConversion = this.isConversion;\n      if (this.isUnit) clone.isUnit = this.isUnit;\n      return clone;\n    },\n\n    /**\r\n     * Converts a symbol multiplier to one.\r\n     * @param {Boolean} keepSign Keep the multiplier as negative if the multiplier is negative and keepSign is true\r\n     * @returns {Symbol}\r\n     */\n    toUnitMultiplier: function toUnitMultiplier(keepSign) {\n      this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\n      this.multiplier.den = new bigInt(1);\n      return this;\n    },\n\n    /**\r\n     * Converts a Symbol's power to one.\r\n     * @returns {Symbol}\r\n     */\n    toLinear: function toLinear() {\n      // Do nothing if it's already linear\n      if (this.power.equals(1)) {\n        return this;\n      }\n\n      this.setPower(new Frac(1));\n      return this;\n    },\n\n    /**\r\n     * Iterates over all the sub-symbols. If no sub-symbols exist then it's called on itself\r\n     * @param {Function} fn\r\n     * @@param {Boolean} deep If true it will itterate over the sub-symbols their symbols as well\r\n     */\n    each: function each(fn, deep) {\n      if (!this.symbols) {\n        fn.call(this, this, this.value);\n      } else {\n        for (var x in this.symbols) {\n          var sym = this.symbols[x];\n\n          if (sym.group === PL && deep) {\n            for (var y in sym.symbols) {\n              fn.call(x, sym.symbols[y], y);\n            }\n          } else fn.call(this, sym, x);\n        }\n      }\n    },\n\n    /**\r\n     * A numeric value to be returned for Javascript. It will try to\r\n     * return a number as far a possible but in case of a pure symbolic\r\n     * symbol it will just return its text representation\r\n     * @returns {String|Number}\r\n     */\n    valueOf: function valueOf() {\n      if (this.group === N) return this.multiplier.valueOf();else if (this.power === 0) {\n        return 1;\n      } else if (this.multiplier === 0) {\n        return 0;\n      } else {\n        return _text(this, 'decimals');\n      }\n    },\n\n    /**\r\n     * Checks to see if a symbols has a particular variable within it.\r\n     * Pass in true as second argument to include the power of exponentials\r\n     * which aren't check by default.\r\n     * @example var s = _.parse('x+y+z'); s.contains('y');\r\n     * //returns true\r\n     * @param {any} variable\r\n     * @param {boolean} all\r\n     * @returns {boolean}\r\n     */\n    contains: function contains(variable, all) {\n      //contains expects a string\n      variable = String(variable);\n      var g = this.group;\n      if (this.value === variable) return true;\n\n      if (this.symbols) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].contains(variable, all)) return true;\n        }\n      }\n\n      if (g === FN || this.previousGroup === FN) {\n        for (var i = 0; i < this.args.length; i++) {\n          if (this.args[i].contains(variable, all)) return true;\n        }\n      }\n\n      if (g === EX) {\n        //exit only if it does\n        if (all && this.power.contains(variable, all)) {\n          return true;\n        }\n\n        if (this.value === variable) return true;\n      }\n\n      return this.value === variable;\n    },\n\n    /**\r\n     * Negates a symbols\r\n     * @returns {boolean}\r\n     */\n    negate: function negate() {\n      this.multiplier.negate();\n      if (this.group === CP || this.group === PL) this.distributeMultiplier();\n      return this;\n    },\n\n    /**\r\n     * Inverts a symbol\r\n     * @param {boolean} power_only\r\n     * @param {boolean} all\r\n     * @returns {boolean}\r\n     */\n    invert: function invert(power_only, all) {\n      //invert the multiplier\n      if (!power_only) this.multiplier = this.multiplier.invert(); //invert the rest\n\n      if (isSymbol(this.power)) {\n        this.power.negate();\n      } else if (this.group === CB && all) {\n        this.each(function (x) {\n          return x.invert();\n        });\n      } else {\n        if (this.power && this.group !== N) this.power.negate();\n      }\n\n      return this;\n    },\n\n    /**\r\n     * Symbols of group CP or PL may have the multiplier being carried by\r\n     * the top level symbol at any given time e.g. 2*(x+y+z). This is\r\n     * convenient in many cases, however in some cases the multiplier needs\r\n     * to be carried individually e.g. 2*x+2*y+2*z.\r\n     * This method distributes the multiplier over the entire symbol\r\n     * @param {boolean} all\r\n     * @returns {Symbol}\r\n     */\n    distributeMultiplier: function distributeMultiplier(all) {\n      var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\n\n      if (this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\n        for (var x in this.symbols) {\n          var s = this.symbols[x];\n          s.multiplier = s.multiplier.multiply(this.multiplier);\n          s.distributeMultiplier();\n        }\n\n        this.toUnitMultiplier();\n      }\n\n      return this;\n    },\n\n    /**\r\n     * This method expands the exponent over the entire symbol just like\r\n     * distributeMultiplier\r\n     * @returns {Symbol}\r\n     */\n    distributeExponent: function distributeExponent() {\n      if (!this.power.equals(1)) {\n        var p = this.power;\n\n        for (var x in this.symbols) {\n          var s = this.symbols[x];\n\n          if (s.group === EX) {\n            s.power = _.multiply(s.power, new Symbol(p));\n          } else {\n            this.symbols[x].power = this.symbols[x].power.multiply(p);\n          }\n        }\n\n        this.toLinear();\n      }\n\n      return this;\n    },\n\n    /**\r\n     * This method will attempt to up-convert or down-convert one symbol\r\n     * from one group to another. Not all symbols are convertible from one\r\n     * group to another however. In that case the symbol will remain\r\n     * unchanged.\r\n     * @param {int} group\r\n     * @param {string} imaginary\r\n     */\n    convert: function convert(group, imaginary) {\n      if (group > FN) {\n        //make a clone of this symbol;\n        var cp = this.clone(); //attach a symbols object and upgrade the group\n\n        this.symbols = {};\n\n        if (group === CB) {\n          //symbol of group CB hold symbols bound together through multiplication\n          //because of commutativity this multiplier can technically be anywhere within the group\n          //to keep track of it however it's easier to always have the top level carry it\n          cp.toUnitMultiplier();\n        } else {\n          //reset the symbol\n          this.toUnitMultiplier();\n        }\n\n        if (this.group === FN) {\n          cp.args = this.args;\n          delete this.args;\n          delete this.fname;\n        } //the symbol may originate from the symbol i but this property no longer holds true\n        //after copying\n\n\n        if (this.isImgSymbol) delete this.isImgSymbol;\n        this.toLinear(); //attach a clone of this symbol to the symbols object using its proper key\n\n        this.symbols[cp.keyForGroup(group)] = cp;\n        this.group = group; //objects by default don't have a length property. However, in order to keep track of the number\n        //of sub-symbols we have to impliment our own.\n\n        this.length = 1;\n      } else if (group === EX) {\n        //1^x is just one so check and make sure\n        if (!(this.group === N && this.multiplier.equals(1))) {\n          if (this.group !== EX) this.previousGroup = this.group;\n\n          if (this.group === N) {\n            this.value = this.multiplier.num.toString();\n            this.toUnitMultiplier();\n          } //update the hash to reflect the accurate hash\n          else this.value = _text(this, 'hash');\n\n          this.group = EX;\n        }\n      } else if (group === N) {\n        var m = this.multiplier.toDecimal();\n        if (this.symbols) this.symbols = undefined;\n        new Symbol(this.group === P ? m * Math.pow(this.value, this.power) : m).clone(this);\n      } else if (group === P && this.group === N) {\n        this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\n        this.toUnitMultiplier(!imaginary);\n        this.group = P;\n      }\n\n      return this;\n    },\n\n    /**\r\n     * This method is one of the principal methods to make it all possible.\r\n     * It performs cleanup and prep operations whenever a symbols is\r\n     * inserted. If the symbols results in a 1 in a CB (multiplication)\r\n     * group for instance it will remove the redundant symbol. Similarly\r\n     * in a symbol of group PL or CP (symbols glued by multiplication) it\r\n     * will remove any dangling zeroes from the symbol. It will also\r\n     * up-convert or down-convert a symbol if it detects that it's\r\n     * incorrectly grouped. It should be noted that this method is not\r\n     * called directly but rather by the 'attach' method for addition groups\r\n     * and the 'combine' method for multiplication groups.\r\n     * @param {Symbol} symbol\r\n     * @param {String} action\r\n     */\n    insert: function insert(symbol, action) {\n      //this check can be removed but saves a lot of aggravation when trying to hunt down\n      //a bug. If left, you will instantly know that the error can only be between 2 symbols.\n      if (!isSymbol(symbol)) err('Object ' + symbol + ' is not of type Symbol!');\n\n      if (this.symbols) {\n        var group = this.group;\n\n        if (group > FN) {\n          var key = symbol.keyForGroup(group);\n          var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\n\n          if (action === 'add') {\n            var hash = key;\n\n            if (existing) {\n              //add them together using the parser\n              this.symbols[hash] = _.add(existing, symbol); //if the addition resulted in a zero multiplier remove it\n\n              if (this.symbols[hash].multiplier.equals(0)) {\n                delete this.symbols[hash];\n                this.length--;\n\n                if (this.length === 0) {\n                  this.convert(N);\n                  this.multiplier = new Frac(0);\n                }\n              }\n            } else {\n              this.symbols[key] = symbol;\n              this.length++;\n            }\n          } else {\n            //check if this is of group P and unwrap before inserting\n            if (symbol.group === P && isInt(symbol.power)) {\n              symbol.convert(N);\n            } //transfer the multiplier to the upper symbol but only if the symbol numeric\n\n\n            if (symbol.group !== EX) {\n              this.multiplier = this.multiplier.multiply(symbol.multiplier);\n              symbol.toUnitMultiplier();\n            } else {\n              symbol.parens = symbol.multiplier.lessThan(0);\n              this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\n              symbol.toUnitMultiplier(true);\n            }\n\n            if (existing) {\n              //remove because the symbol may have changed\n              symbol = _.multiply(_remove(this.symbols, key), symbol);\n\n              if (symbol.isConstant()) {\n                this.multiplier = this.multiplier.multiply(symbol.multiplier);\n                symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\n              }\n\n              this.length--; //clean up\n            } //don't insert the symbol if it's 1\n\n\n            if (!symbol.isOne(true)) {\n              this.symbols[key] = symbol;\n              this.length++;\n            } else if (symbol.multiplier.lessThan(0)) {\n              this.negate(); //put back the sign\n            }\n          } //clean up\n\n\n          if (this.length === 0) this.convert(N); //update the hash\n\n          if (this.group === CP || this.group === CB) {\n            this.updateHash();\n          }\n        }\n      }\n\n      return this;\n    },\n    //the insert method for addition\n    attach: function attach(symbol) {\n      if (isArray(symbol)) {\n        for (var i = 0; i < symbol.length; i++) {\n          this.insert(symbol[i], 'add');\n        }\n\n        return this;\n      }\n\n      return this.insert(symbol, 'add');\n    },\n    //the insert method for multiplication\n    combine: function combine(symbol) {\n      if (isArray(symbol)) {\n        for (var i = 0; i < symbol.length; i++) {\n          this.insert(symbol[i], 'multiply');\n        }\n\n        return this;\n      }\n\n      return this.insert(symbol, 'multiply');\n    },\n\n    /**\r\n     * This method should be called after any major \"surgery\" on a symbol.\r\n     * It updates the hash of the symbol for example if the fname of a\r\n     * function has changed it will update the hash of the symbol.\r\n     */\n    updateHash: function updateHash() {\n      if (this.group === N) return;\n\n      if (this.group === FN) {\n        var contents = '',\n            args = this.args,\n            is_parens = this.fname === PARENTHESIS;\n\n        for (var i = 0; i < args.length; i++) {\n          contents += (i === 0 ? '' : ',') + _text(args[i]);\n        }\n\n        var fn_name = is_parens ? '' : this.fname;\n        this.value = fn_name + (is_parens ? contents : inBrackets(contents));\n      } else if (!(this.group === S || this.group === PL)) {\n        this.value = _text(this, 'hash');\n      }\n    },\n\n    /**\r\n     * this function defines how every group in stored within a group of\r\n     * higher order think of it as the switchboard for the library. It\r\n     * defines the hashes for symbols.\r\n     * @param {int} group\r\n     */\n    keyForGroup: function keyForGroup(group) {\n      var g = this.group;\n      var key;\n\n      if (g === N) {\n        key = this.value;\n      } else if (g === S || g === P) {\n        if (group === PL) key = this.power.toDecimal();else key = this.value;\n      } else if (g === FN) {\n        if (group === PL) key = this.power.toDecimal();else key = _text(this, 'hash');\n      } else if (g === PL) {\n        //if the order is reversed then we'll assume multiplication\n        //TODO: possible future dilemma\n        if (group === CB) key = _text(this, 'hash');else if (group === CP) {\n          if (this.power.equals(1)) key = this.value;else key = inBrackets(_text(this, 'hash')) + Settings.POWER_OPERATOR + this.power.toDecimal();\n        } else if (group === PL) key = this.power.toString();else key = this.value;\n        return key;\n      } else if (g === CP) {\n        if (group === CP) {\n          key = _text(this, 'hash');\n        }\n\n        if (group === PL) key = this.power.toDecimal();else key = this.value;\n      } else if (g === CB) {\n        if (group === PL) key = this.power.toDecimal();else key = _text(this, 'hash');\n      } else if (g === EX) {\n        if (group === PL) key = _text(this.power);else key = _text(this, 'hash');\n      }\n\n      return key;\n    },\n\n    /**\r\n     * Symbols are typically stored in an object which works fine for most\r\n     * cases but presents a problem when the order of the symbols makes\r\n     * a difference. This function simply collects all the symbols and\r\n     * returns them as an array. If a function is supplied then that\r\n     * function is called on every symbol contained within the object.\r\n     * @param {Function} fn\r\n     * @param {Object} opt\r\n     * @param {Function} sort_fn\r\n     * @@param {Boolean} expand_symbol\r\n     * @returns {Array}\r\n     */\n    collectSymbols: function collectSymbols(fn, opt, sort_fn, expand_symbol) {\n      var collected = [];\n      if (!this.symbols) collected.push(this);else {\n        for (var x in this.symbols) {\n          var symbol = this.symbols[x];\n\n          if (expand_symbol && (symbol.group === PL || symbol.group === CP)) {\n            collected = collected.concat(symbol.collectSymbols());\n          } else collected.push(fn ? fn(symbol, opt) : symbol);\n        }\n      }\n      if (sort_fn === null) sort_fn = undefined; //WTF Firefox? Seriously?\n\n      return collected.sort(sort_fn); //sort hopefully gives us some sort of consistency\n    },\n\n    /**\r\n     * Returns the latex representation of the symbol\r\n     * @param {String} option\r\n     * @returns {String}\r\n     */\n    latex: function latex(option) {\n      return LaTeX.latex(this, option);\n    },\n\n    /**\r\n     * Returns the text representation of a symbol\r\n     * @param {String} option\r\n     * @returns {String}\r\n     */\n    text: function text(option) {\n      return _text(this, option);\n    },\n\n    /**\r\n     * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\r\n     * @@param {bool} abs Compares the absolute value\r\n     */\n    isOne: function isOne(abs) {\n      var f = abs ? 'absEquals' : 'equals';\n      if (this.group === N) return this.multiplier[f](1);else return this.power.equals(0);\n    },\n    isComposite: function isComposite() {\n      var g = this.group,\n          pg = this.previousGroup;\n      return g === CP || g === PL || pg === PL || pg === CP;\n    },\n    isCombination: function isCombination() {\n      var g = this.group,\n          pg = this.previousGroup;\n      return g === CB || pg === CB;\n    },\n    lessThan: function lessThan(n) {\n      return this.multiplier.lessThan(n);\n    },\n    greaterThan: function greaterThan(n) {\n      if (!isSymbol(n)) {\n        n = new Symbol(n);\n      } // We can't tell for sure if a is greater than be if they're not both numbers\n\n\n      if (!this.isConstant(true) || !n.isConstant(true)) {\n        return false;\n      }\n\n      return this.multiplier.greaterThan(n.multiplier);\n    },\n\n    /**\r\n     * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\r\n     * with other classes the symbol is either the denominator or not.\r\n     * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\r\n     * denominator and has to be found by looking at the actual symbols themselves.\r\n     */\n    getDenom: function getDenom() {\n      var retval, symbol;\n      symbol = this.clone(); //e.g. 1/(x*(x+1))\n\n      if (this.group === CB && this.power.lessThan(0)) symbol = _.expand(symbol); //if the symbol already is the denominator... DONE!!!\n\n      if (symbol.power.lessThan(0) || symbol.group === EX && symbol.power.multiplier.lessThan(0)) {\n        var d = _.parse(symbol.multiplier.den);\n\n        retval = symbol.toUnitMultiplier();\n        retval.power.negate();\n        retval = _.multiply(d, retval); //put back the coeff\n      } else if (symbol.group === CB) {\n        retval = _.parse(symbol.multiplier.den);\n\n        for (var x in symbol.symbols) {\n          var s = symbol.symbols[x];\n          if (s.power < 0 || s.group === EX && s.power.multiplier.lessThan(0)) retval = _.multiply(retval, symbol.symbols[x].clone().invert());\n        }\n      } else {\n        retval = _.parse(symbol.multiplier.den);\n      }\n\n      return retval;\n    },\n    getNum: function getNum() {\n      var retval, symbol;\n      symbol = this.clone(); //e.g. 1/(x*(x+1))\n\n      if (symbol.group === CB && symbol.power.lessThan(0)) symbol = _.expand(symbol); //if the symbol already is the denominator... DONE!!!\n\n      if (symbol.power.greaterThan(0) && symbol.group !== CB || symbol.group === EX && symbol.power.multiplier.greaterThan(0)) {\n        retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\n      } else if (symbol.group === CB) {\n        retval = _.parse(symbol.multiplier.num);\n        symbol.each(function (x) {\n          if (x.power > 0 || x.group === EX && x.power.multiplier > 0) {\n            retval = _.multiply(retval, x.clone());\n          }\n        });\n      } //            else if(symbol.group === EX && this.previousGroup === S) {\n      //                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\n      //            }\n      else {\n        retval = _.parse(symbol.multiplier.num);\n      }\n\n      return retval;\n    },\n    toString: function toString() {\n      return this.text();\n    }\n  }; //Parser =======================================================================\n  //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\n\n  function Parser() {\n    //Point to the local parser instead of the global one\n    var _ = this;\n\n    var bin = {};\n    var preprocessors = {\n      names: [],\n      actions: []\n    }; //Parser.classes ===============================================================\n\n    function Slice(upper, lower) {\n      this.start = upper;\n      this.end = lower;\n    }\n\n    ;\n\n    Slice.prototype.isConstant = function () {\n      return this.start.isConstant() && this.end.isConstant();\n    };\n\n    Slice.prototype.text = function () {\n      return _text(this.start) + ':' + _text(this.end);\n    };\n    /**\r\n     * Class used to collect arguments for functions\r\n     * @returns {Parser.Collection}\r\n     */\n\n\n    function Collection() {\n      this.elements = [];\n    }\n\n    Collection.prototype.append = function (e) {\n      this.elements.push(e);\n    };\n\n    Collection.prototype.getItems = function () {\n      return this.elements;\n    };\n\n    Collection.prototype.toString = function () {\n      return _.pretty_print(this.elements);\n    };\n\n    Collection.create = function (e) {\n      var collection = new Collection();\n      if (e) collection.append(e);\n      return collection;\n    };\n\n    function Token(node, node_type, column) {\n      this.type = node_type;\n      this.value = node;\n      if (column !== undefined) this.column = column + 1;\n\n      if (node_type === Token.OPERATOR) {\n        //copy everything over from the operator\n        var operator = operators[node];\n\n        for (var x in operator) {\n          this[x] = operator[x];\n        }\n      } else if (node_type === Token.FUNCTION) {\n        this.precedence = Token.MAX_PRECEDENCE; //leave enough roon\n\n        this.leftAssoc = false;\n      }\n    }\n\n    Token.prototype.toString = function () {\n      return this.value;\n    };\n\n    Token.prototype.toString = function () {\n      if (this.is_prefix) return '`' + this.value;\n      return this.value;\n    }; //some constants\n\n\n    Token.OPERATOR = 'OPERATOR';\n    Token.VARIABLE_OR_LITERAL = 'VARIABLE_OR_LITERAL';\n    Token.FUNCTION = 'FUNCTION';\n    Token.UNIT = 'UNIT';\n    Token.KEYWORD = 'KEYWORD';\n    Token.MAX_PRECEDENCE = 999; //create link to classes\n\n    this.classes = {\n      Collection: Collection,\n      Slice: Slice,\n      Token: Token\n    }; //Parser.modules ===============================================================\n    //object for functions which handle complex number\n\n    var complex = {\n      prec: undefined,\n      cos: function cos(r, i) {\n        var re, im;\n        re = _.parse(Math.cos(r) * Math.cosh(i));\n        im = _.parse(Math.sin(r) * Math.sinh(i));\n        return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n      },\n      sin: function sin(r, i) {\n        var re, im;\n        re = _.parse(Math.sin(r) * Math.cosh(i));\n        im = _.parse(Math.cos(r) * Math.sinh(i));\n        return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n      },\n      tan: function tan(r, i) {\n        var re, im;\n        re = _.parse(Math.sin(2 * r) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n        im = _.parse(Math.sinh(2 * i) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n        return _.add(re, _.multiply(im, Symbol.imaginary()));\n      },\n      sec: function sec(r, i) {\n        var t = this.removeDen(this.cos(r, i));\n        return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      csc: function csc(r, i) {\n        var t = this.removeDen(this.sin(r, i));\n        return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      cot: function cot(r, i) {\n        var t = this.removeDen(this.tan(r, i));\n        return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      acos: function acos(r, i) {\n        var symbol, sq, a, b, c, squared;\n        symbol = this.fromArray([r, i]);\n        squared = _.pow(symbol.clone(), new Symbol(2));\n        sq = _.expand(squared); //z*z\n\n        a = _.multiply(_sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\n        b = _.expand(_.add(symbol.clone(), a));\n        c = _log(b);\n        return _.expand(_.multiply(Symbol.imaginary().negate(), c));\n      },\n      asin: function asin(r, i) {\n        return _.subtract(_.parse('pi/2'), this.acos(r, i));\n      },\n      atan: function atan(r, i) {\n        // Handle i and -i\n        if (r.equals(0) && (i.equals(1) || i.equals(-1))) {\n          // Just copy Wolfram Alpha for now. The parenthesis \n          return _.parse(\"\".concat(Symbol.infinity(), \"*\").concat(Settings.IMAGINARY, \"*\").concat(i));\n        }\n\n        var a, b, c, symbol;\n        symbol = complex.fromArray([r, i]);\n        a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\n        b = _log(_.expand(_.subtract(new Symbol(1), a.clone())));\n        c = _log(_.expand(_.add(new Symbol(1), a.clone())));\n        return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\n      },\n      asec: function asec(r, i) {\n        var d = this.removeDen([r, i]);\n        d[1].negate();\n        return this.acos.apply(this, d);\n      },\n      acsc: function acsc(r, i) {\n        var d = this.removeDen([r, i]);\n        d[1].negate();\n        return this.asin.apply(this, d);\n      },\n      acot: function acot(r, i) {\n        var d = this.removeDen([r, i]);\n        d[1].negate();\n        return this.atan.apply(this, d);\n      },\n      //Hyperbolic trig\n      cosh: function cosh(r, i) {\n        var re, im;\n        re = _.parse(Math.cosh(r) * Math.cos(i));\n        im = _.parse(Math.sinh(r) * Math.sin(i));\n        return _.add(re, _.multiply(im, Symbol.imaginary()));\n      },\n      sinh: function sinh(r, i) {\n        var re, im;\n        re = _.parse(Math.sinh(r) * Math.cos(i));\n        im = _.parse(Math.cosh(r) * Math.sin(i));\n        return _.add(re, _.multiply(im, Symbol.imaginary()));\n      },\n      tanh: function tanh(r, i) {\n        var re, im;\n        re = _.parse(Math.sinh(2 * r) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n        im = _.parse(Math.sin(2 * i) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n        return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n      },\n      sech: function sech(r, i) {\n        var t = this.removeDen(this.cosh(r, i));\n        return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      csch: function csch(r, i) {\n        var t = this.removeDen(this.sinh(r, i));\n        return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      coth: function coth(r, i) {\n        var t = this.removeDen(this.tanh(r, i));\n        return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      acosh: function acosh(r, i) {\n        var a, b, z;\n        z = this.fromArray([r, i]);\n        a = _sqrt(_.add(z.clone(), new Symbol(1)));\n        b = _sqrt(_.subtract(z.clone(), new Symbol(1)));\n        return _.expand(_log(_.add(z, _.expand(_.multiply(a, b)))));\n      },\n      asinh: function asinh(r, i) {\n        var a, z;\n        z = this.fromArray([r, i]);\n        a = _sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\n        return _.expand(_log(_.add(z, a)));\n      },\n      atanh: function atanh(r, i) {\n        var a, b, z;\n        z = this.fromArray([r, i]);\n        a = _log(_.add(z.clone(), new Symbol(1)));\n        b = _log(_.subtract(new Symbol(1), z));\n        return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\n      },\n      asech: function asech(r, i) {\n        var t = this.removeDen([r, i]);\n        t[1].negate();\n        return this.acosh.apply(this, t);\n      },\n      acsch: function acsch(r, i) {\n        var t = this.removeDen([r, i]);\n        t[1].negate();\n        return this.asinh.apply(this, t);\n      },\n      acoth: function acoth(r, i) {\n        var t = this.removeDen([r, i]);\n        t[1].negate();\n        return this.atanh.apply(this, t);\n      },\n      sqrt: function sqrt(symbol) {\n        var re, im, h, a, d;\n        re = symbol.realpart();\n        im = symbol.imagpart();\n        h = Symbol.hyp(re, im);\n        a = _.add(re.clone(), h);\n        d = _sqrt(_.multiply(new Symbol(2), a.clone()));\n        return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\n      },\n      log: function log(r, i) {\n        var re, im, phi;\n        re = _log(Symbol.hyp(r, i));\n        phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal())) : Math.atan2(i, r);\n        im = _.parse(phi);\n        return _.add(re, _.multiply(Symbol.imaginary(), im));\n      },\n      erf: function erf(symbol, n) {\n        //Do nothing for now. Revisit this in the future.\n        return _.symfunction('erf', [symbol]);\n        n = n || 30;\n\n        var f = function f(R, I) {\n          return block('PARSE2NUMBER', function () {\n            var retval = new Symbol(0);\n\n            for (var i = 0; i < n; i++) {\n              var a, b;\n              a = _.parse(bigDec.exp(bigDec(i).toPower(2).neg().dividedBy(bigDec(n).pow(2).plus(bigDec(R).toPower(2).times(4)))));\n              b = _.parse(format('2*({1})-e^(-(2*{0}*{1}*{2}))*(2*{1}*cosh({2}*{3})-{0}*{3}*sinh({3}*{2}))', Settings.IMAGINARY, R, I, i));\n              retval = _.add(retval, _.multiply(a, b));\n            }\n\n            return _.multiply(retval, new Symbol(2));\n          }, true);\n        };\n\n        var re, im, a, b, c, k;\n        re = symbol.realpart();\n        im = symbol.imagpart();\n        k = _.parse(format('(e^(-{0}^2))/pi', re));\n        a = _.parse(format('(1-e^(-(2*{0}*{1}*{2})))/(2*{1})', Settings.IMAGINARY, re, im));\n        b = f(re.toString(), im.toString());\n        return _.add(_.parse(Math2.erf(re.toString())), _.multiply(k, _.add(a, b)));\n      },\n      removeDen: function removeDen(symbol) {\n        var den, r, i, re, im;\n\n        if (isArray(symbol)) {\n          r = symbol[0];\n          i = symbol[1];\n        } else {\n          r = symbol.realpart();\n          i = symbol.imagpart();\n        }\n\n        den = Math.pow(r, 2) + Math.pow(i, 2);\n        re = _.parse(r / den);\n        im = _.parse(i / den);\n        return [re, im];\n      },\n      fromArray: function fromArray(arr) {\n        return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\n      },\n      evaluate: function evaluate(symbol, f) {\n        var re, im, sign;\n        sign = symbol.power.sign(); //remove it from under the denominator\n\n        symbol.power = symbol.power.abs(); //expand\n\n        if (symbol.power.greaterThan(1)) symbol = _.expand(symbol); //remove the denominator\n\n        if (sign < 0) {\n          var d = this.removeDen(symbol);\n          re = d[0];\n          im = d[1];\n        } else {\n          re = symbol.realpart();\n          im = symbol.imagpart();\n        }\n\n        if (re.isConstant('all') && im.isConstant('all')) return this[f].call(this, re, im);\n        return _.symfunction(f, [symbol]);\n      }\n    }; //object for functions which handle trig\n\n    var trig = this.trig = {\n      //container for trigonometric function\n      cos: function cos(symbol) {\n        if (symbol.equals('pi') && symbol.multiplier.den.equals(2)) return new Symbol(0);\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.equals(new Symbol(Settings.PI / 2))) return new Symbol(0);\n\n          if (symbol.isConstant()) {\n            if (Settings.USE_BIG) {\n              return new Symbol(bigDec.cos(symbol.multiplier.toDecimal()));\n            }\n\n            return new Symbol(Math.cos(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'cos');\n          }\n        }\n\n        if (symbol.equals(0)) return new Symbol(1);\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            m = symbol.multiplier.abs();\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return for 1 or -1 for multiples of pi\n          if (isInt(m)) {\n            retval = new Symbol(even(m) ? 1 : -1);\n          } else {\n            var n = Number(m.num),\n                d = Number(m.den);\n            if (d === 2) retval = new Symbol(0);else if (d === 3) {\n              retval = _.parse('1/2');\n              c = true;\n            } else if (d === 4) {\n              retval = _.parse('1/sqrt(2)');\n              c = true;\n            } else if (d === 6) {\n              retval = _.parse('sqrt(3)/2');\n              c = true;\n            } else retval = _.symfunction('cos', [symbol]);\n          }\n        }\n\n        if (c && (q === 2 || q === 3)) retval.negate();\n        if (!retval) retval = _.symfunction('cos', [symbol]);\n        return retval;\n      },\n      sin: function sin(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            if (symbol % Math.PI === 0) {\n              return new Symbol(0);\n            }\n\n            if (Settings.USE_BIG) {\n              return new Symbol(bigDec.sin(symbol.multiplier.toDecimal()));\n            }\n\n            return new Symbol(Math.sin(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'sin');\n        }\n\n        if (symbol.equals(0)) return new Symbol(0);\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            sign = symbol.multiplier.sign(),\n            m = symbol.multiplier.abs();\n        symbol.multiplier = m;\n        if (symbol.equals('pi')) retval = new Symbol(0);else if (symbol.isPi() && symbol.isLinear()) {\n          //return for 0 for multiples of pi\n          if (isInt(m)) {\n            retval = new Symbol(0);\n          } else {\n            var n = m.num,\n                d = m.den;\n\n            if (d == 2) {\n              retval = new Symbol(1);\n              c = true;\n            } else if (d == 3) {\n              retval = _.parse('sqrt(3)/2');\n              c = true;\n            } else if (d == 4) {\n              retval = _.parse('1/sqrt(2)');\n              c = true;\n            } else if (d == 6) {\n              retval = _.parse('1/2');\n              c = true;\n            } else retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n          }\n        }\n        if (!retval) retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n        if (c && (q === 3 || q === 4)) retval.negate();\n        return retval;\n      },\n      tan: function tan(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol % Math.PI === 0 && symbol.isLinear()) {\n            return new Symbol(0);\n          }\n\n          if (symbol.isConstant()) {\n            if (Settings.USE_BIG) {\n              return new Symbol(bigDec.tan(symbol.multiplier.toDecimal()));\n            }\n\n            return new Symbol(Math.tan(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'tan');\n        }\n\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            m = symbol.multiplier;\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return 0 for all multiples of pi\n          if (isInt(m)) {\n            retval = new Symbol(0);\n          } else {\n            var n = m.num,\n                d = m.den;\n            if (d == 2) throw new UndefinedError('tan is undefined for ' + symbol.toString());else if (d == 3) {\n              retval = _.parse('sqrt(3)');\n              c = true;\n            } else if (d == 4) {\n              retval = new Symbol(1);\n              c = true;\n            } else if (d == 6) {\n              retval = _.parse('1/sqrt(3)');\n              c = true;\n            } else retval = _.symfunction('tan', [symbol]);\n          }\n        }\n\n        if (!retval) retval = _.symfunction('tan', [symbol]);\n        if (c && (q === 2 || q === 4)) retval.negate();\n        return retval;\n      },\n      sec: function sec(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            if (Settings.USE_BIG) {\n              return new Symbol(new bigDec(1).dividedBy(bigDec.cos(symbol.multiplier.toDecimal())));\n            }\n\n            return new Symbol(Math2.sec(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'sec');\n          return _.parse(format('1/cos({0})', symbol));\n        }\n\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            m = symbol.multiplier.abs();\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return for 1 or -1 for multiples of pi\n          if (isInt(m)) {\n            retval = new Symbol(even(m) ? 1 : -1);\n          } else {\n            var n = m.num,\n                d = m.den;\n            if (d == 2) throw new UndefinedError('sec is undefined for ' + symbol.toString());else if (d == 3) {\n              retval = new Symbol(2);\n              c = true;\n            } else if (d == 4) {\n              retval = _.parse('sqrt(2)');\n              c = true;\n            } else if (d == 6) {\n              retval = _.parse('2/sqrt(3)');\n              c = true;\n            } else retval = _.symfunction('sec', [symbol]);\n          }\n        }\n\n        if (c && (q === 2 || q === 3)) retval.negate();\n        if (!retval) retval = _.symfunction('sec', [symbol]);\n        return retval;\n      },\n      csc: function csc(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            if (Settings.USE_BIG) {\n              return new Symbol(new bigDec(1).dividedBy(bigDec.sin(symbol.multiplier.toDecimal())));\n            }\n\n            return new Symbol(Math2.csc(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'csc');\n          return _.parse(format('1/sin({0})', symbol));\n        }\n\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            sign = symbol.multiplier.sign(),\n            m = symbol.multiplier.abs();\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return for 0 for multiples of pi\n          if (isInt(m)) {\n            throw new UndefinedError('csc is undefined for ' + symbol.toString());\n          } else {\n            var n = m.num,\n                d = m.den;\n\n            if (d == 2) {\n              retval = new Symbol(1);\n              c = true;\n            } else if (d == 3) {\n              retval = _.parse('2/sqrt(3)');\n              c = true;\n            } else if (d == 4) {\n              retval = _.parse('sqrt(2)');\n              c = true;\n            } else if (d == 6) {\n              retval = new Symbol(2);\n              c = true;\n            } else retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n          }\n        }\n\n        if (!retval) retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n        if (c && (q === 3 || q === 4)) retval.negate();\n        return retval;\n      },\n      cot: function cot(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol % (Math.PI / 2) === 0) {\n            return new Symbol(0);\n          }\n\n          if (symbol.isConstant()) {\n            if (Settings.USE_BIG) {\n              return new Symbol(new bigDec(1).dividedBy(bigDec.tan(symbol.multiplier.toDecimal())));\n            }\n\n            return new Symbol(Math2.cot(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'cot');\n          return _.parse(format('1/tan({0})', symbol));\n        }\n\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            m = symbol.multiplier;\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return 0 for all multiples of pi\n          if (isInt(m)) {\n            throw new UndefinedError('cot is undefined for ' + symbol.toString());\n          } else {\n            var n = m.num,\n                d = m.den;\n            if (d == 2) retval = new Symbol(0);else if (d == 3) {\n              retval = _.parse('1/sqrt(3)');\n              c = true;\n            } else if (d == 4) {\n              retval = new Symbol(1);\n              c = true;\n            } else if (d == 6) {\n              retval = _.parse('sqrt(3)');\n              c = true;\n            } else retval = _.symfunction('cot', [symbol]);\n          }\n        }\n\n        if (!retval) retval = _.symfunction('cot', [symbol]);\n        if (c && (q === 2 || q === 4)) retval.negate();\n        return retval;\n      },\n      acos: function acos(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            // Handle values in the complex domain\n            if (symbol.gt(1) || symbol.lt(-1)) {\n              var x = symbol.toString();\n              return expand(evaluate(\"pi/2-asin(\".concat(x, \")\")));\n            } // Handle big numbers\n\n\n            if (Settings.USE_BIG) {\n              return new Symbol(bigDec.acos(symbol.multiplier.toDecimal()));\n            }\n\n            return new Symbol(Math.acos(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'acos');\n        }\n\n        return _.symfunction('acos', arguments);\n      },\n      asin: function asin(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            // Handle values in the complex domain\n            if (symbol.gt(1) || symbol.lt(-1)) {\n              var i = Settings.IMAGINARY;\n              var x = symbol.multiplier.toDecimal();\n              return expand(evaluate(\"\".concat(i, \"*log(sqrt(1-\").concat(x, \"^2)-\").concat(i, \"*\").concat(x, \")\")));\n            } // Handle big numbers\n\n\n            if (Settings.USE_BIG) {\n              return new Symbol(bigDec.asin(symbol.multiplier.toDecimal()));\n            }\n\n            return new Symbol(Math.asin(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'asin');\n        }\n\n        return _.symfunction('asin', arguments);\n      },\n      atan: function atan(symbol) {\n        var retval;\n        if (symbol.equals(0)) retval = new Symbol(0);else if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            // Handle big numbers\n            if (Settings.USE_BIG) {\n              return new Symbol(bigDec.atan(symbol.multiplier.toDecimal()));\n            }\n\n            return new Symbol(Math.atan(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'atan');\n          return _.symfunction('atan', arguments);\n        } else if (symbol.equals(-1)) retval = _.parse('-pi/4');else retval = _.symfunction('atan', arguments);\n        return retval;\n      },\n      asec: function asec(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.equals(0)) {\n            throw new OutOfFunctionDomainError('Input is out of the domain of sec!');\n          }\n\n          if (symbol.isConstant()) {\n            return trig.acos(symbol.invert());\n          }\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'asec');\n          }\n        }\n\n        return _.symfunction('asec', arguments);\n      },\n      acsc: function acsc(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            return trig.asin(symbol.invert());\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'acsc');\n        }\n\n        return _.symfunction('acsc', arguments);\n      },\n      acot: function acot(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            return new _.add(_.parse('pi/2'), trig.atan(symbol).negate());\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'acot');\n        }\n\n        return _.symfunction('acot', arguments);\n      },\n      atan2: function atan2(a, b) {\n        if (a.equals(0) && b.equals(0)) throw new UndefinedError('atan2 is undefined for 0, 0');\n\n        if (Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\n          return new Symbol(Math.atan2(a, b));\n        }\n\n        return _.symfunction('atan2', arguments);\n      }\n    }; //object for functions which handle hyperbolic trig\n\n    var trigh = this.trigh = {\n      //container for hyperbolic trig function\n      cosh: function cosh(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.cosh(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'cosh');\n          }\n        }\n\n        return retval = _.symfunction('cosh', arguments);\n      },\n      sinh: function sinh(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.sinh(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'sinh');\n          }\n        }\n\n        return retval = _.symfunction('sinh', arguments);\n      },\n      tanh: function tanh(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.tanh(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'tanh');\n          }\n        }\n\n        return retval = _.symfunction('tanh', arguments);\n      },\n      sech: function sech(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            return new Symbol(Math.sech(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'sech');\n          }\n\n          return _.parse(format('1/cosh({0})', symbol));\n        }\n\n        return retval = _.symfunction('sech', arguments);\n      },\n      csch: function csch(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.csch(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'csch');\n          }\n\n          return _.parse(format('1/sinh({0})', symbol));\n        }\n\n        return retval = _.symfunction('csch', arguments);\n      },\n      coth: function coth(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.coth(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'coth');\n          }\n\n          return _.parse(format('1/tanh({0})', symbol));\n        }\n\n        return retval = _.symfunction('coth', arguments);\n      },\n      acosh: function acosh(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'acosh');else if (Settings.PARSE2NUMBER) retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2-1))', symbol.toString())));else retval = _.symfunction('acosh', arguments);\n        return retval;\n      },\n      asinh: function asinh(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'asinh');else if (Settings.PARSE2NUMBER) retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2+1))', symbol.toString())));else retval = _.symfunction('asinh', arguments);\n        return retval;\n      },\n      atanh: function atanh(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'atanh');else if (Settings.PARSE2NUMBER) {\n          retval = evaluate(_.parse(format('(1/2)*' + Settings.LOG + '((1+({0}))/(1-({0})))', symbol.toString())));\n        } else retval = _.symfunction('atanh', arguments);\n        return retval;\n      },\n      asech: function asech(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'asech');else if (Settings.PARSE2NUMBER) retval = evaluate(_log(_.add(symbol.clone().invert(), _sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));else retval = _.symfunction('asech', arguments);\n        return retval;\n      },\n      acsch: function acsch(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'acsch');else if (Settings.PARSE2NUMBER) retval = evaluate(_.parse(format(Settings.LOG + '((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));else retval = _.symfunction('acsch', arguments);\n        return retval;\n      },\n      acoth: function acoth(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'acoth');else if (Settings.PARSE2NUMBER) {\n          if (symbol.equals(1)) retval = Symbol.infinity();else retval = evaluate(_.divide(_log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))), new Symbol(2)));\n        } else retval = _.symfunction('acoth', arguments);\n        return retval;\n      }\n    }; //list of supported units\n\n    this.units = {}; //list all the supported operators\n\n    var operators = {\n      '\\\\': {\n        precedence: 8,\n        operator: '\\\\',\n        action: 'slash',\n        prefix: true,\n        postfix: false,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return e; //bypass the slash\n        }\n      },\n      '!!': {\n        precedence: 7,\n        operator: '!!',\n        action: 'dfactorial',\n        prefix: false,\n        postfix: true,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return _.symfunction(Settings.DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\n        }\n      },\n      '!': {\n        precedence: 7,\n        operator: '!',\n        action: 'factorial',\n        prefix: false,\n        postfix: true,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return factorial(e); //wrap it in a factorial function\n        }\n      },\n      '^': {\n        precedence: 6,\n        operator: '^',\n        action: 'pow',\n        prefix: false,\n        postfix: false,\n        leftAssoc: true\n      },\n      '**': {\n        precedence: 6,\n        operator: '**',\n        action: 'pow',\n        prefix: false,\n        postfix: false,\n        leftAssoc: true\n      },\n      '%': {\n        precedence: 4,\n        operator: '%',\n        action: 'percent',\n        prefix: false,\n        postfix: true,\n        leftAssoc: true,\n        overloaded: true,\n        overloadAction: 'mod',\n        overloadLeftAssoc: false,\n        operation: function operation(x) {\n          return _.divide(x, new Symbol(100));\n        }\n      },\n      '*': {\n        precedence: 4,\n        operator: '*',\n        action: 'multiply',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '/': {\n        precedence: 4,\n        operator: '/',\n        action: 'divide',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '+': {\n        precedence: 3,\n        operator: '+',\n        action: 'add',\n        prefix: true,\n        postfix: false,\n        leftAssoc: false,\n        operation: function operation(x) {\n          return x;\n        }\n      },\n      'plus': {\n        precedence: 3,\n        operator: 'plus',\n        action: 'add',\n        prefix: true,\n        postfix: false,\n        leftAssoc: false,\n        operation: function operation(x) {\n          return x;\n        }\n      },\n      '-': {\n        precedence: 3,\n        operator: '-',\n        action: 'subtract',\n        prefix: true,\n        postfix: false,\n        leftAssoc: false,\n        operation: function operation(x) {\n          return x.negate();\n        }\n      },\n      '=': {\n        precedence: 2,\n        operator: '=',\n        action: 'equals',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '==': {\n        precedence: 1,\n        operator: '==',\n        action: 'eq',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '<': {\n        precedence: 1,\n        operator: '<',\n        action: 'lt',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '<=': {\n        precedence: 1,\n        operator: '<=',\n        action: 'lte',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '>': {\n        precedence: 1,\n        operator: '>',\n        action: 'gt',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '=>': {\n        precedence: 1,\n        operator: '=>',\n        action: 'gte',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      ',': {\n        precedence: 0,\n        operator: ',',\n        action: 'comma',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      ':': {\n        precedence: 0,\n        operator: ',',\n        action: 'assign',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false,\n        vectorFn: 'slice'\n      },\n      ':=': {\n        precedence: 0,\n        operator: ',',\n        action: 'function_assign',\n        prefix: false,\n        postfix: false,\n        leftAssoc: true\n      }\n    }; //brackets\n\n    var brackets = {\n      '(': {\n        type: 'round',\n        id: 1,\n        is_open: true,\n        is_close: false\n      },\n      ')': {\n        type: 'round',\n        id: 2,\n        is_open: false,\n        is_close: true\n      },\n      '[': {\n        type: 'square',\n        id: 3,\n        is_open: true,\n        is_close: false,\n        maps_to: 'vector'\n      },\n      ']': {\n        type: 'square',\n        id: 4,\n        is_open: false,\n        is_close: true\n      },\n      '{': {\n        type: 'curly',\n        id: 5,\n        is_open: true,\n        is_close: false,\n        maps_to: 'Set'\n      },\n      '}': {\n        type: 'curly',\n        id: 6,\n        is_open: false,\n        is_close: true\n      }\n    }; // Supported functions.\n    // Format: function_name: [mapped_function, number_of_parameters]\n\n    var functions = this.functions = {\n      'cos': [trig.cos, 1],\n      'sin': [trig.sin, 1],\n      'tan': [trig.tan, 1],\n      'sec': [trig.sec, 1],\n      'csc': [trig.csc, 1],\n      'cot': [trig.cot, 1],\n      'acos': [trig.acos, 1],\n      'asin': [trig.asin, 1],\n      'atan': [trig.atan, 1],\n      'arccos': [trig.acos, 1],\n      'arcsin': [trig.asin, 1],\n      'arctan': [trig.atan, 1],\n      'asec': [trig.asec, 1],\n      'acsc': [trig.acsc, 1],\n      'acot': [trig.acot, 1],\n      'atan2': [trig.atan2, 2],\n      'acoth': [trigh.acoth, 1],\n      'asech': [trigh.asech, 1],\n      'acsch': [trigh.acsch, 1],\n      'sinh': [trigh.sinh, 1],\n      'cosh': [trigh.cosh, 1],\n      'tanh': [trigh.tanh, 1],\n      'asinh': [trigh.asinh, 1],\n      'sech': [trigh.sech, 1],\n      'csch': [trigh.csch, 1],\n      'coth': [trigh.coth, 1],\n      'acosh': [trigh.acosh, 1],\n      'atanh': [trigh.atanh, 1],\n      'log10': [, 1],\n      'exp': [exp, 1],\n      'radians': [radians, 1],\n      'degrees': [degrees, 1],\n      'min': [min, -1],\n      'max': [max, -1],\n      'erf': [, 1],\n      'floor': [, 1],\n      'ceil': [, 1],\n      'trunc': [, 1],\n      'Si': [, 1],\n      'step': [, 1],\n      'rect': [, 1],\n      'sinc': [sinc, 1],\n      'tri': [, 1],\n      'sign': [sign, 1],\n      'Ci': [, 1],\n      'Ei': [, 1],\n      'Shi': [, 1],\n      'Chi': [, 1],\n      'Li': [, 1],\n      'fib': [, 1],\n      'fact': [factorial, 1],\n      'factorial': [factorial, 1],\n      'continued_fraction': [continued_fraction, [1, 2]],\n      'dfactorial': [, 1],\n      'gamma_incomplete': [, [1, 2]],\n      'round': [round, [1, 2]],\n      'scientific': [scientific, [1, 2]],\n      'mod': [mod, 2],\n      'pfactor': [pfactor, 1],\n      'vector': [vector, -1],\n      'matrix': [matrix, -1],\n      'Set': [set, -1],\n      'imatrix': [imatrix, -1],\n      'parens': [parens, -1],\n      'sqrt': [_sqrt, 1],\n      'cbrt': [cbrt, 1],\n      'nthroot': [nthroot, 2],\n      'log': [_log, [1, 2]],\n      'expand': [expandall, 1],\n      'abs': [abs, 1],\n      'invert': [invert, 1],\n      'determinant': [determinant, 1],\n      'size': [size, 1],\n      'transpose': [transpose, 1],\n      'dot': [dot, 2],\n      'cross': [cross, 2],\n      'vecget': [vecget, 2],\n      'vecset': [vecset, 3],\n      'vectrim': [vectrim, [1, 2]],\n      'matget': [matget, 3],\n      'matset': [matset, 4],\n      'matgetrow': [matgetrow, 2],\n      'matsetrow': [matsetrow, 3],\n      'matgetcol': [matgetcol, 2],\n      'matsetcol': [matsetcol, 3],\n      'rationalize': [rationalize, 1],\n      'IF': [IF, 3],\n      'is_in': [is_in, 2],\n      //imaginary support\n      'realpart': [realpart, 1],\n      'imagpart': [imagpart, 1],\n      'conjugate': [conjugate, 1],\n      'arg': [arg, 1],\n      'polarform': [polarform, 1],\n      'rectform': [rectform, 1],\n      'sort': [sort, [1, 2]],\n      'integer_part': [, 1],\n      'union': [union, 2],\n      'contains': [contains, 2],\n      'intersection': [intersection, 2],\n      'difference': [difference, 2],\n      'intersects': [intersects, 2],\n      'is_subset': [is_subset, 2],\n      //system support\n      'print': [print, -1]\n    }; //error handler\n\n    this.error = err; //this function is used to comb through the function modules and find a function given its name\n\n    var findFunction = function findFunction(fname) {\n      var fmodules = Settings.FUNCTION_MODULES,\n          l = fmodules.length;\n\n      for (var i = 0; i < l; i++) {\n        var fmodule = fmodules[i];\n        if (fname in fmodule) return fmodule[fname];\n      }\n\n      err('The function ' + fname + ' is undefined!');\n    };\n    /**\r\n     * This method gives the ability to override operators with new methods.\r\n     * @param {String} which\r\n     * @param {Function} with_what\r\n     */\n\n\n    this.override = function (which, with_what) {\n      if (!bin[which]) bin[which] = [];\n      bin[which].push(this[which]);\n      this[which] = with_what;\n    };\n    /**\r\n     * Restores a previously overridden operator\r\n     * @param {String} what\r\n     */\n\n\n    this.restore = function (what) {\n      if (this[what]) this[what] = bin[what].pop();\n    };\n    /**\r\n     * This method is supposed to behave similarly to the override method but it does not override\r\n     * the existing function rather it only extends it\r\n     * @param {String} what\r\n     * @param {Function} with_what\r\n     * @param {boolean} force_call\r\n     */\n\n\n    this.extend = function (what, with_what, force_call) {\n      var _ = this,\n          extended = this[what];\n\n      if (typeof extended === 'function' && typeof with_what === 'function') {\n        var f = this[what];\n\n        this[what] = function (a, b) {\n          if (isSymbol(a) && isSymbol(b) && !force_call) return f.call(_, a, b);else return with_what.call(_, a, b, f);\n        };\n      }\n    };\n    /**\r\n     * Generates library's representation of a function. It's a fancy way of saying a symbol with\r\n     * a few extras. The most important thing is that that it gives a fname and\r\n     * an args property to the symbols in addition to changing its group to FN\r\n     * @param {String} fn_name\r\n     * @param {Array} params\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.symfunction = function (fn_name, params) {\n      //call the proper function and return the result;\n      var f = new Symbol(fn_name);\n      f.group = FN;\n      if (typeof params === 'object') params = [].slice.call(params); //ensure an array\n\n      f.args = params;\n      f.fname = fn_name === PARENTHESIS ? '' : fn_name;\n      f.updateHash();\n      return f;\n    };\n    /**\r\n     * An internal function call for the Parser. This will either trigger a real\r\n     * function call if it can do so or just return a symbolic representation of the\r\n     * function using symfunction.\r\n     * @param {String} fn_name\r\n     * @param {Array} args\r\n     * @param {int} allowed_args\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.callfunction = function (fn_name, args, allowed_args) {\n      var fn_settings = functions[fn_name];\n      if (!fn_settings) err('Nerdamer currently does not support the function ' + fn_name);\n      var num_allowed_args = fn_settings[1] || allowed_args,\n          //get the number of allowed arguments\n      fn = fn_settings[0],\n          //get the mapped function\n      retval; //We want to be able to call apply on the arguments or create a symfunction. Both require\n      //an array so make sure to wrap the argument in an array.\n\n      if (!(args instanceof Array)) args = args !== undefined ? [args] : [];\n\n      if (num_allowed_args !== -1) {\n        var is_array = isArray(num_allowed_args),\n            min_args = is_array ? num_allowed_args[0] : num_allowed_args,\n            max_args = is_array ? num_allowed_args[1] : num_allowed_args,\n            num_args = args.length;\n        var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\n        if (num_args < min_args) err(format(error_msg, 'minimum', min_args, num_args));\n        if (num_args > max_args) err(format(error_msg, 'maximum', max_args, num_args));\n      }\n      /*\r\n       * The following are very important to the how nerdamer constructs functions!\r\n       * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\r\n       *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\r\n       * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\r\n       * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\r\n       *     they are expecting a symbolic output.\r\n       */\n      //check if arguments are all numers\n\n\n      var numericArgs = allNumbers(args); //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\n      //            if (Settings.USE_BIG && numericArgs) {\n      //                retval = Big[fn_name].apply(undefined, args);\n      //            }\n      //            else {\n\n      if (!fn) {\n        //Remember assumption 1. No function defined so it MUST be numeric in nature\n        fn = findFunction(fn_name);\n        if (Settings.PARSE2NUMBER && numericArgs) retval = bigConvert(fn.apply(fn, args));else retval = _.symfunction(fn_name, args);\n      } else {\n        //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\n        retval = fn.apply(fn_settings[2], args);\n      } //            }\n\n\n      return retval;\n    };\n    /**\r\n     * Build a regex based on the operators currently loaded. These operators are to be ignored when\r\n     * substituting spaces for multiplication\r\n     */\n\n\n    this.operator_filter_regex = function () {\n      //we only want the operators which are singular since those are the ones\n      //that nerdamer uses anyway\n      var ostr = '^\\\\' + Object.keys(operators).filter(function (x) {\n        if (x.length === 1) return x;\n      }).join('\\\\'); //create a regex which captures all spaces between characters except those\n      //have an operator on one end\n\n      return new RegExp('([' + ostr + '])\\\\s+([' + ostr + '])');\n    }();\n    /**\r\n     * Replaces nerdamer.setOperator\r\n     * @param {object} operator\r\n     * @param {boolean} shift\r\n     */\n\n\n    this.setOperator = function (operator, action, shift) {\n      var name = operator.operator; //take the name to be the symbol\n\n      operators[name] = operator;\n      if (action) this[operator.action] = action; //make the parser aware of the operator\n\n      _[name] = operator.operation; //make the action available to the parser if infix\n\n      if (!operator.action && !(operator.prefix || operator.postif)) {\n        operator.action = name;\n      } //if this operator is exclusive then all successive operators should be shifted\n\n\n      if (shift === 'over' || shift === 'under') {\n        var precedence = operator.precedence;\n\n        for (var x in operators) {\n          var o = operators[x];\n          var condition = shift === 'over' ? o.precedence >= precedence : o.precedence > precedence;\n          if (condition) o.precedence++;\n        }\n\n        ;\n      }\n    };\n    /**\r\n     * Gets an opererator by its symbol\r\n     * @param {String} operator\r\n     * @returns {Object}\r\n     */\n\n\n    this.getOperator = function (operator) {\n      return operators[operator];\n    };\n\n    this.aliasOperator = function (o, n) {\n      var t = {};\n      var operator = operators[o]; //copy everything over to the new operator\n\n      for (var x in operator) {\n        t[x] = operator[x];\n      } //update the symbol\n\n\n      t.operator = n;\n      this.setOperator(t);\n    };\n    /**\r\n     * Returns the list of operators. Caution! Can break parser!\r\n     * @returns {object}\r\n     */\n\n\n    this.getOperators = function () {\n      //will replace this with some cloning action in the future\n      return operators;\n    };\n\n    this.getBrackets = function () {\n      return brackets;\n    };\n    /*\r\n     * Preforms preprocessing on the string. Useful for making early modification before\r\n     * sending to the parser\r\n     * @param {String} e\r\n     */\n\n\n    var prepare_expression = function prepare_expression(e) {\n      /*\r\n       * Since variables cannot start with a number, the assumption is made that when this occurs the\r\n       * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for\r\n       * a side-by-side close and open parenthesis\r\n       */\n      e = String(e); //apply preprocessors\n\n      for (var i = 0; i < preprocessors.actions.length; i++) {\n        e = preprocessors.actions[i].call(this, e);\n      } //e = e.split(' ').join('');//strip empty spaces\n      //replace multiple spaces with one space\n\n\n      e = e.replace(/\\s+/g, ' '); //only even bother to check if the string contains e. This regex is painfully slow and might need a better solution. e.g. hangs on (0.06/3650))^(365)\n\n      if (/e/gi.test(e)) {\n        e = e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function (x) {\n          return scientificToDecimal(x);\n        });\n      } //replace scientific numbers\n      //allow omission of multiplication after coefficients\n\n\n      e = e.replace(Settings.IMPLIED_MULTIPLICATION_REGEX, function () {\n        var str = arguments[4],\n            group1 = arguments[1],\n            group2 = arguments[2],\n            start = arguments[3],\n            first = str.charAt(start),\n            before = '',\n            d = '*';\n        if (!first.match(/[\\+\\-\\/\\*]/)) before = str.charAt(start - 1);\n        if (before.match(/[a-z]/i)) d = '';\n        return group1 + d + group2;\n      }).replace(/([a-z0-9_]+)/gi, function (match, a) {\n        if (Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\n          if (!isNaN(a)) return a;\n          return a.split('').join('*');\n        }\n\n        return a;\n      }) //allow omission of multiplication sign between brackets\n      .replace(/\\)\\(/g, ')*(') || '0'; //replace x(x+a) with x*(x+a)\n\n      while (true) {\n        var e_org = e; //store the original\n\n        e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function (match, a, b, c, d) {\n          var g1 = a || c,\n              g2 = b || d;\n          if (g1 in functions) //create a passthrough for functions\n            return g1 + g2;\n          return g1 + '*' + g2;\n        }); //if the original equals the replace we're done\n\n        if (e_org === e) break;\n      }\n\n      return e;\n    }; //delay setting of constants until Settings is ready\n\n\n    this.initConstants = function () {\n      this.CONSTANTS = {\n        E: new Symbol(Settings.E),\n        PI: new Symbol(Settings.PI)\n      };\n    };\n    /*\r\n     * Debugging method used to better visualize vector and arrays\r\n     * @param {object} o\r\n     * @returns {String}\r\n     */\n\n\n    this.pretty_print = function (o) {\n      if (Array.isArray(o)) {\n        var s = o.map(function (x) {\n          return _.pretty_print(x);\n        }).join(', ');\n        if (o.type === 'vector') return 'vector<' + s + '>';\n        return '(' + s + ')';\n      }\n\n      return o.toString();\n    };\n\n    this.peekers = {\n      pre_operator: [],\n      post_operator: [],\n      pre_function: [],\n      post_function: []\n    };\n\n    this.callPeekers = function (name) {\n      if (Settings.callPeekers) {\n        var peekers = this.peekers[name]; //remove the first items and stringify\n\n        var args = arguments2Array(arguments).slice(1).map(stringify); //call each one of the peekers\n\n        for (var i = 0; i < peekers.length; i++) {\n          peekers[i].apply(null, args);\n        }\n      }\n    };\n    /*\r\n     * Tokenizes the string\r\n     * @param {String} e\r\n     * @returns {Token[]}\r\n     */\n\n\n    this.tokenize = function (e) {\n      //cast to String\n      e = String(e); //remove multiple white spaces and spaces at beginning and end of string\n\n      e = e.trim().replace(/\\s+/g, ' '); //remove spaces before and after brackets\n\n      for (var x in brackets) {\n        var regex = new RegExp(brackets[x].is_close ? '\\\\s+\\\\' + x : '\\\\' + x + '\\\\s+', 'g');\n        e = e.replace(regex, x);\n      }\n\n      var col = 0; //the column position\n\n      var L = e.length; //expression length\n\n      var lpos = 0; //marks beginning of next token\n\n      var tokens = []; //the tokens container\n\n      var scopes = [tokens]; //initiate with the tokens as the highest scope\n\n      var target = scopes[0]; //the target to which the tokens are added. This can swing up or down\n\n      var depth = 0;\n      var open_brackets = [];\n      var has_space = false; //marks if an open space character was found\n\n      var SPACE = ' ';\n      var EMPTY_STRING = '';\n      var COMMA = ',';\n      var MINUS = '-';\n      var MULT = '*'; //Possible source of bug. Review\n\n      /*\r\n       //gets the next space\r\n       var next_space = function(from) {\r\n       for(var i=from; i<L; i++) {\r\n       if(e.charAt(i) === ' ')\r\n       return i;\r\n       }\r\n       \r\n       return L; //assume the end of the string instead\r\n       };\r\n       */\n\n      /**\r\n       * Adds a scope to tokens\r\n       * @param {String} scope_type\r\n       * @param {int} column\r\n       * @returns {undefined}\r\n       */\n\n      var addScope = function addScope(scope_type, column) {\n        var new_scope = []; //create a new scope\n\n        if (scope_type !== undefined) {\n          new_scope.type = scope_type;\n        }\n\n        new_scope.column = column; //mark the column of the scope\n\n        scopes.push(new_scope); //add it to the list of scopes\n\n        target.push(new_scope); //add it to the tokens list since now it's a scope\n\n        target = new_scope; //point to it\n\n        depth++; //go down one in scope\n      };\n      /**\r\n       * Goes up in scope by one\r\n       * @returns {undefined}\r\n       */\n\n\n      var goUp = function goUp() {\n        scopes.pop(); //remove the scope from the scopes stack\n\n        target = scopes[--depth]; //point the above scope\n      };\n      /**\r\n       * Extracts all the operators from the expression string starting at postion start_at\r\n       * @param {int} start_at\r\n       * @returns {String}\r\n       */\n\n\n      var get_operator_str = function get_operator_str(start_at) {\n        start_at = start_at !== undefined ? start_at : col; //mark the end of the operator as the start since we're just going\n        //to be walking along the string\n\n        var end = start_at + 1; //just keep moving along\n\n        while (e.charAt(end++) in operators) {} //remember that we started at one position ahead. The beginning operator is what triggered\n        //this function to be called in the first place. String.CharAt is zero based so we now\n        //have to correct two places. The initial increment + the extra++ at the end of end during\n        //the last iteration.\n\n\n        return e.substring(start_at, end - 1);\n      };\n      /**\r\n       * Breaks operator up in to several different operators as defined in operators\r\n       * @param {String} operator_str\r\n       * @returns {String[]}\r\n       */\n\n\n      var chunkify = function chunkify(operator_str) {\n        var start = col - operator_str.length; //start of operator\n\n        var _operators = [];\n        var operator = operator_str.charAt(0); //grab the largest possible chunks but start at 2 since we already know\n        //that the first character is an operator\n\n        for (var i = 1, L = operator_str.length; i < L; i++) {\n          var ch = operator_str.charAt(i);\n          var o = operator + ch; //since the operator now is undefined then the last operator\n          //was the largest possible combination.\n\n          if (!(o in operators)) {\n            _operators.push(new Token(operator, Token.OPERATOR, start + i));\n\n            operator = ch;\n          } else operator = o; //now the operator is the larger chunk\n\n        } //add the last operator\n\n\n        _operators.push(new Token(operator, Token.OPERATOR, start + i));\n\n        return _operators;\n      };\n      /**\r\n       * Is used to add a token to the tokens array. Makes sure that no empty token is added\r\n       * @param {int} at\r\n       * @param {String} token\r\n       * @returns {undefined}\r\n       */\n\n\n      var add_token = function add_token(at, token) {\n        //grab the token if we're not supplied one\n        if (token === undefined) token = e.substring(lpos, at); //only add it if it's not an empty string\n\n        if (token in _.units) target.push(new Token(token, Token.UNIT, lpos));else if (token !== '') target.push(new Token(token, Token.VARIABLE_OR_LITERAL, lpos));\n      };\n      /**\r\n       * Adds a function to the output\r\n       * @param {String} f\r\n       * @returns {undefined}\r\n       */\n\n\n      var add_function = function add_function(f) {\n        target.push(new Token(f, Token.FUNCTION, lpos));\n      };\n      /**\r\n       * Tokens are found between operators so this marks the location of where the last token was found\r\n       * @param {int} position\r\n       * @returns {undefined}\r\n       */\n\n\n      var set_last_position = function set_last_position(position) {\n        lpos = position + 1;\n      };\n      /**\r\n       * When a operator is found and added, especially a combo operator, then the column location\r\n       * has to be adjusted to the end of the operator\r\n       * @returns {undefined}\r\n       */\n\n\n      var adjust_column_position = function adjust_column_position() {\n        lpos = lpos + operator_str.length - 2;\n        col = lpos - 1;\n      };\n\n      for (; col < L; col++) {\n        var ch = e.charAt(col);\n\n        if (ch in operators) {\n          add_token(col); //is the last token numeric?\n\n          var last_token_is_numeric = target[0] && isNumber(target[0]); //is this character multiplication?\n\n          var is_multiplication = last_token_is_numeric && ch === MULT; //if we're in a new scope then go up by one but if the space\n          //is right befor an operator then it makes no sense to go up in scope\n          //consider sin -x. The last position = current position at the minus sign\n          //this means that we're going for sin(x) -x which is wrong\n          //Ignore comma since comma is still part of the existing scope.\n\n          if (has_space && lpos < col && !(ch === COMMA || is_multiplication)) {\n            has_space = false;\n            goUp();\n          } //mark the last position that a\n\n\n          set_last_position(col + 1);\n          var operator_str = get_operator_str(col);\n          adjust_column_position();\n          target.push.apply(target, chunkify(operator_str));\n        } else if (ch in brackets) {\n          var bracket = brackets[ch];\n\n          if (bracket.is_open) {\n            //mark the bracket\n            open_brackets.push([bracket, lpos]);\n            var f = e.substring(lpos, col);\n\n            if (f in functions) {\n              add_function(f);\n            } else if (f !== '') {\n              //assume multiplication\n              //TODO: Add the multiplication to stack\n              target.push(new Token(f, Token.VARIABLE_OR_LITERAL, lpos));\n            } //go down one in scope\n\n\n            addScope(bracket.maps_to, col);\n          } else if (bracket.is_close) {\n            //get the matching bracket\n            var pair = open_brackets.pop(); //throw errors accordingly\n            //missing open bracket\n\n            if (!pair) throw new ParityError('Missing open bracket for bracket at: ' + (col + 1)); //incorrect pair\n            else if (pair[0].id !== bracket.id - 1) throw new ParityError('Parity error');\n            add_token(col);\n            goUp();\n          }\n\n          set_last_position(col);\n        } else if (ch === SPACE) {\n          var prev = e.substring(lpos, col); //look back\n\n          var nxt = e.charAt(col + 1); //look forward\n\n          if (has_space) {\n            if (prev in operators) {\n              target.push(new Token(prev, Token.OPERATOR, col));\n            } else {\n              add_token(undefined, prev); //we're at the closing space\n\n              goUp(); //go up in scope if we're at a space\n              //assume multiplication if it's not an operator except for minus\n\n              var is_operator = (nxt in operators);\n\n              if (is_operator && operators[nxt].value === MINUS || !is_operator) {\n                target.push(new Token(MULT, Token.OPERATOR, col));\n              }\n            }\n\n            has_space = false; //remove the space\n          } else {\n            //we're at the closing space\n            //check if it's a function\n            var f = e.substring(lpos, col);\n\n            if (f in functions) {\n              //there's no need to go up in scope if the next character is an operator\n              has_space = true; //mark that a space was found\n\n              add_function(f);\n              addScope();\n            } else if (f in operators) {\n              target.push(new Token(f, Token.OPERATOR, col));\n            } else {\n              add_token(undefined, f); //peek ahead to the next character\n\n              var nxt = e.charAt(col + 1); //If it's a number then add the multiplication operator to the stack but make sure that the next character\n              //is not an operator\n\n              if (prev !== EMPTY_STRING && nxt !== EMPTY_STRING && !(prev in operators) && !(nxt in operators)) target.push(new Token(MULT, Token.OPERATOR, col));\n            } //Possible source of bug. Review\n\n            /*\r\n             //space can mean multiplication so add the symbol if the is encountered\r\n             if(/\\d+|\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(f)) {\r\n             var next = e.charAt(col+1);\r\n             var next_is_operator = next in operators;\r\n             var ns = next_space(col+1);\r\n             var next_word = e.substring(col+1, ns);\r\n             //the next can either be a prefix operator or no operator\r\n             if((next_is_operator && operators[next].prefix) || !(next_is_operator || next_word in operators))\r\n             target.push(new Token('*', Token.OPERATOR, col));\r\n             }\r\n             */\n\n          }\n\n          set_last_position(col); //mark this location\n        }\n      } //check that all brackets were closed\n\n\n      if (open_brackets.length) {\n        var b = open_brackets.pop();\n        throw new ParityError('Missing closed bracket for bracket at ' + (b[1] + 1));\n      } //add the last token\n\n\n      add_token(col);\n      return tokens;\n    };\n    /*\r\n     * Puts token array in Reverse Polish Notation\r\n     * @param {Token[]} tokens\r\n     * @returns {Token[]}\r\n     */\n\n\n    this.toRPN = function (tokens) {\n      var fn = tokens.type;\n      var l = tokens.length,\n          i;\n      var output = [];\n      var stack = [];\n      var prefixes = [];\n\n      var collapse = function collapse(target, destination) {\n        while (target.length) {\n          destination.push(target.pop());\n        }\n      }; //mark all the prefixes and add them to the stack\n\n\n      for (i = 0; i < l; i++) {\n        var token = tokens[i];\n        if (token.type !== Token.OPERATOR) break;\n        if (!token.prefix) throw new OperatorError('Not a prefix operator');\n        token.is_prefix = true;\n        stack.push(token);\n      } //begin with remaining tokens\n\n\n      for (; i < l; i++) {\n        var e = tokens[i];\n\n        if (e.type === Token.OPERATOR) {\n          var operator = e; //create the option for the operator being overloaded\n\n          if (operator.overloaded) {\n            var next = tokens[i + 1]; //if it's followed by a number or variable then we assume it's not a postfix operator\n\n            if (next && next.type === Token.VARIABLE_OR_LITERAL) {\n              operator.postfix = false; //override the original function with the overload function\n\n              operator.action = operator.overloadAction;\n              operator.leftAssoc = operator.overloadLeftAssoc;\n            }\n          } //if the stack is not empty\n\n\n          while (stack.length) {\n            var last = stack[stack.length - 1]; //if (there is an operator at the top of the operator stack with greater precedence)\n            //or (the operator at the top of the operator stack has equal precedence and is left associative)) ~ wikipedia\n            //the !prefixes.length makes sure that the operator on stack isn't prematurely taken fromt he stack.\n\n            if (!(last.precedence > operator.precedence || !operator.leftAssoc && last.precedence === operator.precedence)) break;\n            output.push(stack.pop());\n          } //change the behavior of the operator if it's a vector and we've been asked to do so\n\n\n          if ((fn === 'vector' || fn === 'set') && 'vectorFn' in operator) operator.action = operator.vectorFn; //if the operator is a postfix operator then we're ready to go since it belongs\n          //to the preceding token. However the output cannot be empty. It must have either\n          //an operator or a variable/literal\n\n          if (operator.postfix) {\n            var previous = tokens[i - 1];\n            if (!previous) throw new OperatorError(\"Unexpected prefix operator '\" + e.value + \"'! at \" + e.column);else if (previous.type === Token.OPERATOR) {\n              //a postfix can only be followed by a postfix\n              if (!previous.postfix) throw new OperatorError(\"Unexpected prefix operator '\" + previous.value + \"'! at \" + previous.column);\n            }\n          } else {\n            //we must be at an infix so point the operator this\n            do {\n              //the first one is an infix operator all others have to be prefix operators so jump to the end\n              var next = tokens[i + 1]; //take a look ahead\n\n              var next_is_operator = next ? next.type === Token.OPERATOR : false; //check if it's an operator\n\n              if (next_is_operator) {\n                //if it's not a prefix operator then it not in the right place\n                if (!next.prefix) {\n                  throw new OperatorError('A prefix operator was expected at ' + next.column);\n                } //mark it as a confirmed prefix\n\n\n                next.is_prefix = true; //add it to the prefixes\n\n                prefixes.push(next);\n                i++;\n              }\n            } while (next_is_operator);\n          } //if it's a prefix it should be on a special stack called prefixes\n          //we do this to hold on to prefixes because of left associative operators.\n          //they belong to the variable/literal but if placed on either the stack\n          //or output there's no way of knowing this. I might be wrong so I welcome\n          //any discussion about this.\n\n\n          if (operator.is_prefix) //ADD ALL EXCEPTIONS FOR ADDING TO PREFIX STACK HERE. !!!\n            prefixes.push(operator);else stack.push(operator); //move the prefixes to the stack\n\n          while (prefixes.length) {\n            if (operator.leftAssoc || !operator.leftAssoc && prefixes[prefixes.length - 1].precedence >= operator.precedence) //revisit for commas\n              stack.push(prefixes.pop());else break;\n          }\n        } else if (e.type === Token.VARIABLE_OR_LITERAL) {\n          //move prefixes to stack at beginning of scope\n          if (output.length === 0) collapse(prefixes, stack); //done with token\n\n          output.push(e);\n          var last_on_stack = stack[stack.length - 1]; //then move all the prefixes to the output\n\n          if (!last_on_stack || !last_on_stack.leftAssoc) collapse(prefixes, output);\n        } else if (e.type === Token.FUNCTION) {\n          stack.push(e);\n        } else if (e.type === Token.UNIT) {\n          //if it's a unit it belongs on the stack since it's tied to the previous token\n          output.push(e);\n        } //if it's an additonal scope then put that into RPN form\n\n\n        if (Array.isArray(e)) {\n          output.push(this.toRPN(e));\n          if (e.type) output.push(new Token(e.type, Token.FUNCTION, e.column)); //since it's hidden it needs no column\n        }\n      } //collapse the remainder of the stack and prefixes to output\n\n\n      collapse(stack, output);\n      collapse(prefixes, output);\n      return output;\n    };\n    /*\r\n     * Parses the tokens\r\n     * @param {Tokens[]} rpn\r\n     * @param {object} substitutions\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.parseRPN = function (rpn, substitutions) {\n      try {\n        //default substitutions\n        substitutions = substitutions || {}; //prepare the substitutions.\n        //we first parse them out as-is\n\n        for (var x in substitutions) {\n          substitutions[x] = _.parse(substitutions[x], {});\n        } //Although technically constants,\n        //pi and e are only available when evaluating the expression so add to the subs.\n        //Doing this avoids rounding errors\n        //link e and pi\n\n\n        if (Settings.PARSE2NUMBER) {\n          //use the value provided if the individual for some strange reason prefers this.\n          //one reason could be to sub e but not pi or vice versa\n          if (!('e' in substitutions)) substitutions.e = new Symbol(Settings.E);\n          if (!('pi' in substitutions)) substitutions.pi = new Symbol(Settings.PI);\n        }\n\n        var Q = [];\n\n        for (var i = 0, l = rpn.length; i < l; i++) {\n          var e = rpn[i]; //Arrays indicate a new scope so parse that out\n\n          if (Array.isArray(e)) {\n            e = this.parseRPN(e, substitutions);\n          }\n\n          if (e) {\n            if (e.type === Token.OPERATOR) {\n              if (e.is_prefix || e.postfix) //resolve the operation assocated with the prefix\n                Q.push(e.operation(Q.pop()));else {\n                var b = Q.pop();\n                var a = Q.pop(); //Throw an error if the RH value is empty. This cannot be a postfix since we already checked\n\n                if (typeof a === 'undefined') throw new OperatorError(e + ' is not a valid postfix operator at ' + e.column);\n                var is_comma = e.action === 'comma'; //convert Sets to Vectors on all operations at this point. Sets are only recognized functions or individually\n\n                if (a instanceof Set && !is_comma) a = Vector.fromSet(a);\n                if (b instanceof Set && !is_comma) b = Vector.fromSet(b); //call all the pre-operators\n\n                this.callPeekers('pre_operator', a, b, e);\n\n                var ans = _[e.action](a, b); //call all the pre-operators\n\n\n                this.callPeekers('post_operator', ans, a, b, e);\n                Q.push(ans);\n              }\n            } else if (e.type === Token.FUNCTION) {\n              var args = Q.pop();\n              var parent = args.parent; //make a note of the parent\n\n              if (!(args instanceof Collection)) args = Collection.create(args); //the return value may be a vector. If it is then we check\n              //Q to see if there's another vector on the stack. If it is then\n              //we check if has elements. If it does then we know that we're dealing\n              //with an \"getter\" object and return the requested values\n              //call the function. This is the _.callfunction method in nerdamer\n              //call the function. This is the _.callfunction method in nerdamer\n\n              var fn_name = e.value;\n              var fn_args = args.getItems(); //call the pre-function peekers\n\n              this.callPeekers('pre_function', fn_name, fn_args);\n\n              var ret = _.callfunction(fn_name, fn_args); //call the post-function peekers\n\n\n              this.callPeekers('post_function', ret, fn_name, fn_args);\n              var last = Q[Q.length - 1];\n              var next = rpn[i + 1];\n              var next_is_comma = next && next.type === Token.OPERATOR && next.value === ',';\n\n              if (!next_is_comma && ret instanceof Vector && last && last.elements && !(last instanceof Collection)) {\n                //remove the item from the queue\n                var item = Q.pop();\n                var getter = ret.elements[0]; //check if it's symbolic. If so put it back and add the item to the stack\n\n                if (!getter.isConstant()) {\n                  item.getter = getter;\n                  Q.push(item);\n                  Q.push(ret);\n                } else if (getter instanceof Slice) {\n                  //if it's a Slice return the slice\n                  Q.push(Vector.fromArray(item.elements.slice(getter.start, getter.end)));\n                } else {\n                  var index = Number(getter);\n                  var il = item.elements.length; //support for negative indices\n\n                  if (index < 0) index = il + index; //it it's still out of bounds\n\n                  if (index < 0 || index >= il) //index should no longer be negative since it's been reset above\n                    //range error\n                    throw new OutOfRangeError('Index out of range ' + (e.column + 1));\n                  var element = item.elements[index]; //cyclic but we need to mark this for future reference\n\n                  item.getter = index;\n                  element.parent = item;\n                  Q.push(element);\n                }\n              } else {\n                //extend the parent reference\n                if (parent) ret.parent = parent;\n                Q.push(ret);\n              }\n            } else {\n              var subbed;\n              var v = e.value;\n              if (v in Settings.ALIASES) e = _.parse(Settings.ALIASES[e]); //wrap it in a symbol if need be\n              else if (e.type === Token.VARIABLE_OR_LITERAL) e = new Symbol(v);else if (e.type === Token.UNIT) {\n                e = new Symbol(v);\n                e.isUnit = true;\n              } //make substitutions\n              //Always constants first. This avoids the being overridden\n\n              if (v in _.CONSTANTS) {\n                subbed = e;\n                e = new Symbol(_.CONSTANTS[v]);\n              } //next substitutions. This allows declared variable to be overridden\n              //check if the values match to avoid erasing the multiplier.\n              //Example:/e = 3*a. substutiting a for a will wipe out the multiplier.\n              else if (v in substitutions && v !== substitutions[v].toString()) {\n                subbed = e;\n                e = substitutions[v].clone();\n              } //next declare variables\n              else if (v in VARS) {\n                subbed = e;\n                e = VARS[v].clone();\n              } //make notation of what it was before\n\n\n              if (subbed) e.subbed = subbed;\n              Q.push(e);\n            }\n          }\n        }\n\n        var retval = Q[0];\n\n        if (['undefined', 'string', 'number'].indexOf(typeof retval) !== -1) {\n          throw new UnexpectedTokenError('Unexpected token!');\n        }\n\n        return retval;\n      } catch (error) {\n        var rethrowErrors = [OutOfFunctionDomainError]; // Rethrow certain errors in the same class to preserve them\n\n        rethrowErrors.forEach(function (E) {\n          if (error instanceof E) {\n            throw new E(error.message + ': ' + e.column);\n          }\n        });\n        throw new ParseError(error.message + ': ' + e.column);\n      }\n    };\n    /**\r\n     * This is the method that triggers the parsing of the string. It generates a parse tree but processes\r\n     * it right away. The operator functions are called when their respective operators are reached. For instance\r\n     * + with cause this.add to be called with the left and right hand values. It works by walking along each\r\n     * character of the string and placing the operators on the stack and values on the output. When an operator\r\n     * having a lower order than the last is reached then the stack is processed from the last operator on the\r\n     * stack.\r\n     * @param {String} token\r\n     */\n\n\n    function Node(token) {\n      this.type = token.type;\n      this.value = token.value; //the incoming token may already be a Node type\n\n      this.left = token.left;\n      this.right = token.right;\n    }\n\n    Node.prototype.toString = function () {\n      var left = this.left ? this.left.toString() + '---' : '';\n      var right = this.right ? '---' + this.right.toString() : '';\n      return left + '(' + this.value + ')' + right;\n    };\n\n    Node.prototype.toHTML = function (depth, indent) {\n      depth = depth || 0;\n      indent = typeof indent === 'undefined' ? 4 : indent;\n\n      var tab = function tab(n) {\n        return ' '.repeat(indent * n);\n      };\n\n      var html = '';\n      var left = this.left ? tab(depth + 1) + '<li>\\n' + this.left.toHTML(depth + 2, indent) + tab(depth + 1) + '</li> \\n' : '';\n      var right = this.right ? tab(depth + 1) + '<li>\\n' + this.right.toHTML(depth + 2, indent) + tab(depth + 1) + '</li>\\n' : '';\n      var html = tab(depth) + '<div class=\"' + this.type.toLowerCase() + '\"><span>' + this.value + '</span></div>' + tab(depth) + '\\n';\n\n      if (left || right) {\n        html += tab(depth) + '<ul>\\n' + left + right + tab(depth) + '</ul>\\n';\n      }\n\n      html += '';\n      return html;\n    };\n\n    this.tree = function (tokens) {\n      var Q = [];\n\n      for (var i = 0; i < tokens.length; i++) {\n        var e = tokens[i]; //Arrays indicate a new scope so parse that out\n\n        if (Array.isArray(e)) {\n          e = this.tree(e); //if it's a comma then it's just arguments\n\n          Q.push(e);\n          continue;\n        }\n\n        if (e.type === Token.OPERATOR) {\n          if (e.is_prefix || e.postfix) {\n            //prefixes go to the left, postfix to the right\n            var location = e.is_prefix ? 'left' : 'right';\n            var last = Q.pop();\n            e = new Node(e);\n            e[location] = last;\n            Q.push(e);\n          } else {\n            e = new Node(e);\n            e.right = Q.pop();\n            e.left = Q.pop();\n            Q.push(e);\n          }\n        } else if (e.type === Token.FUNCTION) {\n          e = new Node(e);\n          var args = Q.pop();\n          e.right = args;\n\n          if (e.value === 'object') {\n            //check if Q has a value\n            var last = Q[Q.length - 1];\n\n            if (last) {\n              while (last.right) {\n                last = last.right;\n              }\n\n              last.right = e;\n              continue;\n            }\n          }\n\n          Q.push(e);\n        } else {\n          Q.push(new Node(e));\n        }\n      }\n\n      return Q[0];\n    };\n\n    this.parse = function (e, substitutions) {\n      e = prepare_expression(e);\n      substitutions = substitutions || {}; //three passes but easier to debug\n\n      var tokens = this.tokenize(e);\n      var rpn = this.toRPN(tokens);\n      return this.parseRPN(rpn, substitutions);\n    };\n    /**\r\n     * TODO: Switch to Parser.tokenize for this method\r\n     * Reads a string into an array of Symbols and operators\r\n     * @param {String} expression_string\r\n     * @returns {Array}\r\n     */\n\n\n    this.toObject = function (expression_string) {\n      var objectify = function objectify(tokens) {\n        var output = [];\n\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i];\n          var v = token.value;\n\n          if (token.type === Token.VARIABLE_OR_LITERAL) {\n            output.push(new Symbol(v));\n          } else if (token.type === Token.FUNCTION) {\n            //jump ahead since the next object are the arguments\n            i++; //create a symbolic function and stick it on output\n\n            var f = _.symfunction(v, objectify(tokens[i]));\n\n            f.isConversion = true;\n            output.push(f);\n          } else if (token.type === Token.OPERATOR) {\n            output.push(v);\n          } else {\n            output.push(objectify(token));\n          }\n        }\n\n        return output;\n      };\n\n      return objectify(_.tokenize(expression_string));\n    }; // A helper method for toTeX\n\n\n    var chunkAtCommas = function chunkAtCommas(arr) {\n      var j,\n          k = 0,\n          chunks = [[]];\n\n      for (var j = 0, l = arr.length; j < l; j++) {\n        if (arr[j] === ',') {\n          k++;\n          chunks[k] = [];\n        } else {\n          chunks[k].push(arr[j]);\n        }\n      }\n\n      return chunks;\n    }; // Helper method for toTeX\n\n\n    var rem_brackets = function rem_brackets(str) {\n      return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\n        if (a) return a;\n        return str;\n      });\n    };\n\n    var remove_redundant_powers = function remove_redundant_powers(arr) {\n      // The filtered array\n      var narr = [];\n\n      while (arr.length) {\n        // Remove the element from the front\n        var e = arr.shift();\n        var next = arr[0];\n        var next_is_array = isArray(next);\n        var next_is_minus = next === '-'; // Remove redundant plusses \n\n        if (e === '^') {\n          if (next === '+') {\n            arr.shift();\n          } else if (next_is_array && next[0] === '+') {\n            next.shift();\n          } // Remove redundant parentheses\n\n\n          if (next_is_array && next.length === 1) {\n            arr.unshift(arr.shift()[0]);\n          }\n        } // Check if it's a negative power\n\n\n        if (e === '^' && (next_is_array && next[0] === '-' || next_is_minus)) {\n          // If so:\n          // - Remove it from the new array, place a one and a division sign in that array and put it back\n          var last = narr.pop(); // Check if it's something multiplied by\n\n          var before = narr[narr.length - 1];\n          var before_last = '1';\n\n          if (before === '*') {\n            narr.pop(); // For simplicity we just pop it. \n\n            before_last = narr.pop();\n          } // Implied multiplication\n          else if (isArray(before)) {\n            before_last = narr.pop();\n          }\n\n          narr.push(before_last, '/', last, e); // Remove the negative sign from the power \n\n          if (next_is_array) {\n            next.shift();\n          } else {\n            arr.shift();\n          } // Remove it from the array so we don't end up with redundant parentheses if we can\n\n\n          if (next_is_array && next.length === 1) {\n            narr.push(arr.shift()[0]);\n          }\n        } else {\n          narr.push(e);\n        }\n      }\n\n      return narr;\n    };\n    /*\r\n     * Convert expression or object to LaTeX\r\n     * @param {String} expression_or_obj\r\n     * @param {object} opt\r\n     * @returns {String}\r\n     */\n\n\n    this.toTeX = function (expression_or_obj, opt) {\n      opt = opt || {}; // Add decimal option as per issue #579. Consider passing an object to Latex.latex as option instead of string\n\n      var decimals = opt.decimals === true ? 'decimals' : undefined;\n      var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\n          TeX = [],\n          cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\n      // Remove negative powers as per issue #570\n\n      obj = remove_redundant_powers(obj);\n\n      if (isArray(obj)) {\n        var nobj = [],\n            a,\n            b; //first handle ^\n\n        for (var i = 0; i < obj.length; i++) {\n          a = obj[i];\n\n          if (obj[i + 1] === '^') {\n            b = obj[i + 2];\n            nobj.push(LaTeX.braces(this.toTeX([a])) + '^' + LaTeX.braces(this.toTeX([b])));\n            i += 2;\n          } else {\n            nobj.push(a);\n          }\n        }\n\n        obj = nobj;\n      }\n\n      for (var i = 0, l = obj.length; i < l; i++) {\n        var e = obj[i]; // Convert * to cdot\n\n        if (e === '*') {\n          e = cdot;\n        }\n\n        if (isSymbol(e)) {\n          if (e.group === FN) {\n            var fname = e.fname,\n                f;\n\n            if (fname === SQRT) {\n              f = '\\\\sqrt' + LaTeX.braces(this.toTeX(e.args));\n            } else if (fname === ABS) {\n              f = LaTeX.brackets(this.toTeX(e.args), 'abs');\n            } else if (fname === PARENTHESIS) {\n              f = LaTeX.brackets(this.toTeX(e.args), 'parens');\n            } else if (fname === Settings.LOG10) {\n              f = '\\\\' + Settings.LOG10_LATEX + '\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\n            } else if (fname === 'integrate') {\n              /* Retrive [Expression, x] */\n              var chunks = chunkAtCommas(e.args);\n              /* Build TeX */\n\n              var expr = LaTeX.braces(this.toTeX(chunks[0])),\n                  dx = this.toTeX(chunks[1]);\n              f = '\\\\int ' + expr + '\\\\, d' + dx;\n            } else if (fname === 'defint') {\n              var chunks = chunkAtCommas(e.args),\n                  expr = LaTeX.braces(this.toTeX(chunks[0])),\n                  dx = this.toTeX(chunks[3]),\n                  lb = this.toTeX(chunks[1]),\n                  ub = this.toTeX(chunks[2]);\n              f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + expr + '\\\\, d' + dx;\n            } else if (fname === 'diff') {\n              var chunks = chunkAtCommas(e.args);\n              var dx = '',\n                  expr = LaTeX.braces(this.toTeX(chunks[0]));\n              /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\n\n              if (chunks.length === 1) {\n                var vars = [];\n\n                for (j = 0; j < chunks[0].length; j++) {\n                  if (chunks[0][j].group === 3) {\n                    vars.push(chunks[0][j].value);\n                  }\n                }\n\n                vars.sort();\n                dx = vars.length > 0 ? '\\\\frac{d}{d ' + vars[0] + '}' : '\\\\frac{d}{d x}';\n              }\n              /* If two arguments, we have expression and variable, we assume n = 1 */\n              else if (chunks.length === 2) {\n                dx = '\\\\frac{d}{d ' + chunks[1] + '}';\n              }\n              /* If we have more than 2 arguments, we assume we've got everything */\n              else {\n                dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\n              }\n\n              f = dx + '\\\\left(' + expr + '\\\\right)';\n            } else if (fname === 'sum' || fname === 'product') {\n              // Split e.args into 4 parts based on locations of , symbols.\n              var argSplit = [[], [], [], []],\n                  j = 0,\n                  i;\n\n              for (i = 0; i < e.args.length; i++) {\n                if (e.args[i] === ',') {\n                  j++;\n                  continue;\n                }\n\n                argSplit[j].push(e.args[i]);\n              } // Then build TeX string.\n\n\n              f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\n              f += '^' + LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\n            } else if (fname === 'limit') {\n              var args = chunkAtCommas(e.args).map(function (x) {\n                if (Array.isArray(x)) return _.toTeX(x.join(''));\n                return _.toTeX(String(x));\n              });\n              f = '\\\\lim_' + LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX.braces(args[0]);\n            } else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\n              f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');\n            } else {\n              f = LaTeX.latex(e, decimals); //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\n            }\n\n            TeX.push(f);\n          } else {\n            TeX.push(LaTeX.latex(e, decimals));\n          }\n        } else if (isArray(e)) {\n          TeX.push(LaTeX.brackets(this.toTeX(e)));\n        } else {\n          if (e === '/') TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));else TeX.push(e);\n        }\n      }\n\n      return TeX.join(' ');\n    }; //Parser.functions ==============================================================\n\n    /* Although parens is not a \"real\" function it is important in some cases when the\r\n     * symbol must carry parenthesis. Once set you don't have to worry about it anymore\r\n     * as the parser will get rid of it at the first opportunity\r\n     */\n\n\n    function parens(symbol) {\n      if (Settings.PARSE2NUMBER) {\n        return symbol;\n      }\n\n      return _.symfunction('parens', [symbol]);\n    }\n\n    function abs(symbol) {\n      //|-∞| = ∞\n      if (symbol.isInfinity) {\n        return Symbol.infinity();\n      }\n\n      if (symbol.multiplier.lessThan(0)) symbol.multiplier.negate();\n\n      if (symbol.isImaginary()) {\n        var re = symbol.realpart();\n        var im = symbol.imagpart();\n        if (re.isConstant() && im.isConstant()) return _sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\n      } else if (isNumericSymbol(symbol) || even(symbol.power)) {\n        return symbol;\n      }\n\n      if (symbol.isComposite()) {\n        var ms = [];\n        symbol.each(function (x) {\n          ms.push(x.multiplier);\n        });\n        var gcd = Math2.QGCD.apply(null, ms);\n\n        if (gcd.lessThan(0)) {\n          symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\n          symbol.distributeMultiplier();\n        }\n      } //convert |n*x| to n*|x|\n\n\n      var m = _.parse(symbol.multiplier);\n\n      symbol.toUnitMultiplier();\n      return _.multiply(m, _.symfunction(ABS, [symbol]));\n    }\n    /**\r\n     * The factorial function\r\n     * @param {Symbol} symbol\r\n     * @return {Symbol}\r\n     */\n\n\n    function factorial(symbol) {\n      var retval;\n\n      if (isVector(symbol)) {\n        var V = new Vector();\n        symbol.each(function (x, i) {\n          //i start at one.\n          V.set(i - 1, factorial(x));\n        });\n        return V;\n      }\n\n      if (isMatrix(symbol)) {\n        var M = new Matrix();\n        symbol.each(function (x, i, j) {\n          //i start at one.\n          M.set(i, j, factorial(x));\n        });\n        return M;\n      }\n\n      if (Settings.PARSE2NUMBER && symbol.isConstant()) {\n        if (isInt(symbol)) {\n          retval = Math2.bigfactorial(symbol);\n        } else {\n          retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\n        }\n\n        retval = bigConvert(retval);\n        return retval;\n      } else if (symbol.isConstant()) {\n        var den = symbol.getDenom();\n\n        if (den.equals(2)) {\n          var num = symbol.getNum();\n          var a, b, c, n;\n\n          if (!symbol.multiplier.isNegative()) {\n            n = _.add(num, new Symbol(1)).multiplier.divide(new Frac(2));\n            a = Math2.bigfactorial(new Frac(2).multiply(n));\n            b = _.pow(new Symbol(4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n          } else {\n            n = _.subtract(num.negate(), new Symbol(1)).multiplier.divide(new Frac(2));\n            a = _.pow(new Symbol(-4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n            b = Math2.bigfactorial(new Frac(2).multiply(n));\n          }\n\n          c = a.divide(b);\n          return _.multiply(_.parse('sqrt(pi)'), new Symbol(c));\n        }\n      }\n\n      return _.symfunction(FACTORIAL, [symbol]);\n    }\n\n    ;\n    /**\r\n     * Returns the continued fraction of a number\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} n\r\n     * @returns {Symbol}\r\n     */\n\n    function continued_fraction(symbol, n) {\n      var _symbol = evaluate(symbol);\n\n      if (_symbol.isConstant()) {\n        var cf = Math2.continuedFraction(_symbol, n); //convert the fractions array to a new Vector\n\n        var fractions = Vector.fromArray(cf.fractions.map(function (x) {\n          return new Symbol(x);\n        }));\n        return Vector.fromArray([new Symbol(cf.sign), new Symbol(cf.whole), fractions]);\n      }\n\n      return _.symfunction('continued_fraction', arguments);\n    }\n    /**\r\n     * Returns the error function\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function erf(symbol) {\n      var _symbol = evaluate(symbol);\n\n      if (_symbol.isConstant()) {\n        return Math2.erf(_symbol);\n      } else if (_symbol.isImaginary()) {\n        return complex.erf(symbol);\n      }\n\n      return _.symfunction('erf', arguments);\n    }\n\n    ;\n    /**\r\n     * The mod function\r\n     * @param {Symbol} symbol1\r\n     * @param {Symbol} symbol2\r\n     * @returns {Symbol}\r\n     */\n\n    function mod(symbol1, symbol2) {\n      if (symbol1.isConstant() && symbol2.isConstant()) {\n        var retval = new Symbol(1);\n        retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\n        return retval;\n      } //try to see if division has remainder of zero\n\n\n      var r = _.divide(symbol1.clone(), symbol2.clone());\n\n      if (isInt(r)) return new Symbol(0);\n      return _.symfunction('mod', [symbol1, symbol2]);\n    }\n    /**\r\n     * A branghing function\r\n     * @param {Boolean} condition\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    function IF(condition, a, b) {\n      if (typeof condition !== 'boolean') if (isNumericSymbol(condition)) condition = !!Number(condition);\n      if (condition) return a;\n      return b;\n    }\n    /**\r\n     *\r\n     * @param {Matrix|Vector|Set|Collection} obj\r\n     * @param {Symbol} item\r\n     * @returns {Boolean}\r\n     */\n\n\n    function is_in(obj, item) {\n      if (isMatrix(obj)) {\n        for (var i = 0, l = obj.rows(); i < l; i++) {\n          for (var j = 0, l2 = obj.cols(); j < l2; j++) {\n            var element = obj.elements[i][j];\n            if (element.equals(item)) return new Symbol(1);\n          }\n        }\n      } else if (obj.elements) {\n        for (var i = 0, l = obj.elements.length; i < l; i++) {\n          if (obj.elements[i].equals(item)) return new Symbol(1);\n        }\n      }\n\n      return new Symbol(0);\n    }\n    /**\r\n     * A symbolic extension for sinc\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function sinc(symbol) {\n      if (Settings.PARSE2NUMBER) {\n        if (symbol.isConstant()) {\n          return new Symbol(Math2.sinc(symbol));\n        }\n\n        return _.parse(format('sin({0})/({0})', symbol));\n      }\n\n      return _.symfunction('sinc', [symbol]);\n    }\n    /**\r\n     * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\r\n     * Thanks @ Happypig375\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function exp(symbol) {\n      if (symbol.fname === Settings.LOG && symbol.isLinear()) {\n        return _.pow(symbol.args[0], Symbol.create(symbol.multiplier));\n      }\n\n      return _.parse(format('e^({0})', symbol));\n    }\n    /**\r\n     * Converts value degrees to radians\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function radians(symbol) {\n      return _.parse(format('({0})*pi/180', symbol));\n    }\n    /**\r\n     * Converts value from radians to degrees\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function degrees(symbol) {\n      return _.parse(format('({0})*180/pi', symbol));\n    }\n\n    function nroots(symbol) {\n      var a, b;\n\n      if (symbol.group === FN && symbol.fname === '') {\n        a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n        b = _.parse(symbol.power);\n      } else if (symbol.group === P) {\n        a = _.parse(symbol.value);\n        b = _.parse(symbol.power);\n      }\n\n      if (a && b && a.group === N && b.group === N) {\n        var _roots = [];\n        var parts = Symbol.toPolarFormArray(symbol);\n\n        var r = _.parse(a).abs().toString(); //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n\n\n        var x = arg(a).toString();\n        var n = b.multiplier.den.toString();\n        var p = b.multiplier.num.toString();\n        var formula = \"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\";\n\n        for (var i = 0; i < n; i++) {\n          var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n\n          _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n        }\n\n        return Vector.fromArray(_roots);\n      } else if (symbol.isConstant(true)) {\n        var sign = symbol.sign();\n        var x = evaluate(symbol.abs());\n\n        var root = _.sqrt(x);\n\n        var _roots = [root.clone(), root.negate()];\n        if (sign < 0) _roots = _roots.map(function (x) {\n          return _.multiply(x, Symbol.imaginary());\n        });\n      } else {\n        _roots = [_.parse(symbol)];\n      }\n\n      return Vector.fromArray(_roots);\n    }\n    /**\r\n     * Rationalizes a symbol\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function rationalize(symbol) {\n      if (symbol.isComposite()) {\n        var retval = new Symbol(0);\n        var num, den, retnum, retden, a, b, n, d;\n        symbol.each(function (x) {\n          num = x.getNum();\n          den = x.getDenom();\n          retnum = retval.getNum();\n          retden = retval.getDenom();\n          a = _.multiply(den, retnum);\n          b = _.multiply(num, retden);\n          n = _.expand(_.add(a, b));\n          d = _.multiply(retden, den);\n          retval = _.divide(n, d);\n        }, true);\n        return retval;\n      }\n\n      return symbol;\n    }\n    /**\r\n     * The square root function\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function _sqrt(symbol) {\n      if (!isSymbol(symbol)) {\n        symbol = _.parse(symbol);\n      } // Exit early for EX\n\n\n      if (symbol.group === EX) {\n        return _.symfunction(SQRT, [symbol]);\n      }\n\n      if (symbol.fname === '' && symbol.power.equals(1)) symbol = symbol.args[0];\n      var is_negative = symbol.multiplier.sign() < 0;\n\n      if (Settings.PARSE2NUMBER) {\n        if (symbol.isConstant() && !is_negative) {\n          return new Symbol(bigDec.sqrt(symbol.multiplier.toDecimal()));\n        } else if (symbol.isImaginary()) {\n          return complex.sqrt(symbol);\n        } else if (symbol.group === S) {\n          return _.symfunction('sqrt', [symbol]);\n        }\n      }\n\n      var img,\n          retval,\n          isConstant = symbol.isConstant();\n\n      if (symbol.group === CB && symbol.isLinear()) {\n        var m = _sqrt(Symbol(symbol.multiplier));\n\n        for (var s in symbol.symbols) {\n          var x = symbol.symbols[s];\n          m = _.multiply(m, _sqrt(x));\n        }\n\n        retval = m;\n      } //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\n      else if (symbol.fname === SQRT) {\n        var s = symbol.args[0];\n        var ms = symbol.multiplier;\n        s.setPower(symbol.power.multiply(new Frac(0.25)));\n        retval = s; //grab the multiplier\n\n        if (!ms.equals(1)) retval = _.multiply(_sqrt(_.parse(ms)), retval);\n      } //if the symbol is a fraction then we don't keep can unwrap it. For instance\n      //no need to keep sqrt(x^(1/3))\n      else if (!symbol.power.isInteger()) {\n        symbol.setPower(symbol.power.multiply(new Frac(0.5)));\n        retval = symbol;\n      } else if (symbol.multiplier < 0 && symbol.group === S) {\n        var a = _.parse(symbol.multiplier).negate();\n\n        var b = _.parse(symbol).toUnitMultiplier().negate();\n\n        retval = _.multiply(_.symfunction(Settings.SQRT, [b]), _sqrt(a));\n      } else {\n        //Related to issue #401. Since sqrt(a)*sqrt(b^-1) relates in issues, we'll change the form\n        //to sqrt(a)*sqrt(b)^1 for better simplification\n        //the sign of the power\n        var sign = symbol.power.sign(); //remove the sign\n\n        symbol.power = symbol.power.abs(); //if the symbols is imagary then we place in the imaginary part. We'll return it\n        //as a product\n\n        if (isConstant && symbol.multiplier.lessThan(0)) {\n          img = Symbol.imaginary();\n          symbol.multiplier = symbol.multiplier.abs();\n        }\n\n        var q = symbol.multiplier.toDecimal(),\n            qa = Math.abs(q),\n            t = Math.sqrt(qa);\n        var m; //it's a perfect square so take the square\n\n        if (isInt(t)) {\n          m = new Symbol(t);\n        } else if (isInt(q)) {\n          var factors = Math2.ifactor(q);\n          var tw = 1;\n\n          for (var x in factors) {\n            var n = factors[x],\n                nn = n - n % 2; //get out the whole numbers\n\n            if (nn) {\n              //if there is a whole number ...\n              var w = Math.pow(x, nn);\n              tw *= Math.pow(x, nn / 2); //add to total wholes\n\n              q /= w; //reduce the number by the wholes\n            }\n          }\n\n          m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\n        } else {\n          //reduce the numerator and denominator using prime factorization\n          var c = [new Symbol(symbol.multiplier.num), new Symbol(symbol.multiplier.den)];\n          var r = [new Symbol(1), new Symbol(1)];\n          var sq = [new Symbol(1), new Symbol(1)];\n\n          for (var i = 0; i < 2; i++) {\n            var n = c[i]; //get the prime factors and loop through each.\n\n            pfactor(n).each(function (x) {\n              x = Symbol.unwrapPARENS(x);\n              var b = x.clone().toLinear();\n              var p = Number(x.power); //We'll consider it safe to use the native Number since 2^1000 is already a pretty huge number\n\n              var rem = p % 2; //get the remainder. This will be 1 if 3 since sqrt(n^2) = n where n is positive\n\n              var w = (p - rem) / 2; //get the whole numbers of n/2\n\n              r[i] = _.multiply(r[i], _.pow(b, new Symbol(w)));\n              sq[i] = _.multiply(sq[i], _sqrt(_.pow(b, new Symbol(rem))));\n            });\n          }\n\n          m = _.divide(_.multiply(r[0], sq[0]), _.multiply(r[1], sq[1]));\n        } //strip the multiplier since we already took the sqrt\n\n\n        symbol = symbol.toUnitMultiplier(true); //if the symbol is one just return one and not the sqrt function\n\n        if (symbol.isOne()) {\n          retval = symbol;\n        } else if (even(symbol.power.toString())) {\n          //just raise it to the 1/2\n          retval = _.pow(symbol.clone(), new Symbol(0.5));\n        } else {\n          retval = _.symfunction(SQRT, [symbol]);\n        } //put back the sign that was removed earlier\n\n\n        if (sign < 0) retval.power.negate();\n        if (m) retval = _.multiply(m, retval);\n        if (img) retval = _.multiply(img, retval);\n      }\n\n      if (is_negative && Settings.PARSE2NUMBER) return _.parse(retval);\n      return retval;\n    }\n    /**\r\n     * The cube root function\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function cbrt(symbol) {\n      if (!symbol.isConstant(true)) {\n        var retval;\n        var n = symbol.power / 3; //take the cube root of the multplier\n\n        var m = _.pow(_.parse(symbol.multiplier), new Symbol(1 / 3)); //strip the multiplier\n\n\n        var sym = symbol.toUnitMultiplier(); //simplify the power\n\n        if (isInt(n)) {\n          retval = _.pow(sym.toLinear(), _.parse(n));\n        } else {\n          if (sym.group === CB) {\n            retval = new Symbol(1);\n            sym.each(function (x) {\n              retval = _.multiply(retval, cbrt(x));\n            });\n          } else {\n            retval = _.symfunction('cbrt', [sym]);\n          }\n        }\n\n        return _.multiply(m, retval);\n      }\n\n      return nthroot(symbol, new Symbol(3));\n    }\n\n    function scientific(symbol, sigfigs) {\n      //Just set the flag and keep it moving. Symbol.toString will deal with how to\n      //display this\n      symbol.scientific = sigfigs || 10;\n      return symbol;\n    }\n    /**\r\n     *\r\n     * @param {Symbol} num - the number being raised\r\n     * @param {Symbol} p - the exponent\r\n     * @param {type} prec - the precision wanted\r\n     * @param {bool} asbig - true if a bigDecimal is wanted\r\n     * @returns {Symbol}\r\n     */\n\n\n    function nthroot(num, p, prec, asbig) {\n      //clone p and convert to a number if possible\n      p = evaluate(_.parse(p)); //cannot calculate if p = 0. nthroot(0, 0) => 0^(1/0) => undefined\n\n      if (p.equals(0)) {\n        throw new UndefinedError('Unable to calculate nthroots of zero');\n      } //Stop computation if it negative and even since we have an imaginary result\n\n\n      if (num < 0 && even(p)) throw new Error('Cannot calculate nthroot of negative number for even powers'); //return non numeric values unevaluated\n\n      if (!num.isConstant(true)) {\n        return _.symfunction('nthroot', arguments);\n      } //evaluate numeric values\n\n\n      if (num.group !== N) {\n        num = evaluate(num);\n      } //default is to return a big value\n\n\n      if (typeof asbig === 'undefined') asbig = true;\n      prec = prec || 25;\n      var sign = num.sign();\n      var retval;\n      var ans;\n\n      if (sign < 0) {\n        num = abs(num); //remove the sign\n      }\n\n      if (isInt(num) && p.isConstant()) {\n        if (num < 18446744073709551616) {\n          //2^64\n          ans = Frac.create(Math.pow(num, 1 / p));\n        } else {\n          ans = Math2.nthroot(num, p);\n        }\n\n        var retval;\n\n        if (asbig) {\n          retval = new Symbol(ans);\n        }\n\n        retval = new Symbol(ans.toDecimal(prec));\n        return _.multiply(new Symbol(sign), retval);\n      }\n    }\n\n    function pfactor(symbol) {\n      //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\n      //More Big Number issues >:(\n      if (symbol.greaterThan(9.999999999998891e+41) || symbol.equals(-1)) return symbol; //Fix issue #298\n\n      if (symbol.equals(Math.PI)) return new Symbol(Math.PI); //evaluate the symbol to merge constants\n\n      symbol = evaluate(symbol.clone());\n\n      if (symbol.isConstant()) {\n        var retval = new Symbol(1);\n        var m = symbol.toString();\n\n        if (isInt(m)) {\n          var factors = Math2.ifactor(m);\n\n          for (var factor in factors) {\n            var p = factors[factor];\n            retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\n          }\n        } else {\n          var n = pfactor(new Symbol(symbol.multiplier.num));\n          var d = pfactor(new Symbol(symbol.multiplier.den));\n          retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\n        }\n      } else retval = _.symfunction('pfactor', arguments);\n\n      return retval;\n    }\n    /**\r\n     * Get's the real part of a complex number. Return number if real\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function realpart(symbol) {\n      return symbol.realpart();\n    }\n    /**\r\n     * Get's the imaginary part of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function imagpart(symbol) {\n      return symbol.imagpart();\n    }\n    /**\r\n     * Computes the conjugate of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function conjugate(symbol) {\n      var re = symbol.realpart();\n      var im = symbol.imagpart();\n      return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\n    }\n    /**\r\n     * Returns the arugment of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function arg(symbol) {\n      var re = symbol.realpart();\n      var im = symbol.imagpart();\n      if (re.isConstant() && im.isConstant()) return new Symbol(Math.atan2(im, re));\n      return _.symfunction('atan2', [im, re]);\n    }\n    /**\r\n     * Returns the arugment of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function arg(symbol) {\n      var re = symbol.realpart();\n      var im = symbol.imagpart();\n\n      if (re.isConstant() && im.isConstant()) {\n        if (im.equals(0) && re.equals(-1)) {\n          return _.parse('pi');\n        } else if (im.equals(1) && re.equals(0)) {\n          return _.parse('pi/2');\n        } else if (im.equals(1) && re.equals(1)) {\n          return _.parse('pi/4');\n        }\n\n        return new Symbol(Math.atan2(im, re));\n      }\n\n      return _.symfunction('atan2', [im, re]);\n    }\n    /**\r\n     * Returns the polarform of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function polarform(symbol) {\n      var p, r, e, theta;\n      p = Symbol.toPolarFormArray(symbol);\n      theta = p[1];\n      r = p[0];\n      e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\n      return _.multiply(r, e);\n    }\n    /**\r\n     * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function rectform(symbol) {\n      //TODO: e^((i*pi)/4)\n      var original = symbol.clone();\n\n      try {\n        var f, p, q, s, h, d, n;\n        f = decompose_fn(symbol, 'e', true);\n        p = _.divide(f.x.power, Symbol.imaginary());\n        q = evaluate(trig.tan(p));\n        s = _.pow(f.a, new Symbol(2));\n        d = q.getDenom(true);\n        n = q.getNum();\n        h = Symbol.hyp(n, d); //check\n\n        if (h.equals(f.a)) {\n          return _.add(d, _.multiply(Symbol.imaginary(), n));\n        } else {\n          return original;\n        }\n      } catch (e) {\n        return original;\n      }\n    }\n\n    function symMinMax(f, args) {\n      args.map(function (x) {\n        x.numVal = evaluate(x).multiplier;\n      });\n      var l, a, b, a_val, b_val;\n\n      while (true) {\n        l = args.length;\n        if (l < 2) return args[0];\n        a = args.pop();\n        b = args[l - 2];\n\n        if (f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\n          args.pop();\n          args.push(a);\n        }\n      }\n    }\n    /**\r\n     * Returns maximum of a set of numbers\r\n     * @returns {Symbol}\r\n     */\n\n\n    function max() {\n      var args = [].slice.call(arguments);\n      if (allSame(args)) return args[0];\n      if (allNumbers(args)) return new Symbol(Math.max.apply(null, args));\n      if (Settings.SYMBOLIC_MIN_MAX && allConstants(args)) return symMinMax('max', args);\n      return _.symfunction('max', args);\n    }\n    /**\r\n     * Returns minimum of a set of numbers\r\n     * @returns {Symbol}\r\n     */\n\n\n    function min() {\n      var args = [].slice.call(arguments);\n      if (allSame(args)) return args[0];\n      if (allNumbers(args)) return new Symbol(Math.min.apply(null, args));\n      if (Settings.SYMBOLIC_MIN_MAX && allConstants(args)) return symMinMax('min', args);\n      return _.symfunction('min', args);\n    }\n    /**\r\n     * Returns the sign of a number\r\n     * @param {Symbol} x\r\n     * @returns {Symbol}\r\n     */\n\n\n    function sign(x) {\n      if (x.isConstant(true)) return new Symbol(Math.sign(evaluate(x)));\n      return _.symfunction('sign', arguments);\n    }\n\n    function sort(symbol, opt) {\n      opt = opt ? opt.toString() : 'asc';\n\n      var getval = function getval(e) {\n        if (e.group === N) return e.multiplier;\n\n        if (e.group === FN) {\n          if (e.fname === '') return getval(e.args[0]);\n          return e.fname;\n        }\n\n        if (e.group === S) return e.power;\n        return e.value;\n      };\n\n      var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\n      return new Vector(symbols.sort(function (a, b) {\n        var aval = getval(a),\n            bval = getval(b);\n        if (opt === 'desc') return bval - aval;\n        return aval - bval;\n      }));\n    }\n    /**\r\n     * The log function\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} base\r\n     * @returns {Symbol}\r\n     */\n\n\n    function _log(symbol, base) {\n      if (symbol.equals(1)) {\n        return new Symbol(0);\n      }\n\n      var retval;\n\n      if (symbol.fname === SQRT && symbol.multiplier.equals(1)) {\n        retval = _.divide(_log(symbol.args[0]), new Symbol(2));\n\n        if (symbol.power.sign() < 0) {\n          retval.negate();\n        } // Exit early\n\n\n        return retval;\n      } //log(0) is undefined so complain\n\n\n      if (symbol.equals(0)) {\n        throw new UndefinedError(Settings.LOG + '(0) is undefined!');\n      } //deal with imaginary values\n\n\n      if (symbol.isImaginary()) {\n        return complex.evaluate(symbol, Settings.LOG);\n      }\n\n      if (symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\n        var log_sym = Math.log(symbol);\n        var log_base = Math.log(base);\n        retval = new Symbol(log_sym / log_base);\n      } else if (symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\n        symbol.power.negate(); //move the negative outside but keep the positive inside :)\n\n        retval = _log(symbol).negate();\n      } else if (symbol.value === 'e' && symbol.multiplier.equals(1)) {\n        var p = symbol.power;\n        retval = isSymbol(p) ? p : new Symbol(p);\n      } else if (symbol.group === FN && symbol.fname === 'exp') {\n        var s = symbol.args[0];\n        if (symbol.multiplier.equals(1)) retval = _.multiply(s, new Symbol(symbol.power));else retval = _.symfunction(Settings.LOG, [symbol]);\n      } else if (Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\n        // Parse for safety.\n        symbol = _.parse(symbol);\n        var img_part;\n\n        if (symbol.multiplier.lessThan(0)) {\n          symbol.negate();\n          img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\n        }\n\n        retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\n\n        if (img_part) {\n          retval = _.add(retval, img_part);\n        }\n      } else {\n        var s;\n\n        if (!symbol.power.equals(1) && !symbol.contains('e')) {\n          s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\n          symbol.toLinear();\n        } //log(a,a) = 1 since the base is allowed to be changed.\n        //This was pointed out by Happypig375 in issue #280\n\n\n        if (arguments.length > 1 && allSame(arguments)) {\n          retval = new Symbol(1);\n        } else {\n          retval = _.symfunction(Settings.LOG, arguments);\n        }\n\n        if (s) retval = _.multiply(s, retval);\n      }\n\n      return retval;\n    }\n    /**\r\n     * Round a number up to s decimal places\r\n     * @param {Number} x\r\n     * @param {int} s - the number of decimal places\r\n     * @returns {undefined}\r\n     */\n\n\n    function round(x, s) {\n      var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\n\n      if (x.isConstant() && sIsConstant) {\n        var v, e, exp, retval;\n        v = x; //round the coefficient of then number but not the actual decimal value\n        //we know this because a negative number was passed\n\n        if (s && s.lessThan(0)) {\n          s = abs(s); //convert the number to exponential form\n\n          e = Number(x).toExponential().toString().split('e'); //point v to the coefficient of then number\n\n          v = e[0]; //set the expontent\n\n          exp = e[1];\n        } //round the number to the requested precision\n\n\n        retval = new Symbol(nround(v, Number(s || 0))); //if there's a exponent then put it back\n\n        return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)));\n      }\n\n      return _.symfunction('round', arguments);\n    }\n    /**\r\n     * Gets the quadrant of the trig function\r\n     * @param {Frac} m\r\n     * @returns {Int}\r\n     */\n\n\n    function getQuadrant(m) {\n      var v = m % 2,\n          quadrant;\n      if (v < 0) v = 2 + v; //put it in terms of pi\n\n      if (v >= 0 && v <= 0.5) quadrant = 1;else if (v > 0.5 && v <= 1) quadrant = 2;else if (v > 1 && v <= 1.5) quadrant = 3;else quadrant = 4;\n      return quadrant;\n    }\n    /*\r\n     * Serves as a bridge between numbers and bigNumbers\r\n     * @param {Frac|Number} n\r\n     * @returns {Symbol}\r\n     */\n\n\n    function bigConvert(n) {\n      if (!isFinite(n)) {\n        var sign = Math.sign(n);\n        var r = new Symbol(String(Math.abs(n)));\n        r.multiplier = r.multiplier.multiply(new Frac(sign));\n        return r;\n      }\n\n      if (isSymbol(n)) return n;\n\n      if (typeof n === 'number') {\n        try {\n          n = Frac.simple(n);\n        } catch (e) {\n          n = new Frac(n);\n        }\n      }\n\n      var symbol = new Symbol(0);\n      symbol.multiplier = n;\n      return symbol;\n    }\n\n    ;\n\n    function clean(symbol) {\n      // handle functions with numeric values\n      // handle denominator within denominator\n      // handle trig simplifications\n      var g = symbol.group,\n          retval; //Now let's get to work\n\n      if (g === CP) {\n        var num = symbol.getNum(),\n            den = symbol.getDenom() || new Symbol(1),\n            p = Number(symbol.power),\n            factor = new Symbol(1);\n\n        if (Math.abs(p) === 1) {\n          den.each(function (x) {\n            if (x.group === CB) {\n              factor = _.multiply(factor, clean(x.getDenom()));\n            } else if (x.power.lessThan(0)) {\n              factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\n            }\n          });\n          var new_den = new Symbol(0); //now divide out the factor and add to new den\n\n          den.each(function (x) {\n            new_den = _.add(_.divide(x, factor.clone()), new_den);\n          });\n          factor.invert(); //invert so it can be added to the top\n\n          var new_num;\n\n          if (num.isComposite()) {\n            new_num = new Symbol(0);\n            num.each(function (x) {\n              new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\n            });\n          } else new_num = _.multiply(factor, num);\n\n          retval = _.divide(new_num, new_den);\n        }\n      } else if (g === CB) {\n        retval = new Symbol(1);\n        symbol.each(function (x) {\n          retval = _.multiply(retval, _.clean(x));\n        });\n      } else if (g === FN) {\n        if (symbol.args.length === 1 && symbol.args[0].isConstant()) retval = block('PARSE2NUMBER', function () {\n          return _.parse(symbol);\n        }, true);\n      }\n\n      if (!retval) retval = symbol;\n      return retval;\n    }\n    /**\r\n     * A wrapper for the expand function\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function expandall(symbol, opt) {\n      opt = opt || {\n        expand_denominator: true,\n        expand_functions: true\n      };\n      return expand(symbol, opt);\n    }\n    /**\r\n     * Expands a symbol\r\n     * @param symbol\r\n     */\n    // Old expand\n\n\n    function expand(symbol, opt) {\n      if (Array.isArray(symbol)) {\n        return symbol.map(function (x) {\n          return expand(x, opt);\n        });\n      }\n\n      opt = opt || {}; //deal with parenthesis\n\n      if (symbol.group === FN && symbol.fname === '') {\n        var f = expand(symbol.args[0], opt);\n        var x = expand(_.pow(f, _.parse(symbol.power)), opt);\n        return _.multiply(_.parse(symbol.multiplier), x).distributeMultiplier();\n      } // We can expand these groups so no need to waste time. Just return and be done.\n\n\n      if ([N, P, S].indexOf(symbol.group) !== -1) {\n        return symbol; //nothing to do\n      }\n\n      var original = symbol.clone(); // Set up a try-catch block. If anything goes wrong then we simply return the original symbol\n\n      try {\n        // Store the power and multiplier\n        var m = symbol.multiplier.toString();\n        var p = Number(symbol.power);\n        var retval = symbol; // Handle (a+b)^2 | (x+x^2)^2\n\n        if (symbol.isComposite() && isInt(symbol.power) && symbol.power > 0) {\n          var n = p - 1; // Strip the expression of it's multiplier and power. We'll call it f. The power will be p and the multiplier m.\n\n          var f = new Symbol(0);\n          symbol.each(function (x) {\n            f = _.add(f, expand(_.parse(x), opt));\n          });\n\n          var expanded = _.parse(f);\n\n          for (var i = 0; i < n; i++) {\n            expanded = mix(expanded, f, opt);\n          }\n\n          retval = _.multiply(_.parse(m), expanded).distributeMultiplier();\n        } else if (symbol.group === FN && opt.expand_functions === true) {\n          var args = []; // Expand function the arguments\n\n          symbol.args.forEach(function (x) {\n            args.push(expand(x, opt));\n          }); // Put back the power and multiplier\n\n          retval = _.pow(_.symfunction(symbol.fname, args), _.parse(symbol.power));\n          retval = _.multiply(retval, _.parse(symbol.multiplier));\n        } else if (symbol.isComposite() && isInt(symbol.power) && symbol.power < 0 && opt.expand_denominator === true) {\n          // Invert it. Expand it and then re-invert it.\n          symbol = symbol.invert();\n          retval = expand(symbol, opt);\n          retval.invert();\n        } else if (symbol.group === CB) {\n          var rank = function rank(s) {\n            switch (s.group) {\n              case CP:\n                return 0;\n\n              case PL:\n                return 1;\n\n              case CB:\n                return 2;\n\n              case FN:\n                return 3;\n\n              default:\n                return 4;\n            }\n          }; // Consider (a+b)(c+d). The result will be (a*c+a*d)+(b*c+b*d).\n          // We start by moving collecting the symbols. We want others>FN>CB>PL>CP\n\n\n          var symbols = symbol.collectSymbols().sort(function (a, b) {\n            return rank(b) - rank(a);\n          }) // Distribute the power to each symbol and expand\n          .map(function (s) {\n            var x = _.pow(s, _.parse(p));\n\n            var e = expand(x, opt);\n            return e;\n          });\n          var f = symbols.pop(); // If the first symbols isn't a composite then we're done\n\n          if (f.isComposite() && f.isLinear()) {\n            symbols.forEach(function (s) {\n              f = mix(f, s, opt);\n            }); // If f is of group PL or CP then we can expand some more\n\n            if (f.isComposite()) {\n              if (f.power > 1) {\n                f = expand(_.pow(f, _.parse(f.power)), opt);\n              } // Put back the multiplier\n\n\n              retval = _.multiply(_.parse(m), f).distributeMultiplier();\n              ;\n            } else {\n              // Everything is expanded at this point so if it's still a CB\n              // then just return the symbol\n              retval = f;\n            }\n          } else {\n            // Just multiply back in the expanded form of each\n            retval = f;\n            symbols.forEach(function (s) {\n              retval = _.multiply(retval, s);\n            }); // Put back the multiplier\n\n            retval = _.multiply(retval, _.parse(m)).distributeMultiplier();\n          } // TODO: This exists solely as a quick fix for sqrt(11)*sqrt(33) not simplifying.\n\n\n          if (retval.group === CB) {\n            retval = _.parse(retval);\n          }\n        } else {\n          // Otherwise just return the expression\n          retval = symbol;\n        } // Final cleanup and return\n\n\n        return retval;\n      } catch (e) {\n        return original;\n      }\n\n      return original;\n    }\n    /**\r\n     * Returns an identity matrix of nxn\r\n     * @param {Number} n\r\n     * @returns {Matrix}\r\n     */\n\n\n    function imatrix(n) {\n      return Matrix.identity(n);\n    }\n    /**\r\n     * Retrieves and item from a vector\r\n     * @param {Vector} vector\r\n     * @param {Number} index\r\n     * @returns {Vector|Symbol}\r\n     */\n\n\n    function vecget(vector, index) {\n      if (index.isConstant() && isInt(index)) return vector.elements[index];\n      return _.symfunction('vecget', arguments);\n    }\n    /**\r\n     * Removes duplicates from a vector\r\n     * @param {Vector} vector\r\n     * @param {Number} tolerance\r\n     * @returns {Vector}\r\n     */\n\n\n    function vectrim(vector, tolerance) {\n      tolerance = typeof tolerance === 'undefined' ? 1e-14 : tolerance;\n      vector = vector.clone();\n      tolerance = Number(tolerance); //place algebraic solutions first\n\n      vector.elements.sort(function (a, b) {\n        return b.group - a.group;\n      }); //depending on the start point we may have duplicates so we need to clean those up a bit.\n      //start by creating an object with the solution and the numeric value. This way we don't destroy algebraic values\n\n      vector.elements = removeDuplicates(vector.elements, function (a, b) {\n        var diff = Number(_.subtract(evaluate(a), evaluate(b)).abs());\n        return diff <= tolerance;\n      });\n      return vector;\n    }\n    /**\r\n     * Set a value for a vector at a given index\r\n     * @param {Vector} vector\r\n     * @param {Number} index\r\n     * @param {Symbol} value\r\n     * @returns {Vector}\r\n     */\n\n\n    function vecset(vector, index, value) {\n      if (!index.isConstant) return _.symfunction('vecset', arguments);\n      vector.elements[index] = value;\n      return vector;\n    }\n\n    function matget(matrix, i, j) {\n      if (i.isConstant() && j.isConstant()) return matrix.elements[i][j];\n      return _.symfunction('matget', arguments);\n    }\n\n    function matgetrow(matrix, i) {\n      if (i.isConstant()) return new Matrix(matrix.elements[i]);\n      return _.symfunction('matgetrow', arguments);\n    }\n\n    function matsetrow(matrix, i, x) {\n      //handle symbolics\n      if (!i.isConstant()) return _.symfunction('matsetrow', arguments);\n      if (matrix.elements[i].length !== x.elements.length) throw new DimensionError('Matrix row must match row dimensions!');\n      var M = matrix.clone();\n      M.elements[i] = x.clone().elements;\n      return M;\n    }\n\n    function matgetcol(matrix, col_index) {\n      //handle symbolics\n      if (!col_index.isConstant()) return _.symfunction('matgetcol', arguments);\n      col_index = Number(col_index);\n      var M = Matrix.fromArray([]);\n      matrix.each(function (x, i, j) {\n        if (j === col_index) {\n          M.elements.push([x.clone()]);\n        }\n      });\n      return M;\n    }\n\n    function matsetcol(matrix, j, col) {\n      //handle symbolics\n      if (!j.isConstant()) return _.symfunction('matsetcol', arguments);\n      j = Number(j);\n      if (matrix.rows() !== col.elements.length) throw new DimensionError('Matrix columns must match number of columns!');\n      col.each(function (x, i) {\n        matrix.set(i - 1, j, x.elements[0].clone());\n      });\n      return matrix;\n    }\n\n    function matset(matrix, i, j, value) {\n      matrix.elements[i][j] = value;\n      return matrix;\n    } //the constructor for vectors\n\n\n    function vector() {\n      return new Vector([].slice.call(arguments));\n    } //the constructor for matrices\n\n\n    function matrix() {\n      return Matrix.fromArray(arguments);\n    } //the constructor for sets\n\n\n    function set() {\n      return Set.fromArray(arguments);\n    }\n\n    function determinant(symbol) {\n      if (isMatrix(symbol)) {\n        return symbol.determinant();\n      }\n\n      return symbol;\n    }\n\n    function size(symbol) {\n      var retval;\n      if (isMatrix(symbol)) retval = [new Symbol(symbol.cols()), new Symbol(symbol.rows())];else if (isVector(symbol) || isSet(symbol)) retval = new Symbol(symbol.elements.length);else err('size expects a matrix or a vector');\n      return retval;\n    }\n\n    function dot(vec1, vec2) {\n      if (isVector(vec1) && isVector(vec2)) return vec1.dot(vec2);\n      err('function dot expects 2 vectors');\n    }\n\n    function cross(vec1, vec2) {\n      if (isVector(vec1) && isVector(vec2)) return vec1.cross(vec2);\n      err('function cross expects 2 vectors');\n    }\n\n    function transpose(mat) {\n      if (isMatrix(mat)) return mat.transpose();\n      err('function transpose expects a matrix');\n    }\n\n    function invert(mat) {\n      if (isMatrix(mat)) return mat.invert();\n      err('invert expects a matrix');\n    } //basic set functions\n\n\n    function union(set1, set2) {\n      return set1.union(set2);\n    }\n\n    function intersection(set1, set2) {\n      return set1.intersection(set2);\n    }\n\n    function contains(set1, e) {\n      return set1.contains(e);\n    }\n\n    function difference(set1, set2) {\n      return set1.difference(set2);\n    }\n\n    function intersects(set1, set2) {\n      return new Symbol(Number(set1.intersects(set2)));\n    }\n\n    function is_subset(set1, set2) {\n      return new Symbol(Number(set1.is_subset(set2)));\n    }\n\n    function print() {\n      arguments2Array(arguments).map(function (x) {\n        console.log(x.toString());\n      });\n    }\n\n    function testSQRT(symbol) {\n      //wrap the symbol in sqrt. This eliminates one more check down the line.\n      if (!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) {\n        var sign = symbol.power.sign(); //don't devide the power directly. Notice the use of toString. This makes it possible\n        //to use a bigNumber library in the future\n\n        var retval = _sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear()); //place back the sign of the power\n\n\n        if (sign < 0) retval.invert();\n        return retval;\n      }\n\n      return symbol;\n    } //try to reduce a symbol by pulling its power\n\n\n    function testPow(symbol) {\n      if (symbol.group === P) {\n        var v = symbol.value;\n        var fct = primeFactors(v)[0]; //safety\n\n        if (!fct) {\n          warn('Unable to compute prime factors. This should not happen. Please review and report.');\n          return symbol;\n        }\n\n        var n = new Frac(Math.log(v) / Math.log(fct)),\n            p = n.multiply(symbol.power); //we don't want a more complex number than before\n\n        if (p.den > symbol.power.den) return symbol;\n        if (isInt(p)) symbol = Symbol(Math.pow(fct, p));else symbol = new Symbol(fct).setPower(p);\n      }\n\n      return symbol;\n    } //Link the functions to the parse so they're available outside of the library.\n    //This is strictly for convenience and may be deprecated.\n\n\n    this.expand = expand;\n    this.round = round;\n    this.clean = clean;\n    this.sqrt = _sqrt;\n    this.cbrt = cbrt;\n    this.abs = abs;\n    this.log = _log;\n    this.rationalize = rationalize;\n    this.nthroot = nthroot;\n    this.arg = arg;\n    this.conjugate = conjugate;\n    this.imagpart = imagpart;\n    this.realpart = realpart; //TODO:\n    //Utilize the function below instead of the linked function\n\n    this.getFunction = function (name) {\n      return functions[name][0];\n    }; //Parser.methods ===============================================================\n\n\n    this.addPreprocessor = function (name, action, order, shift_cells) {\n      var names = preprocessors.names;\n      var actions = preprocessors.actions;\n      if (typeof action !== 'function') //the person probably forgot to specify a name\n        throw new PreprocessorError('Incorrect parameters. Function expected!');\n\n      if (!order) {\n        names.push(name);\n        actions.push(action);\n      } else {\n        if (shift_cells) {\n          names.splice(order, 0, name);\n          actions.splice(order, 0, action);\n        } else {\n          names[order] = name;\n          actions[order] = action;\n        }\n      }\n    };\n\n    this.getPreprocessors = function () {\n      var preprocessors = {};\n\n      for (var i = 0, l = preprocessors.names.length; i < l; i++) {\n        var name = preprocessors.names[i];\n        preprocessors[name] = {\n          order: i,\n          action: preprocessors.actions[i]\n        };\n      }\n\n      return preprocessors;\n    };\n\n    this.removePreprocessor = function (name, shift_cells) {\n      var i = preprocessors.names.indexOf(name);\n\n      if (shift_cells) {\n        _remove(preprocessors.names, i);\n\n        _remove(preprocessors.actions, i);\n      } else {\n        preprocessors.names[i] = undefined;\n        preprocessors.actions[i] = undefined;\n      }\n    }; //The loader for functions which are not part of Math2\n\n\n    this.mapped_function = function () {\n      var subs = {},\n          params = this.params;\n\n      for (var i = 0; i < params.length; i++) {\n        subs[params[i]] = String(arguments[i]);\n      }\n\n      return _.parse(this.body, subs);\n    };\n    /**\r\n     * Adds two symbols\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.add = function (a, b) {\n      var aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b); //we're dealing with two symbols\n\n      if (aIsSymbol && bIsSymbol) {\n        //forward the adding of symbols with units to the Unit module\n        if (a.unit || b.unit) {\n          return _.Unit.add(a, b);\n        } //handle Infinity\n        //https://www.encyclopediaofmath.org/index.php/Infinity\n\n\n        if (a.isInfinity || b.isInfinity) {\n          var aneg = a.multiplier.lessThan(0),\n              bneg = b.multiplier.lessThan(0);\n\n          if (a.isInfinity && b.isInfinity && aneg !== bneg) {\n            throw new UndefinedError('(' + a + ')+(' + b + ') is not defined!');\n          }\n\n          var inf = Symbol.infinity();\n          if (bneg) inf.negate();\n          return inf;\n        }\n\n        if (a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\n          a.distributeMultiplier();\n          b.distributeMultiplier(); // Fix for issue #606\n\n          if (b.length > a.length && a.group === b.group) {\n            var _ref2 = [b, a];\n            a = _ref2[0];\n            b = _ref2[1];\n          }\n        } //no need to waste time on zeroes\n\n\n        if (a.multiplier.equals(0)) return b;\n        if (b.multiplier.equals(0)) return a;\n\n        if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n          var result = new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\n          return result;\n        }\n\n        var g1 = a.group,\n            g2 = b.group,\n            ap = a.power.toString(),\n            bp = b.power.toString(); //always keep the greater group on the left.\n\n        if (g1 < g2 || g1 === g2 && ap > bp && bp > 0) {\n          return this.add(b, a);\n        }\n        /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\r\n         * because it doesn't know which one to prioritize. */\n        //correction to PL dilemma\n\n\n        if (g1 === CB && g2 === PL && a.value === b.value) {\n          //swap\n          var t = a;\n          a = b;\n          b = t;\n          g1 = a.group;\n          g2 = b.group;\n          ap = a.power.toString();\n          bp = b.power.toString();\n        }\n\n        var powEQ = ap === bp,\n            v1 = a.value,\n            v2 = b.value,\n            aIsComposite = a.isComposite(),\n            bIsComposite = b.isComposite(),\n            h1,\n            h2,\n            result;\n        if (aIsComposite) h1 = _text(a, 'hash');\n        if (bIsComposite) h2 = _text(b, 'hash');\n\n        if (g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\n          return this.add(b, a);\n        } //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\n\n\n        if (g1 === PL && g2 === PL) {\n          v1 = h1;\n          v2 = h2;\n        }\n\n        var PN = g1 === P && g2 === N,\n            PNEQ = a.value === b.multiplier.toString(),\n            valEQ = v1 === v2 || h1 === h2 && h1 !== undefined || PN && PNEQ; //equal values, equal powers\n\n        if (valEQ && powEQ && g1 === g2) {\n          //make sure to convert N to something P can work with\n          if (PN) b = b.convert(P); //CL\n          //handle PL\n\n          if (g1 === PL && (g2 === S || g2 === P)) {\n            a.distributeMultiplier();\n            result = a.attach(b);\n          } else {\n            result = a; //CL\n\n            if (a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\n              for (var s in b.symbols) {\n                var x = b.symbols[s];\n                result.attach(x);\n              }\n            } else result.multiplier = result.multiplier.add(b.multiplier);\n          }\n        } //equal values uneven powers\n        else if (valEQ && g1 !== PL) {\n          //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\n          if (g1 === CP && g2 === PL) {\n            b.insert(a, 'add');\n            result = b;\n          } else {\n            result = Symbol.shell(PL).attach([a, b]); //update the hash\n\n            result.value = g1 === PL ? h1 : v1;\n          }\n        } else if (aIsComposite && a.isLinear()) {\n          var canIterate = g1 === g2,\n              bothPL = g1 === PL && g2 === PL; //we can only iterate group PL if they values match\n\n          if (bothPL) canIterate = a.value === b.value; //distribute the multiplier over the entire symbol\n\n          a.distributeMultiplier();\n\n          if (b.isComposite() && b.isLinear() && canIterate) {\n            b.distributeMultiplier(); //CL\n\n            for (var s in b.symbols) {\n              var x = b.symbols[s];\n              a.attach(x);\n            }\n\n            result = a;\n          } //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\n          else if (bothPL && a.value !== h2 || g1 === PL && !valEQ) {\n            result = Symbol.shell(CP).attach([a, b]);\n            result.updateHash();\n          } else {\n            result = a.attach(b);\n          }\n        } else {\n          if (g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) {\n            var m = b.multiplier.clone();\n            b = _sqrt(b.toUnitMultiplier().toLinear());\n            b.multiplier = m;\n          } //fix for issue #3 and #159\n\n\n          if (a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\n            result = _.add(expand(a), expand(b));\n          } else {\n            result = Symbol.shell(CP).attach([a, b]);\n            result.updateHash();\n          }\n        }\n\n        if (result.multiplier.equals(0)) result = new Symbol(0); //make sure to remove unnecessary wraps\n\n        if (result.length === 1) {\n          var m = result.multiplier;\n          result = firstObject(result.symbols);\n          result.multiplier = result.multiplier.multiply(m);\n        }\n\n        return result;\n      } else {\n        //keep symbols to the right\n        if (bIsSymbol && !aIsSymbol) {\n          var t = a;\n          a = b;\n          b = t; //swap\n\n          t = bIsSymbol;\n          bIsSymbol = aIsSymbol;\n          aIsSymbol = t;\n        }\n\n        var bIsMatrix = isMatrix(b);\n\n        if (aIsSymbol && bIsMatrix) {\n          var M = new Matrix();\n          b.eachElement(function (e, i, j) {\n            M.set(i, j, _.add(a.clone(), e));\n          });\n          b = M;\n        } else {\n          if (isMatrix(a) && bIsMatrix) {\n            b = a.add(b);\n          } else if (aIsSymbol && isVector(b)) {\n            b.each(function (x, i) {\n              i--;\n              b.elements[i] = _.add(a.clone(), b.elements[i]);\n            });\n          } else {\n            if (isVector(a) && isVector(b)) {\n              b.each(function (x, i) {\n                i--;\n                b.elements[i] = _.add(a.elements[i], b.elements[i]);\n              });\n            } else if (isVector(a) && isMatrix(b)) {\n              //try to convert a to a matrix\n              return _.add(b, a);\n            } else if (isMatrix(a) && isVector(b)) {\n              if (b.elements.length === a.rows()) {\n                var M = new Matrix(),\n                    l = a.cols();\n                b.each(function (e, i) {\n                  var row = [];\n\n                  for (var j = 0; j < l; j++) {\n                    row.push(_.add(a.elements[i - 1][j].clone(), e.clone()));\n                  }\n\n                  M.elements.push(row);\n                });\n                return M;\n              } else err('Dimensions must match!');\n            }\n          }\n        }\n\n        return b;\n      }\n    };\n    /**\r\n     * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.subtract = function (a, b) {\n      var aIsSymbol = aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b),\n          t;\n\n      if (aIsSymbol && bIsSymbol) {\n        if (a.unit || b.unit) {\n          return _.Unit.subtract(a, b);\n        }\n\n        return this.add(a, b.negate());\n      } else {\n        if (bIsSymbol && isVector(a)) {\n          b = a.map(function (x) {\n            return _.subtract(x, b.clone());\n          });\n        } else if (aIsSymbol && isVector(b)) {\n          b = b.map(function (x) {\n            return _.subtract(a.clone(), x);\n          });\n        } else if (isVector(a) && isVector(b)) {\n          if (a.dimensions() === b.dimensions()) b = a.subtract(b);else _.error('Unable to subtract vectors. Dimensions do not match.');\n        } else if (isMatrix(a) && isVector(b)) {\n          if (b.elements.length === a.rows()) {\n            var M = new Matrix(),\n                l = a.cols();\n            b.each(function (e, i) {\n              var row = [];\n\n              for (var j = 0; j < l; j++) {\n                row.push(_.subtract(a.elements[i - 1][j].clone(), e.clone()));\n              }\n\n              M.elements.push(row);\n            });\n            return M;\n          } else err('Dimensions must match!');\n        } else if (isVector(a) && isMatrix(b)) {\n          var M = b.clone().negate();\n          return _.add(M, a);\n        } else if (isMatrix(a) && isMatrix(b)) {\n          b = a.subtract(b);\n        } else if (isMatrix(a) && bIsSymbol) {\n          var M = new Matrix();\n          a.each(function (x, i, j) {\n            M.set(i, j, _.subtract(x, b.clone()));\n          });\n          b = M;\n        } else if (aIsSymbol && isMatrix(b)) {\n          var M = new Matrix();\n          b.each(function (x, i, j) {\n            M.set(i, j, _.subtract(a.clone(), x));\n          });\n          b = M;\n        }\n\n        return b;\n      }\n    };\n    /**\r\n     * Gets called when the parser finds the * operator. See this.add\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.multiply = function (a, b) {\n      var aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b); //we're dealing with function assignment here\n\n      if (aIsSymbol && b instanceof Collection) {\n        b.elements.push(a);\n        return b;\n      }\n\n      if (aIsSymbol && bIsSymbol) {\n        //if it has a unit then add it and return it right away.\n        if (b.isUnit) {\n          var result = a.clone();\n          a.unit = b;\n          return result;\n        } //if it has units then just forward that problem to the unit module\n\n\n        if (a.unit || b.unit) {\n          return _.Unit.multiply(a, b);\n        } //handle Infinty\n\n\n        if (a.isInfinity || b.isInfinity) {\n          if (a.equals(0) || b.equals(0)) throw new UndefinedError(a + '*' + b + ' is undefined!'); //x/infinity\n\n          if (b.power.lessThan(0)) {\n            if (!a.isInfinity) {\n              return new Symbol(0);\n            } else {\n              throw new UndefinedError('Infinity/Infinity is not defined!');\n            }\n          }\n\n          var sign = a.multiplier.multiply(b.multiplier).sign(),\n              inf = Symbol.infinity();\n\n          if (a.isConstant() || b.isConstant() || a.isInfinity && b.isInfinity) {\n            if (sign < 0) inf.negate();\n            return inf;\n          }\n        } //the quickies\n\n\n        if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n          var t = new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();\n          var retval = new Symbol(t);\n          return retval;\n        } //don't waste time\n\n\n        if (a.isOne()) {\n          return b.clone();\n        }\n\n        if (b.isOne()) {\n          return a.clone();\n        }\n\n        if (a.multiplier.equals(0) || b.multiplier.equals(0)) return new Symbol(0);\n        if (b.group > a.group && !(b.group === CP)) return this.multiply(b, a); //correction for PL/CB dilemma\n\n        if (a.group === CB && b.group === PL && a.value === b.value) {\n          var t = a;\n          a = b;\n          b = t; //swap\n        }\n\n        var g1 = a.group,\n            g2 = b.group,\n            bnum = b.multiplier.num,\n            bden = b.multiplier.den;\n\n        if (g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value && !a.args[0].multiplier.lessThan(0)) {\n          //unwrap sqrt\n          var a_pow = a.power;\n\n          var a_multiplier = _.parse(a.multiplier);\n\n          a = _.multiply(a_multiplier, a.args[0].clone());\n          a.setPower(new Frac(0.5).multiply(a_pow));\n          g1 = a.group;\n        } //simplify n/sqrt(n). Being very specific\n        else if (g1 === FN && a.fname === SQRT && a.multiplier.equals(1) && a.power.equals(-1) && b.isConstant() && a.args[0].equals(b)) {\n          a = _.symfunction(SQRT, [b.clone()]);\n          b = new Symbol(1);\n        }\n\n        ;\n        var v1 = a.value,\n            v2 = b.value,\n            sign = new Frac(a.sign()),\n            //since P is just a morphed version of N we need to see if they relate\n        ONN = g1 === P && g2 === N && b.multiplier.equals(a.value),\n            //don't multiply the multiplier of b since that's equal to the value of a\n        m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\n            result = a.clone().toUnitMultiplier();\n        b = b.clone().toUnitMultiplier(true); //further simplification of sqrt\n\n        if (g1 === FN && g2 === FN) {\n          var u = a.args[0].clone();\n          var v = b.args[0].clone();\n\n          if (a.fname === SQRT && b.fname === SQRT && a.isLinear() && b.isLinear()) {\n            var q = _.divide(u, v).invert();\n\n            if (q.gt(1) && isInt(q)) {\n              //b contains a factor a which can be moved to a\n              result = _.multiply(a.args[0].clone(), _sqrt(q.clone()));\n              b = new Symbol(1);\n            }\n          } //simplify factorial but only if\n          //1 - It's division so b will have a negative power\n          //2 - We're not dealing with factorials of numbers\n          else if (a.fname === FACTORIAL && b.fname === FACTORIAL && !u.isConstant() && !v.isConstant() && b.power < 0) {\n            //assume that n = positive\n            var d = _.subtract(u.clone(), v.clone()); //if it's not numeric then we don't know if we can simplify so just return\n\n\n            if (d.isConstant()) {\n              //there will never be a case where d == 0 since this will already have\n              //been handled at the beginning of this function\n              t = new Symbol(1);\n\n              if (d < 0) {\n                //If d is negative then the numerator is larger so expand that\n                for (var i = 0, n = Math.abs(d); i <= n; i++) {\n                  var s = _.add(u.clone(), new Symbol(i));\n\n                  t = _.multiply(t, s);\n                }\n\n                result = _.multiply(_.pow(u, new Symbol(a.power)), _.pow(t, new Symbol(b.power)));\n                b = new Symbol(1);\n              } else {\n                //Otherwise the denominator is larger so expand that\n                for (var i = 0, n = Math.abs(d); i <= n; i++) {\n                  var s = _.add(v.clone(), new Symbol(i));\n\n                  t = _.multiply(t, s);\n                }\n\n                result = _.multiply(_.pow(t, new Symbol(a.power)), _.pow(v, new Symbol(b.power)));\n                b = new Symbol(1);\n              }\n            }\n          }\n        } //if both are PL then their hashes have to match\n\n\n        if (v1 === v2 && g1 === PL && g1 === g2) {\n          v1 = a.text('hash');\n          v2 = b.text('hash');\n        } //same issue with (x^2+1)^x*(x^2+1)\n        //EX needs an exception when multiplying because it needs to recognize\n        //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\n\n\n        if (g2 === EX && b.previousGroup === PL && g1 === PL) {\n          v1 = _text(a, 'hash', EX);\n        }\n\n        if ((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {\n          var p1 = a.power,\n              p2 = b.power,\n              isSymbolP1 = isSymbol(p1),\n              isSymbolP2 = isSymbol(p2),\n              toEX = isSymbolP1 || isSymbolP2; //TODO: this needs cleaning up\n\n          if (g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\n            result = new Symbol(0);\n            a.each(function (x) {\n              result = _.add(result, _.multiply(x, b.clone()));\n            }, true);\n          } else {\n            //add the powers\n            result.power = toEX ? _.add(!isSymbol(p1) ? new Symbol(p1) : p1, !isSymbol(p2) ? new Symbol(p2) : p2) : g1 === N\n            /*don't add powers for N*/\n            ? p1 : p1.add(p2); //eliminate zero power values and convert them to numbers\n\n            if (result.power.equals(0)) result = result.convert(N); //properly convert to EX\n\n            if (toEX) result.convert(EX); //take care of imaginaries\n\n            if (a.imaginary && b.imaginary) {\n              var isEven = even(result.power % 2);\n\n              if (isEven) {\n                result = new Symbol(1);\n                m.negate();\n              }\n            } //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\n\n\n            if (result.group !== EX && result.previousGroup) result.previousGroup = undefined; //the sign for b is floating around. Remember we are assuming that the odd variable will carry\n            //the sign but this isn't true if they're equals symbols\n\n            result.multiplier = result.multiplier.multiply(b.multiplier);\n          }\n        } else if (g1 === CB && a.isLinear()) {\n          if (g2 === CB) b.distributeExponent();\n\n          if (g2 === CB && b.isLinear()) {\n            for (var s in b.symbols) {\n              var x = b.symbols[s];\n              result = result.combine(x);\n            }\n\n            result.multiplier = result.multiplier.multiply(b.multiplier);\n          } else {\n            result.combine(b);\n          }\n        } else {\n          //the multiplier was already handled so nothing left to do\n          if (g1 !== N) {\n            if (g1 === CB) {\n              result.distributeExponent();\n              result.combine(b);\n            } else if (!b.isOne()) {\n              var bm = b.multiplier.clone();\n              b.toUnitMultiplier();\n              result = Symbol.shell(CB).combine([result, b]); //transfer the multiplier to the outside\n\n              result.multiplier = result.multiplier.multiply(bm);\n            }\n          } else {\n            result = b.clone().toUnitMultiplier();\n          }\n        }\n\n        if (result.group === P) {\n          var logV = Math.log(result.value),\n              n1 = Math.log(bnum) / logV,\n              n2 = Math.log(bden) / logV,\n              ndiv = m.num / bnum,\n              ddiv = m.den / bden; //we don't want to divide by zero no do we? Strange things happen.\n\n          if (n1 !== 0 && isInt(n1) && isInt(ndiv)) {\n            result.power = result.power.add(new Frac(n1));\n            m.num /= bnum; //BigInt? Keep that in mind for the future.\n          }\n\n          if (n2 !== 0 && isInt(n2) && isInt(ddiv)) {\n            result.power = result.power.subtract(new Frac(n2));\n            m.den /= bden; //BigInt? Keep that in mind for the future.\n          }\n        } //unpack CB if length is only one\n\n\n        if (result.length === 1) {\n          var t = result.multiplier; //transfer the multiplier\n\n          result = firstObject(result.symbols);\n          result.multiplier = result.multiplier.multiply(t);\n        } //reduce square root\n\n\n        var ps = result.power.toString();\n\n        if (even(ps) && result.fname === SQRT) {\n          //grab the sign of the symbol\n          sign = sign * result.sign();\n          var p = result.power;\n          result = result.args[0];\n          result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2))))); //flip it back to the correct sign\n\n          if (sign < 0) result.negate();\n        } else {\n          result.multiplier = result.multiplier.multiply(m).multiply(sign);\n          if (result.group === CP && result.isImaginary()) result.distributeMultiplier();\n        } //back convert group P to a simpler group N if possible\n\n\n        if (result.group === P && isInt(result.power.toDecimal())) result = result.convert(N);\n        return result;\n      } else {\n        //****** Matrices & Vector *****//\n        if (bIsSymbol && !aIsSymbol) {\n          //keep symbols to the right\n          t = a;\n          a = b;\n          b = t; //swap\n\n          t = bIsSymbol;\n          bIsSymbol = aIsSymbol;\n          aIsSymbol = t;\n        }\n\n        var isMatrixB = isMatrix(b),\n            isMatrixA = isMatrix(a);\n\n        if (aIsSymbol && isMatrixB) {\n          var M = new Matrix();\n          b.eachElement(function (e, i, j) {\n            M.set(i, j, _.multiply(a.clone(), e));\n          });\n          b = M;\n        } else {\n          if (isMatrixA && isMatrixB) {\n            b = a.multiply(b);\n          } else if (aIsSymbol && isVector(b)) {\n            b.each(function (x, i) {\n              i--;\n              b.elements[i] = _.multiply(a.clone(), b.elements[i]);\n            });\n          } else {\n            if (isVector(a) && isVector(b)) {\n              b.each(function (x, i) {\n                i--;\n                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\n              });\n            } else if (isVector(a) && isMatrix(b)) {\n              //try to convert a to a matrix\n              return this.multiply(b, a);\n            } else if (isMatrix(a) && isVector(b)) {\n              if (b.elements.length === a.rows()) {\n                var M = new Matrix(),\n                    l = a.cols();\n                b.each(function (e, i) {\n                  var row = [];\n\n                  for (var j = 0; j < l; j++) {\n                    row.push(_.multiply(a.elements[i - 1][j].clone(), e.clone()));\n                  }\n\n                  M.elements.push(row);\n                });\n                return M;\n              } else err('Dimensions must match!');\n            }\n          }\n        }\n\n        return b;\n      }\n    };\n    /**\r\n     * Gets called when the parser finds the / operator. See this.add\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.divide = function (a, b) {\n      var aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b);\n\n      if (aIsSymbol && bIsSymbol) {\n        //forward to Unit division\n        if (a.unit || b.unit) {\n          return _.Unit.divide(a, b);\n        }\n\n        var result;\n        if (b.equals(0)) throw new DivisionByZero('Division by zero not allowed!');\n\n        if (a.isConstant() && b.isConstant()) {\n          result = a.clone();\n          result.multiplier = result.multiplier.divide(b.multiplier);\n        } else {\n          b.invert();\n          result = _.multiply(a, b);\n        }\n\n        return result;\n      } else {\n        //******* Vectors & Matrices *********//\n        var isVectorA = isVector(a),\n            isVectorB = isVector(b);\n\n        if (aIsSymbol && isVectorB) {\n          b = b.map(function (x) {\n            return _.divide(a.clone(), x);\n          });\n        } else if (isVectorA && bIsSymbol) {\n          b = a.map(function (x) {\n            return _.divide(x, b.clone());\n          });\n        } else if (isVectorA && isVectorB) {\n          if (a.dimensions() === b.dimensions()) {\n            b = b.map(function (x, i) {\n              return _.divide(a.elements[--i], x);\n            });\n          } else _.error('Cannot divide vectors. Dimensions do not match!');\n        } else {\n          var isMatrixA = isMatrix(a),\n              isMatrixB = isMatrix(b);\n\n          if (isMatrixA && bIsSymbol) {\n            var M = new Matrix();\n            a.eachElement(function (x, i, j) {\n              M.set(i, j, _.divide(x, b.clone()));\n            });\n            b = M;\n          } else if (aIsSymbol && isMatrixB) {\n            var M = new Matrix();\n            b.eachElement(function (x, i, j) {\n              M.set(i, j, _.divide(a.clone(), x));\n            });\n            b = M;\n          } else if (isMatrixA && isMatrixB) {\n            var M = new Matrix();\n\n            if (a.rows() === b.rows() && a.cols() === b.cols()) {\n              a.eachElement(function (x, i, j) {\n                M.set(i, j, _.divide(x, b.elements[i][j]));\n              });\n              b = M;\n            } else {\n              _.error('Dimensions do not match!');\n            }\n          } else if (isMatrixA && isVectorB) {\n            if (a.cols() === b.dimensions()) {\n              var M = new Matrix();\n              a.eachElement(function (x, i, j) {\n                M.set(i, j, _.divide(x, b.elements[i].clone()));\n              });\n              b = M;\n            } else {\n              _.error('Unable to divide matrix by vector.');\n            }\n          }\n        }\n\n        return b;\n      }\n    };\n    /**\r\n     * Gets called when the parser finds the ^ operator. See this.add\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.pow = function (a, b) {\n      var aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b);\n\n      if (aIsSymbol && bIsSymbol) {\n        //it has units then it's the Unit module's problem\n        if (a.unit || b.unit) {\n          return _.Unit.pow(a, b);\n        } // Handle abs\n\n\n        if (a.group === FN && a.fname === ABS && even(b)) {\n          var m = a.multiplier.clone();\n\n          var raised = _.pow(a.args[0], b);\n\n          raised.multiplier = m;\n          return raised;\n        } // Handle infinity\n\n\n        if (a.isInfinity || b.isInfinity) {\n          if (a.isInfinity && b.isInfinity) throw new UndefinedError('(' + a + ')^(' + b + ') is undefined!');\n\n          if (a.isConstant() && b.isInfinity) {\n            if (a.equals(0)) {\n              if (b.lessThan(0)) throw new UndefinedError('0^Infinity is undefined!');\n              return new Symbol(0);\n            }\n\n            if (a.equals(1)) throw new UndefinedError('1^' + b.toString() + ' is undefined!'); //a^-oo\n\n            if (b.lessThan(0)) return new Symbol(0); //a^oo\n\n            if (!a.lessThan(0)) return Symbol.infinity();\n          }\n\n          if (a.isInfinity && b.isConstant()) {\n            if (b.equals(0)) throw new UndefinedError(a + '^0 is undefined!');\n            if (b.lessThan(0)) return new Symbol(0);\n            return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\n          }\n        }\n\n        var aIsZero = a.equals(0);\n        var bIsZero = b.equals(0);\n        if (aIsZero && bIsZero) throw new UndefinedError('0^0 is undefined!'); // Return 0 right away if possible\n\n        if (aIsZero && b.isConstant() && b.multiplier.greaterThan(0)) return new Symbol(0);\n        if (bIsZero) return new Symbol(1);\n        var bIsConstant = b.isConstant(),\n            aIsConstant = a.isConstant(),\n            bIsInt = b.isInteger(),\n            m = a.multiplier,\n            result = a.clone(); // 0^0, 1/0, etc. Complain.\n\n        if (aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0)) throw new UndefinedError('Division by zero is not allowed!'); // Compute imaginary numbers right away\n\n        if (Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) {\n          var k, re, im;\n          k = Math.PI * b;\n          re = new Symbol(Math.cos(k));\n          im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\n          return _.add(re, im);\n        } // Imaginary number under negative nthroot or to the n\n\n\n        if (Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && isInt(b) && !b.lessThan(0)) {\n          var re, im, r, theta, nre, nim, phi;\n          re = a.realpart();\n          im = a.imagpart();\n\n          if (re.isConstant('all') && im.isConstant('all')) {\n            phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal()).times(b.toString())) : Math.atan2(im, re) * b;\n            theta = new Symbol(phi);\n            r = _.pow(Symbol.hyp(re, im), b);\n            nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\n            nim = _.multiply(r, _.trig.sin(theta));\n            return _.add(nre, _.multiply(Symbol.imaginary(), nim));\n          }\n        } // Take care of the symbolic part\n\n\n        result.toUnitMultiplier(); //simpifly sqrt\n\n        if (result.group === FN && result.fname === SQRT && !bIsConstant) {\n          var s = result.args[0];\n          s.multiplyPower(new Symbol(0.5));\n          s.multiplier.multiply(result.multiplier);\n          s.multiplyPower(b);\n          result = s;\n        } else {\n          var sign = m.sign(); //handle cases such as (-a^3)^(1/4)\n\n          if (evenFraction(b) && sign < 0) {\n            // Swaperoo\n            // First put the sign back on the symbol\n            result.negate(); // Wrap it in brackets\n\n            result = _.symfunction(PARENTHESIS, [result]); // Move the sign back the exterior and let nerdamer handle the rest\n\n            result.negate();\n          }\n\n          result.multiplyPower(b);\n        }\n\n        if (aIsConstant && bIsConstant && Settings.PARSE2NUMBER) {\n          var c; //remove the sign\n\n          if (sign < 0) {\n            a.negate();\n            if (b.multiplier.den.equals(2)) //we know that the numerator has to be odd and therefore it's i\n              c = new Symbol(Settings.IMAGINARY);else if (isInt(b.multiplier)) {\n              if (even(b.multiplier)) c = new Symbol(1);else c = new Symbol(-1);\n            } else if (!even(b.multiplier.den)) {\n              c = new Symbol(Math.pow(sign, b.multiplier.num));\n            } else {\n              c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n            }\n          }\n\n          result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal())); //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\n          //put the back sign\n\n          if (c) result = _.multiply(result, c);\n        } else if (bIsInt && !m.equals(1)) {\n          var abs_b = b.abs(); // Provide fall back to JS until big number implementation is improved\n\n          if (abs_b.gt(Settings.MAX_EXP)) {\n            if (b.sign() < 0) return new Symbol(0);\n            return Symbol.infinity();\n          } else {\n            var p = b.multiplier.toDecimal();\n            var sgn = Math.sign(p);\n            p = Math.abs(p);\n            var multiplier = new Frac(1);\n            multiplier.num = m.num.pow(p);\n            multiplier.den = m.den.pow(p);\n            if (sgn < 0) multiplier.invert(); //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\n\n            result.multiplier = result.multiplier.multiply(multiplier);\n          }\n        } else {\n          var sign = a.sign();\n\n          if (b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\n            //we know the sign is negative so if the denominator for b == 2 then it's i\n            if (b.multiplier.den.equals(2)) {\n              var i = new Symbol(Settings.IMAGINARY);\n              a.negate(); //remove the sign\n              //if the power is negative then i is negative\n\n              if (b.lessThan(0)) {\n                i.negate();\n                b.negate(); //remove the sign from the power\n              } //pull the power normally and put back the imaginary\n\n\n              result = _.multiply(_.pow(a, b), i);\n            } else {\n              var aa = a.clone();\n              aa.multiplier.negate();\n              result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n\n              var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\n\n              var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\n\n              var r = _.divide(_a, _b);\n\n              result = _.multiply(result, r);\n            }\n          } else if (Settings.PARSE2NUMBER && b.isImaginary()) {\n            //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\n            var re = b.realpart();\n            var im = b.imagpart();\n            /*\r\n             if(b.group === CP && false) {\r\n             var ex = _.pow(a.clone(), re);\r\n             var xi = _.multiply(_.multiply(ex.clone(), trig.sin(im.clone())), Symbol.imaginary());\r\n             var xa = _.multiply(trig.cos(im), ex);\r\n             result = _.add(xi, xa);\r\n             }\r\n             else {\r\n             */\n\n            var aa = a.clone().toLinear();\n\n            var a1 = _.pow(aa.clone(), re);\n\n            var log_a = _log(aa.clone());\n\n            var b1 = trig.cos(_.multiply(im.clone(), log_a));\n\n            var c1 = _.multiply(trig.sin(_.multiply(im, _log(aa))), Symbol.imaginary());\n\n            result = _.multiply(a1, _.add(b1, c1));\n            result = _.expand(_.parse(result));\n            /*\r\n             }   \r\n             */\n          } else {\n            //b is a symbol\n            var neg_num = a.group === N && sign < 0,\n                num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\n                den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert()); //eliminate imaginary if possible\n\n            if (a.imaginary) {\n              if (bIsInt) {\n                var s, p, n;\n                s = Math.sign(b);\n                p = abs(b);\n                n = p % 4;\n                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\n\n                if (n === 0 || s < 0 && n === 1 || s > 0 && n === 3) {\n                  result.negate();\n                }\n              } else {\n                //assume i = sqrt(-1) -> (-1)^(1/2)\n                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\n                    //the denominator denotes the power so raise to it. It will turn positive it round\n                tn = Math.pow(-1, nr.num);\n                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\n              }\n            } //ensure that the sign is carried by the symbol and not the multiplier\n            //this enables us to check down the line if the multiplier can indeed be transferred\n\n\n            if (sign < 0 && !neg_num) result.negate(); //retain the absolute value\n\n            if (bIsConstant && a.group !== EX) {\n              var evenr = even(b.multiplier.den),\n                  evenp = even(a.power),\n                  n = result.power.toDecimal(),\n                  evennp = even(n);\n\n              if (evenr && evenp && !evennp) {\n                if (n === 1) result = _.symfunction(ABS, [result]);else if (!isInt(n)) {\n                  var p = result.power;\n                  result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\n                } else {\n                  result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]), result.clone().setPower(new Frac(n - 1)));\n                } //quick workaround. Revisit\n\n                if (Settings.POSITIVE_MULTIPLIERS && result.fname === ABS) result = result.args[0];\n              }\n            } //multiply out sqrt\n\n\n            if (b.equals(2) && result.group === CB) {\n              var _result = new Symbol(1);\n\n              result.each(function (sym) {\n                _result = _.multiply(_result, _.pow(sym, b));\n              });\n              result = _result;\n            }\n          }\n        }\n\n        result = testSQRT(result); // Don't multiply until we've tested the remaining symbol\n\n        if (num && den) {\n          result = _.multiply(result, testPow(_.multiply(num, den)));\n        } // Reduce square root\n\n\n        if (result.fname === SQRT) {\n          var isEX = result.group === EX;\n          var t = isEX ? result.power.multiplier.toString() : result.power.toString();\n\n          if (even(t)) {\n            var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\n                m = result.multiplier;\n            result = _.pow(result.args[0], pt);\n            result.multiplier = result.multiplier.multiply(m);\n          }\n        } // Detect Euler's identity\n        else if (!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi') && result.power.contains(Settings.IMAGINARY) && b.group === CB) {\n          var theta = b.stripVar(Settings.IMAGINARY);\n          result = _.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta)));\n        }\n\n        return result;\n      } else {\n        if (isVector(a) && bIsSymbol) {\n          a = a.map(function (x) {\n            return _.pow(x, b.clone());\n          });\n        } else if (isMatrix(a) && bIsSymbol) {\n          var M = new Matrix();\n          a.eachElement(function (x, i, j) {\n            M.set(i, j, _.pow(x, b.clone()));\n          });\n          a = M;\n        } else if (aIsSymbol && isMatrix(b)) {\n          var M = new Matrix();\n          b.eachElement(function (x, i, j) {\n            M.set(i, j, _.pow(a.clone(), x));\n          });\n          a = M;\n        }\n\n        return a;\n      }\n    }; // Gets called when the parser finds the , operator.\n    // Commas return a Collector object which is roughly an array\n\n\n    this.comma = function (a, b) {\n      if (!(a instanceof Collection)) a = Collection.create(a);\n      a.append(b);\n      return a;\n    }; // Link to modulus\n\n\n    this.mod = function (a, b) {\n      return mod(a, b);\n    }; // Used to slice elements from arrays\n\n\n    this.slice = function (a, b) {\n      return new Slice(a, b);\n    }; // The equality setter\n\n\n    this.equals = function (a, b) {\n      // Equality can only be set for group S so complain it's not\n      if (a.group !== S && !a.isLinear()) err('Cannot set equality for ' + a.toString());\n      VARS[a.value] = b.clone();\n      return b;\n    }; // Percent\n\n\n    this.percent = function (a) {\n      return _.divide(a, new Symbol(100));\n    }; // Set variable\n\n\n    this.assign = function (a, b) {\n      if (a instanceof Collection && b instanceof Collection) {\n        a.elements.map(function (x, i) {\n          return _.assign(x, b.elements[i]);\n        });\n        return Vector.fromArray(b.elements);\n      }\n\n      if (a.parent) {\n        // It's referring to the parent instead. The current item can be discarded\n        var e = a.parent;\n        e.elements[e.getter] = b;\n        delete e.getter;\n        return e;\n      }\n\n      if (a.group !== S) throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\n      VARS[a.value] = b;\n      return b;\n    };\n\n    this.function_assign = function (a, b) {\n      var f = a.elements.pop();\n      return setFunction(f, a.elements, b);\n    }; // Function to quickly convert bools to Symbols\n\n\n    var bool2Symbol = function bool2Symbol(x) {\n      return new Symbol(x === true ? 1 : 0);\n    }; //check for equality\n\n\n    this.eq = function (a, b) {\n      return bool2Symbol(a.equals(b));\n    }; //checks for greater than\n\n\n    this.gt = function (a, b) {\n      return bool2Symbol(a.gt(b));\n    }; //checks for greater than equal\n\n\n    this.gte = function (a, b) {\n      return bool2Symbol(a.gte(b));\n    }; //checks for less than\n\n\n    this.lt = function (a, b) {\n      return bool2Symbol(a.lt(b));\n    }; //checks for less than equal\n\n\n    this.lte = function (a, b) {\n      return bool2Symbol(a.lte(b));\n    }; // wraps the factorial\n\n\n    this.factorial = function (a) {\n      return this.symfunction(FACTORIAL, [a]);\n    }; // wraps the double factorial\n\n\n    this.dfactorial = function (a) {\n      return this.symfunction(DOUBLEFACTORIAL, [a]);\n    };\n  }\n\n  ;\n  /* \"STATIC\" */\n  // converts a number to a fraction.\n\n  var Fraction = {\n    /**\r\n     * Converts a decimal to a fraction\r\n     * @param {number} value\r\n     * @param {object} opts\r\n     * @returns {Array} - an array containing the denominator and the numerator\r\n     */\n    convert: function convert(value, opts) {\n      var frac;\n\n      if (value === 0) {\n        frac = [0, 1];\n      } else {\n        if (value < 1e-6 || value > 1e20) {\n          var qc = this.quickConversion(Number(value));\n\n          if (qc[1] <= 1e20) {\n            var abs = Math.abs(value);\n            var sign = value / abs;\n            frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\n            frac[0] = frac[0] * sign;\n          } else {\n            frac = qc;\n          }\n        } else {\n          frac = this.fullConversion(value);\n        }\n      }\n\n      return frac;\n    },\n\n    /**\r\n     * If the fraction is too small or too large this gets called instead of fullConversion method\r\n     * @param {number} dec\r\n     * @returns {Array} - an array containing the denominator and the numerator\r\n     */\n    quickConversion: function quickConversion(value) {\n      var stripSign = function stripSign(s) {\n        // Explicitely convert to a string\n        if (typeof s !== 'string') {\n          s = s.toString();\n        }\n\n        var sign = ''; // Remove and store the sign\n\n        var start = s.charAt(0);\n\n        if (start === '-') {\n          s = s.substr(1, s.length);\n          sign = '-';\n        } else if (start === '+') {\n          // Just remove the plus sign\n          s = s.substr(1, s.length);\n        }\n\n        return {\n          sign: sign,\n          value: s\n        };\n      };\n\n      function convert(value) {\n        // Explicitely convert to a decimal\n        if (Scientific.isScientific(value)) {\n          value = scientificToDecimal(value);\n        } // Split the value into the sign and the value\n\n\n        var nparts = stripSign(value); // Split it at the decimal. We'll refer to it as the coeffient parts\n\n        var cparts = nparts.value.split('.'); // Combine the entire number by removing leading zero and adding the decimal part\n        // This would be teh same as moving the decimal point to the end\n\n        var num; // We're dealing with integers\n\n        if (cparts.length === 1) {\n          num = cparts[0];\n        } else {\n          num = cparts[0] + cparts[1];\n        }\n\n        var n = cparts[1] ? cparts[1].length : 0; // Generate the padding for the zeros\n\n        var den = \"1\".concat('0'.repeat(n));\n\n        if (num !== '0') {\n          num = num.replace(/^0+/, '');\n        }\n\n        return [nparts.sign + num, den];\n      }\n\n      return convert(value);\n    },\n\n    /**\r\n     * Returns a good approximation of a fraction. This method gets called by convert\r\n     * http://mathforum.org/library/drmath/view/61772.html\r\n     * Decimal To Fraction Conversion - A Simpler Version\r\n     * Dr Peterson\r\n     * @param {number} dec\r\n     * @returns {Array} - an array containing the denominator and the numerator\r\n     */\n    fullConversion: function fullConversion(dec) {\n      var done = false; // you can adjust the epsilon to a larger number if you don't need very high precision\n\n      var n1 = 0,\n          d1 = 1,\n          n2 = 1,\n          d2 = 0,\n          n = 0,\n          q = dec,\n          epsilon = 1e-16;\n\n      while (!done) {\n        n++;\n\n        if (n > 10000) {\n          done = true;\n        }\n\n        var a = Math.floor(q);\n        var num = n1 + a * n2;\n        var den = d1 + a * d2;\n        var e = q - a;\n\n        if (e < epsilon) {\n          done = true;\n        }\n\n        q = 1 / e;\n        n1 = n2;\n        d1 = d2;\n        n2 = num;\n        d2 = den;\n\n        if (Math.abs(num / den - dec) < epsilon || n > 30) {\n          done = true;\n        }\n      }\n\n      return [num, den];\n    }\n  }; //Depends on Fraction\n  //The latex generator\n\n  var LaTeX = {\n    parser: function () {\n      // create a parser and strip it from everything except the items that you need\n      var keep = ['classes', 'setOperator', 'getOperators', 'getBrackets', 'tokenize', 'toRPN', 'tree', 'units'];\n      var parser = new Parser();\n\n      for (var x in parser) {\n        if (keep.indexOf(x) === -1) delete parser[x];\n      } // declare the operators\n\n\n      parser.setOperator({\n        precedence: 8,\n        operator: '\\\\',\n        action: 'slash',\n        prefix: true,\n        postfix: false,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return e; // bypass the slash\n        }\n      });\n      parser.setOperator({\n        precedence: 8,\n        operator: '\\\\,',\n        action: 'slash_comma',\n        prefix: true,\n        postfix: false,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return e; // bypass the slash\n        }\n      }); // have braces not map to anything. We want them to be return as-is\n\n      var brackets = parser.getBrackets();\n      brackets['{'].maps_to = undefined;\n      return parser;\n    }(),\n    space: '~',\n    dot: ' \\\\cdot ',\n    // grab a list of supported functions but remove the excluded ones found in exclFN\n    latex: function latex(symbol, option) {\n      // it might be an array\n      if (symbol.clone) {\n        symbol = symbol.clone(); // leave original as-is\n      }\n\n      if (symbol instanceof _.classes.Collection) symbol = symbol.elements;\n\n      if (isArray(symbol)) {\n        var LaTeXArray = [];\n\n        for (var i = 0; i < symbol.length; i++) {\n          var sym = symbol[i]; //This way I can generate LaTeX on an array of strings.\n\n          if (!isSymbol(sym)) sym = _.parse(sym);\n          LaTeXArray.push(this.latex(sym, option));\n        }\n\n        return this.brackets(LaTeXArray.join(', '), 'square');\n      } else if (isMatrix(symbol)) {\n        var TeX = '\\\\begin{pmatrix}\\n';\n\n        for (var i = 0; i < symbol.elements.length; i++) {\n          var rowTeX = [],\n              e = symbol.elements[i];\n\n          for (var j = 0; j < e.length; j++) {\n            rowTeX.push(this.latex(e[j], option));\n          }\n\n          TeX += rowTeX.join(' & ');\n\n          if (i < symbol.elements.length - 1) {\n            TeX += '\\\\\\\\\\n';\n          }\n        }\n\n        TeX += '\\\\end{pmatrix}';\n        return TeX;\n      } else if (isVector(symbol)) {\n        var TeX = '\\\\left[';\n\n        for (var i = 0; i < symbol.elements.length; i++) {\n          TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n        }\n\n        TeX += '\\\\right]';\n        return TeX;\n      } else if (isSet(symbol)) {\n        var TeX = '\\\\{';\n\n        for (var i = 0; i < symbol.elements.length; i++) {\n          TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n        }\n\n        TeX += '\\\\}';\n        return TeX;\n      }\n\n      symbol = symbol.clone();\n      var decimal = option === 'decimal' || option === 'decimals',\n          power = symbol.power,\n          invert = isNegative(power),\n          negative = symbol.multiplier.lessThan(0);\n\n      if (symbol.group === P && decimal) {\n        return String(symbol.multiplier.toDecimal() * Math.pow(symbol.value, symbol.power.toDecimal()));\n      } else {\n        symbol.multiplier = symbol.multiplier.abs(); // if the user wants the result in decimal format then return it as such by placing it at the top part\n\n        var m_array;\n\n        if (decimal) {\n          var m = String(symbol.multiplier.toDecimal()); // if(String(m) === '1' && !decimal) m = '';\n\n          m_array = [m, ''];\n        } else {\n          m_array = [symbol.multiplier.num, symbol.multiplier.den];\n        } // get the value as a two part array\n\n\n        var v_array = this.value(symbol, invert, option, negative),\n            p; // make it all positive since we know whether to push the power to the numerator or denominator already.\n\n        if (invert) power.negate(); // the power is simple since it requires no additional formatting. We can get it to a\n        // string right away. pass in true to neglect unit powers\n\n        if (decimal) {\n          p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\n          if (String(p) === '1') p = '';\n        } // get the latex representation\n        else if (isSymbol(power)) p = this.latex(power, option); // get it as a fraction\n        else p = this.formatFrac(power, true); // use this array to specify if the power is getting attached to the top or the bottom\n\n\n        var p_array = ['', ''],\n            // stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\n        index = invert ? 1 : 0;\n        p_array[index] = p; // special case group P and decimal\n\n        var retval = (negative ? '-' : '') + this.set(m_array, v_array, p_array, symbol.group === CB);\n        return retval.replace(/\\+\\-/gi, '-');\n      }\n    },\n    // greek mapping\n    greek: {\n      alpha: '\\\\alpha',\n      beta: '\\\\beta',\n      gamma: '\\\\gamma',\n      delta: '\\\\delta',\n      epsilon: '\\\\epsilon',\n      zeta: '\\\\zeta',\n      eta: '\\\\eta',\n      theta: '\\\\theta',\n      iota: '\\\\iota',\n      kappa: '\\\\kappa',\n      lambda: '\\\\lambda',\n      mu: '\\\\mu',\n      nu: '\\\\nu',\n      xi: '\\\\xi',\n      omnikron: '\\\\omnikron',\n      pi: '\\\\pi',\n      rho: '\\\\rho',\n      sigma: '\\\\sigma',\n      tau: '\\\\tau',\n      upsilon: \"\\\\upsilon\",\n      phi: '\\\\phi',\n      chi: '\\\\chi',\n      psi: '\\\\psi',\n      omega: '\\\\omega',\n      Gamma: '\\\\Gamma',\n      Delta: '\\\\Delta',\n      Epsilon: '\\\\Epsilon',\n      Theta: '\\\\Theta',\n      Lambda: '\\\\Lambda',\n      Xi: '\\\\Xi',\n      Pi: '\\\\Pi',\n      Sigma: '\\\\Sigma',\n      Phi: '\\\\Phi',\n      Psi: '\\\\Psi',\n      Omega: '\\\\Omega'\n    },\n    symbols: {\n      arccos: '\\\\arccos',\n      cos: '\\\\cos',\n      csc: '\\\\csc',\n      exp: '\\\\exp',\n      ker: '\\\\ker',\n      limsup: '\\\\limsup',\n      min: '\\\\min',\n      sinh: '\\\\sinh',\n      arcsin: '\\\\arcsin',\n      cosh: '\\\\cosh',\n      deg: '\\\\deg',\n      gcd: '\\\\gcd',\n      lg: '\\\\lg',\n      ln: '\\\\ln',\n      Pr: '\\\\Pr',\n      sqrt: '\\\\sqrt',\n      sup: '\\\\sup',\n      arctan: '\\\\arctan',\n      cot: '\\\\cot',\n      det: '\\\\det',\n      hom: '\\\\hom',\n      lim: '\\\\lim',\n      log: '\\\\log',\n      LN: '\\\\LN',\n      sec: '\\\\sec',\n      tan: '\\\\tan',\n      arg: '\\\\arg',\n      coth: '\\\\coth',\n      dim: '\\\\dim',\n      inf: '\\\\inf',\n      liminf: '\\\\liminf',\n      max: '\\\\max',\n      sin: '\\\\sin',\n      tanh: '\\\\tanh'\n    },\n    // get the raw value of the symbol as an array\n    value: function value(symbol, inverted, option, negative) {\n      var group = symbol.group,\n          previousGroup = symbol.previousGroup,\n          v = ['', ''],\n          index = inverted ? 1 : 0;\n      /*if(group === N) // do nothing since we want to return top & bottom blank; */\n\n      if (symbol.isInfinity) {\n        v[index] = '\\\\infty';\n      } else if (group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) {\n        var value = this.formatSubscripts(symbol.value);\n        if (value.replace) value = value.replace(/(.+)_$/, '$1\\\\_'); // split it so we can check for instances of alpha as well as alpha_b\n\n        var t_varray = String(value).split('_');\n        var greek = this.greek[t_varray[0]];\n\n        if (greek) {\n          t_varray[0] = greek;\n          value = t_varray.join('_');\n        }\n\n        var symbol = this.symbols[t_varray[0]];\n\n        if (symbol) {\n          t_varray[0] = symbol;\n          value = t_varray.join('_');\n        }\n\n        v[index] = value;\n      } else if (group === FN || previousGroup === FN) {\n        var name,\n            input = [],\n            fname = symbol.fname; // collect the arguments\n\n        for (var i = 0; i < symbol.args.length; i++) {\n          var arg = symbol.args[i],\n              item;\n          if (typeof arg === 'string') item = arg;else {\n            item = this.latex(arg, option);\n          }\n          input.push(item);\n        }\n\n        if (fname === SQRT) {\n          v[index] = '\\\\sqrt' + this.braces(input.join(','));\n        } else if (fname === ABS) {\n          v[index] = this.brackets(input.join(','), 'abs');\n        } else if (fname === PARENTHESIS) {\n          v[index] = this.brackets(input.join(','), 'parens');\n        } else if (fname === 'limit') {\n          v[index] = ' \\\\lim\\\\limits_{' + input[1] + ' \\\\to ' + input[2] + '} ' + input[0];\n        } else if (fname === 'integrate') {\n          v[index] = '\\\\int' + this.braces(input[0]) + this.braces('d' + input[1]);\n        } else if (fname === 'defint') {\n          v[index] = '\\\\int\\\\limits_' + this.braces(input[1]) + '^' + this.braces(input[2]) + ' ' + input[0] + ' d' + input[3];\n        } else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\n          var arg = symbol.args[0];\n\n          if (arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\n            input[0] = this.brackets(input[0]);\n          }\n\n          v[index] = input[0] + (fname === FACTORIAL ? '!' : '!!');\n        } else if (fname === 'floor') {\n          v[index] = '\\\\left \\\\lfloor' + this.braces(input[0]) + '\\\\right \\\\rfloor';\n        } else if (fname === 'ceil') {\n          v[index] = '\\\\left \\\\lceil' + this.braces(input[0]) + '\\\\right \\\\rceil';\n        } // capture log(a, b)\n        else if (fname === Settings.LOG && input.length > 1) {\n          v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(input[1]) + this.brackets(input[0]);\n        } // capture log(a, b)\n        else if (fname === Settings.LOG10) {\n          v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(10) + this.brackets(input[0]);\n        } else if (fname === 'sum') {\n          var a = input[0],\n              b = input[1],\n              c = input[2],\n              d = input[3];\n          v[index] = '\\\\sum\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n        } else if (fname === 'product') {\n          var a = input[0],\n              b = input[1],\n              c = input[2],\n              d = input[3];\n          v[index] = '\\\\prod\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n        } else if (fname === 'nthroot') {\n          v[index] = '\\\\sqrt[' + input[1] + ']' + this.braces(input[0]);\n        } else if (fname === 'mod') {\n          v[index] = input[0] + ' \\\\bmod ' + input[1];\n        } else if (fname === 'realpart') {\n          v[index] = '\\\\operatorname{Re}' + this.brackets(input[0]);\n        } else if (fname === 'imagpart') {\n          v[index] = '\\\\operatorname{Im}' + this.brackets(input[0]);\n        } else {\n          var name = fname !== '' ? '\\\\mathrm' + this.braces(fname.replace(/_/g, '\\\\_')) : '';\n          if (symbol.isConversion) v[index] = name + this.brackets(input.join(''), 'parens');else v[index] = name + this.brackets(input.join(','), 'parens');\n        }\n      } else if (symbol.isComposite()) {\n        var collected = symbol.collectSymbols().sort(group === CP || previousGroup === CP ? function (a, b) {\n          return b.group - a.group;\n        } : function (a, b) {\n          var x = isSymbol(a.power) ? -1 : a.power;\n          var y = isSymbol(b.power) ? -1 : b.power;\n          return y - x;\n        }),\n            symbols = [],\n            l = collected.length;\n\n        for (var i = 0; i < l; i++) {\n          symbols.push(LaTeX.latex(collected[i], option));\n        }\n\n        var value = symbols.join('+');\n        v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\n      } else if (group === CB || previousGroup === EX || previousGroup === CB) {\n        if (group === CB) symbol.distributeExponent(); // This almost feels a little like cheating but I need to know if I should be wrapping the symbol\n        // in brackets or not. We'll do this by checking the value of the numerator and then comparing it\n        // to whether the symbol value is \"simple\" or not.\n\n        var denominator = [],\n            numerator = []; // Generate a profile\n\n        var den_map = [],\n            num_map = [],\n            num_c = 0,\n            den_c = 0;\n\n        var setBrackets = function setBrackets(container, map, counter) {\n          if (counter > 1 && map.length > 0) {\n            var l = map.length;\n\n            for (var i = 0; i < l; i++) {\n              var idx = map[i],\n                  item = container[idx];\n\n              if (!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\n                container[idx] = LaTeX.brackets(item, 'parens');\n              }\n            }\n          }\n\n          return container;\n        }; // Generate latex for each of them\n\n\n        symbol.each(function (x) {\n          var isDenom = isNegative(x.power),\n              laTex;\n\n          if (isDenom) {\n            laTex = LaTeX.latex(x.invert(), option);\n            den_c++;\n\n            if (x.isComposite()) {\n              if (symbol.multiplier.den != 1 && Math.abs(x.power) == 1) laTex = LaTeX.brackets(laTex, 'parens');\n              den_map.push(denominator.length); // make a note of where the composite was found\n            }\n\n            denominator.push(laTex);\n          } else {\n            laTex = LaTeX.latex(x, option);\n            num_c++;\n\n            if (x.isComposite()) {\n              if (symbol.multiplier.num != 1 && Math.abs(x.power) == 1) laTex = LaTeX.brackets(laTex, 'parens');\n              num_map.push(numerator.length); // make a note of where the composite was found\n            }\n\n            numerator.push(laTex);\n          }\n        }); // Apply brackets\n\n        setBrackets(numerator, num_map, num_c);\n        v[0] = numerator.join(this.dot); // collapse the numerator into one string\n\n        setBrackets(denominator, den_map, den_c);\n        v[1] = denominator.join(this.dot);\n      }\n\n      return v;\n    },\n    set: function set(m, v, p, combine_power) {\n      var isBracketed = function isBracketed(v) {\n        return /^\\\\left\\(.+\\\\right\\)$/.test(v);\n      }; // format the power if it exists\n\n\n      if (p) p = this.formatP(p); // group CB will have to be wrapped since the power applies to both it's numerator and denominator\n\n      if (combine_power) {\n        // POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\n        // the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\n        // of a case where this isn't true\n        var tp = p[0];\n        p[0] = ''; // temporarily make p blank\n      } // merge v and p. Not that v MUST be first since the order matters\n\n\n      v = this.merge(v, p);\n      var mn = m[0],\n          md = m[1],\n          vn = v[0],\n          vd = v[1]; // filters\n      // if the top has a variable but the numerator is one drop it\n\n      if (vn && Number(mn) === 1) mn = ''; // if denominator is 1 drop it always\n\n      if (Number(md) === 1) md = ''; // prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\n\n      var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : ''); // prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\n\n      var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : ''); // format the power if it exists\n      // make it a fraction if both top and bottom exists\n\n      if (top && bottom) {\n        var frac = this.frac(top, bottom);\n        if (combine_power && tp) frac = this.brackets(frac) + tp;\n        return frac;\n      } // otherwise only the top exists so return that\n      else return top;\n    },\n    merge: function merge(a, b) {\n      var r = [];\n\n      for (var i = 0; i < 2; i++) {\n        r[i] = a[i] + b[i];\n      }\n\n      return r;\n    },\n    // joins together two strings if both exist\n    join: function join(n, d, glue) {\n      if (!n && !d) return '';\n      if (n && !d) return n;\n      if (d && !n) return d;\n      return n + glue + d;\n    },\n\n    /**\r\n     * Places subscripts in braces for proper formatting\r\n     * @param {String} v\r\n     * @returns {String}\r\n     */\n    formatSubscripts: function formatSubscripts(v) {\n      // Split it at the underscore\n      var arr = v.toString().split('_');\n      var name = ''; // Loop over all entries except the first one\n\n      while (arr.length > 1) {\n        // Wrap all in braces except for the last one\n        if (arr.length > 0) {\n          name = '_' + this.braces(arr.pop() + name);\n        }\n      }\n\n      return arr[0] + name;\n    },\n    formatP: function formatP(p_array) {\n      for (var i = 0; i < 2; i++) {\n        var p = p_array[i];\n        if (p) p_array[i] = '^' + this.braces(p);\n      }\n\n      return p_array;\n    },\n\n    /**\r\n     * formats the fractions accordingly.\r\n     * @param {Frac} f\r\n     * @param {bool} is_pow\r\n     */\n    formatFrac: function formatFrac(f, is_pow) {\n      var n = f.num.toString(),\n          d = f.den.toString(); // no need to have x^1\n\n      if (is_pow && n === '1' && d === '1') return ''; // no need to have x/1\n\n      if (d === '1') return n;\n      return this.frac(n, d);\n    },\n    frac: function frac(n, d) {\n      return '\\\\frac' + this.braces(n) + this.braces(d);\n    },\n    braces: function braces(e) {\n      return '{' + e + '}';\n    },\n    brackets: function brackets(e, typ) {\n      typ = typ || 'parens';\n      var bracketTypes = {\n        parens: ['(', ')'],\n        square: ['[', ']'],\n        brace: ['{', '}'],\n        abs: ['|', '|'],\n        angle: ['\\\\langle', '\\\\rangle']\n      };\n      var bracket = bracketTypes[typ];\n      return '\\\\left' + bracket[0] + e + '\\\\right' + bracket[1];\n    },\n\n    /**\r\n     * Removes extreneous tokens\r\n     * @param {Tokens[]} tokens\r\n     * @returns {Tokens[]}\r\n     */\n    filterTokens: function filterTokens(tokens) {\n      var filtered = []; // Copy over the type of the scope\n\n      if (isArray(tokens)) {\n        filtered.type = tokens.type;\n      } // the items that need to be disposed\n\n\n      var d = ['\\\\', 'left', 'right', 'big', 'Big', 'large', 'Large'];\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n        var next_token = tokens[i + 1];\n\n        if (token.value === '\\\\' && next_token.value === '\\\\') {\n          filtered.push(token);\n        } else if (isArray(token)) {\n          filtered.push(LaTeX.filterTokens(token));\n        } else if (d.indexOf(token.value) === -1) {\n          filtered.push(token);\n        }\n      }\n\n      return filtered;\n    },\n\n    /*\r\n     * Parses tokens from LaTeX string. Does not do any error checking\r\n     * @param {Tokens[]} rpn\r\n     * @returns {String}\r\n     */\n    parse: function parse(raw_tokens) {\n      var i, l;\n      var retval = '';\n      var tokens = this.filterTokens(raw_tokens);\n      var replace = {\n        'cdot': '',\n        'times': '',\n        'infty': 'Infinity'\n      }; // get the next token\n\n      var next = function next(n) {\n        return tokens[typeof n === 'undefined' ? ++i : i += n];\n      };\n\n      var parse_next = function parse_next() {\n        return LaTeX.parse(next());\n      };\n\n      var get = function get(token) {\n        if (token in replace) {\n          return replace[token];\n        } // A quirk with implicit multiplication forces us to check for *\n\n\n        if (token === '*' && tokens[i + 1].value === '&') {\n          next(2); // skip this and the &\n\n          return ',';\n        }\n\n        if (token === '&') {\n          next();\n          return ','; // Skip the *\n        } // If it's the end of a row, return the row separator\n\n\n        if (token === '\\\\') {\n          return '],[';\n        }\n\n        return token;\n      }; // start parsing the tokens\n\n\n      for (i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i]; // fractions\n\n        if (token.value === 'frac') {\n          // parse and wrap it in brackets\n          var n = parse_next();\n          var d = parse_next();\n          retval += n + '/' + d;\n        } else if (token.value in LaTeX.symbols) {\n          if (token.value === SQRT && tokens[i + 1].type === 'vector' && tokens[i + 2].type === 'Set') {\n            var base = parse_next();\n            var expr = parse_next();\n            retval += expr + '^' + inBrackets('1/' + base);\n          } else {\n            retval += token.value + parse_next();\n          }\n        } else if (token.value === 'int') {\n          var f = parse_next(); // skip the comma\n\n          i++; // get the variable of integration\n\n          var dx = next().value;\n          dx = get(dx.substring(1, dx.length));\n          retval += 'integrate' + inBrackets(f + ',' + dx);\n        } else if (token.value === 'int_') {\n          var l = parse_next(); // lower\n\n          i++; // skip the ^\n\n          var u = next().value; // upper\n          // if it is in brackets\n\n          if (u === undefined) {\n            i--;\n            var u = parse_next();\n          }\n\n          var f = parse_next(); // function\n          // get the variable of integration\n\n          var dx = next().value; // skip the comma\n\n          if (dx === ',') {\n            var dx = next().value;\n          } // if 'd', skip\n\n\n          if (dx === 'differentialD') {\n            // skip the *\n            i++;\n            var dx = next().value;\n          }\n\n          if (dx === 'mathrm') {\n            // skip the mathrm{d}\n            i++;\n            var dx = next().value;\n          }\n\n          retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\n        } else if (token.value && token.value.startsWith('int_')) {\n          // var l = parse_next(); // lower\n          var l = token.value.replace('int_', '');\n          console.log('uppernow');\n          i++; // skip the ^\n\n          var u = next().value; // upper\n          // if it is in brackets\n\n          if (u === undefined) {\n            i--;\n            var u = parse_next();\n          }\n\n          var f = parse_next(); // function\n          // get the variable of integration\n\n          var dx = next().value; // skip the comma\n\n          if (dx === ',') {\n            var dx = next().value;\n          } // if 'd', skip\n\n\n          if (dx === 'differentialD') {\n            // skip the *\n            i++;\n            var dx = next().value;\n          }\n\n          if (dx === 'mathrm') {\n            // skip the mathrm{d}\n            i++;\n            var dx = next().value;\n          }\n\n          retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\n        } else if (token.value === 'mathrm') {\n          var f = tokens[++i][0].value;\n          retval += f + parse_next();\n        } // sum and product\n        else if (token.value === 'sum_' || token.value === 'prod_') {\n          var fn = token.value === 'sum_' ? 'sum' : 'product';\n          var nxt = next();\n          i++; // skip the caret\n\n          var end = parse_next();\n          var f = parse_next();\n          retval += fn + inBrackets([f, get(nxt[0]), get(nxt[2]), get(end)].join(','));\n        } else if (token.value === 'lim_') {\n          var nxt = next();\n          retval += 'limit' + inBrackets([parse_next(), get(nxt[0]), get(nxt[2])].join(','));\n        } else if (token.value === 'begin') {\n          var nxt = next();\n\n          if (Array.isArray(nxt)) {\n            var v = nxt[0].value;\n\n            if (v === 'matrix') {\n              // Start a matrix\n              retval += 'matrix([';\n            }\n          }\n        } else if (token.value === 'end') {\n          var nxt = next();\n\n          if (Array.isArray(nxt)) {\n            var v = nxt[0].value;\n\n            if (v === 'matrix') {\n              // End a matrix\n              retval += '])';\n            }\n          }\n        } else {\n          if (Array.isArray(token)) {\n            retval += get(LaTeX.parse(token));\n          } else {\n            retval += get(token.value.toString());\n          }\n        }\n      }\n\n      return inBrackets(retval);\n    }\n  }; //Vector =======================================================================\n\n  function Vector(v) {\n    if (isVector(v)) this.elements = v.items.slice(0);else if (isArray(v)) this.elements = v.slice(0);else this.elements = [].slice.call(arguments);\n  }\n  /*\r\n   * Generates a pre-filled array\r\n   * @param {type} n\r\n   * @param {type} val\r\n   * @returns {unresolved}\r\n   */\n\n\n  Vector.arrayPrefill = function (n, val) {\n    var a = [];\n    val = val || 0;\n\n    for (var i = 0; i < n; i++) {\n      a[i] = val;\n    }\n\n    return a;\n  };\n  /**\r\n   * Generate a vector from and array\r\n   * @param {type} a\r\n   * @returns {unresolved}\r\n   */\n\n\n  Vector.fromArray = function (a) {\n    var v = new Vector();\n    v.elements = a;\n    return v;\n  };\n  /**\r\n   * Convert a Set to a Vector\r\n   * @param {Set} set\r\n   * @returns {Vector}\r\n   */\n\n\n  Vector.fromSet = function (set) {\n    return Vector.fromArray(set.elements);\n  }; //Ported from Sylvester.js\n\n\n  Vector.prototype = {\n    custom: true,\n    // Returns element i of the vector\n    e: function e(i) {\n      return i < 1 || i > this.elements.length ? null : this.elements[i - 1];\n    },\n    set: function set(i, val) {\n      if (!isSymbol(val)) val = new Symbol(val);\n      this.elements[i] = val;\n    },\n    // Returns the number of elements the vector has\n    dimensions: function dimensions() {\n      return this.elements.length;\n    },\n    // Returns the modulus ('length') of the vector\n    modulus: function modulus() {\n      return block('SAFE', function () {\n        return _.pow(this.dot(this.clone()), new Symbol(0.5));\n      }, undefined, this);\n    },\n    // Returns true iff the vector is equal to the argument\n    eql: function eql(vector) {\n      var n = this.elements.length;\n      var V = vector.elements || vector;\n\n      if (n !== V.length) {\n        return false;\n      }\n\n      do {\n        if (Math.abs(_.subtract(this.elements[n - 1], V[n - 1]).valueOf()) > PRECISION) {\n          return false;\n        }\n      } while (--n);\n\n      return true;\n    },\n    // Returns a clone of the vector\n    clone: function clone() {\n      var V = new Vector(),\n          l = this.elements.length;\n\n      for (var i = 0; i < l; i++) {\n        //Rule: all items within the vector must have a clone method.\n        V.elements.push(this.elements[i].clone());\n      }\n\n      if (this.getter) {\n        V.getter = this.getter.clone();\n      }\n\n      return V;\n    },\n    // Maps the vector to another vector according to the given function\n    map: function map(fn) {\n      var elements = [];\n      this.each(function (x, i) {\n        elements.push(fn(x, i));\n      });\n      return new Vector(elements);\n    },\n    // Calls the iterator for each element of the vector in turn\n    each: function each(fn) {\n      var n = this.elements.length,\n          k = n,\n          i;\n\n      do {\n        i = k - n;\n        fn(this.elements[i], i + 1);\n      } while (--n);\n    },\n    // Returns a new vector created by normalizing the receiver\n    toUnitVector: function toUnitVector() {\n      return block('SAFE', function () {\n        var r = this.modulus();\n\n        if (r.valueOf() === 0) {\n          return this.clone();\n        }\n\n        return this.map(function (x) {\n          return _.divide(x, r);\n        });\n      }, undefined, this);\n    },\n    // Returns the angle between the vector and the argument (also a vector)\n    angleFrom: function angleFrom(vector) {\n      return block('SAFE', function () {\n        var V = vector.elements || vector;\n        var n = this.elements.length;\n\n        if (n !== V.length) {\n          return null;\n        }\n\n        var dot = new Symbol(0),\n            mod1 = new Symbol(0),\n            mod2 = new Symbol(0); // Work things out in parallel to save time\n\n        this.each(function (x, i) {\n          dot = _.add(dot, _.multiply(x, V[i - 1]));\n          mod1 = _.add(mod1, _.multiply(x, x)); // will not conflict in safe block\n\n          mod2 = _.add(mod2, _.multiply(V[i - 1], V[i - 1])); // will not conflict in safe block\n        });\n        mod1 = _.pow(mod1, new Symbol(0.5));\n        mod2 = _.pow(mod2, new Symbol(0.5));\n\n        var product = _.multiply(mod1, mod2);\n\n        if (product.valueOf() === 0) {\n          return null;\n        }\n\n        var theta = _.divide(dot, product);\n\n        var theta_val = theta.valueOf();\n\n        if (theta_val < -1) {\n          theta = -1;\n        }\n\n        if (theta_val > 1) {\n          theta = 1;\n        }\n\n        return new Symbol(Math.acos(theta));\n      }, undefined, this);\n    },\n    // Returns true iff the vector is parallel to the argument\n    isParallelTo: function isParallelTo(vector) {\n      var angle = this.angleFrom(vector).valueOf();\n      return angle === null ? null : angle <= PRECISION;\n    },\n    // Returns true iff the vector is antiparallel to the argument\n    isAntiparallelTo: function isAntiparallelTo(vector) {\n      var angle = this.angleFrom(vector).valueOf();\n      return angle === null ? null : Math.abs(angle - Math.PI) <= PRECISION;\n    },\n    // Returns true iff the vector is perpendicular to the argument\n    isPerpendicularTo: function isPerpendicularTo(vector) {\n      var dot = this.dot(vector);\n      return dot === null ? null : Math.abs(dot) <= PRECISION;\n    },\n    // Returns the result of adding the argument to the vector\n    add: function add(vector) {\n      return block('SAFE', function () {\n        var V = vector.elements || vector;\n\n        if (this.elements.length !== V.length) {\n          return null;\n        }\n\n        return this.map(function (x, i) {\n          return _.add(x, V[i - 1]);\n        });\n      }, undefined, this);\n    },\n    // Returns the result of subtracting the argument from the vector\n    subtract: function subtract(vector) {\n      return block('SAFE', function () {\n        var V = vector.elements || vector;\n\n        if (this.elements.length !== V.length) {\n          return null;\n        }\n\n        return this.map(function (x, i) {\n          return _.subtract(x, V[i - 1]);\n        });\n      }, undefined, this);\n    },\n    // Returns the result of multiplying the elements of the vector by the argument\n    multiply: function multiply(k) {\n      return this.map(function (x) {\n        return x.clone() * k.clone();\n      });\n    },\n    x: function x(k) {\n      return this.multiply(k);\n    },\n    // Returns the scalar product of the vector with the argument\n    // Both vectors must have equal dimensionality\n    dot: function dot(vector) {\n      return block('SAFE', function () {\n        var V = vector.elements || vector;\n        var product = new Symbol(0),\n            n = this.elements.length;\n\n        if (n !== V.length) {\n          return null;\n        }\n\n        do {\n          product = _.add(product, _.multiply(this.elements[n - 1], V[n - 1]));\n        } while (--n);\n\n        return product;\n      }, undefined, this);\n    },\n    // Returns the vector product of the vector with the argument\n    // Both vectors must have dimensionality 3\n    cross: function cross(vector) {\n      var B = vector.elements || vector;\n\n      if (this.elements.length !== 3 || B.length !== 3) {\n        return null;\n      }\n\n      var A = this.elements;\n      return block('SAFE', function () {\n        return new Vector([_.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])), _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])), _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))]);\n      }, undefined, this);\n    },\n    // Returns the (absolute) largest element of the vector\n    max: function max() {\n      var m = 0,\n          n = this.elements.length,\n          k = n,\n          i;\n\n      do {\n        i = k - n;\n\n        if (Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) {\n          m = this.elements[i];\n        }\n      } while (--n);\n\n      return m;\n    },\n    magnitude: function magnitude() {\n      var magnitude = new Symbol(0);\n      this.each(function (e) {\n        magnitude = _.add(magnitude, _.pow(e, new Symbol(2)));\n      });\n      return _.sqrt(magnitude);\n    },\n    // Returns the index of the first match found\n    indexOf: function indexOf(x) {\n      var index = null,\n          n = this.elements.length,\n          k = n,\n          i;\n\n      do {\n        i = k - n;\n\n        if (index === null && this.elements[i].valueOf() === x.valueOf()) {\n          index = i + 1;\n        }\n      } while (--n);\n\n      return index;\n    },\n    text: function text(x) {\n      return _text(this);\n    },\n    toString: function toString() {\n      return this.text();\n    },\n    latex: function latex(option) {\n      var tex = [];\n\n      for (var i = 0; i < this.elements.length; i++) {\n        tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\n      }\n\n      return '[' + tex.join(', ') + ']';\n    }\n  }; //Matrix =======================================================================\n\n  function Matrix() {\n    var m = arguments,\n        l = m.length,\n        i,\n        el = [];\n\n    if (isMatrix(m)) {\n      // if it's a matrix then make a clone\n      for (i = 0; i < l; i++) {\n        el.push(m[i].slice(0));\n      }\n    } else {\n      var row, lw, rl;\n\n      for (i = 0; i < l; i++) {\n        row = m[i];\n        if (isVector(row)) row = row.elements;\n        if (!isArray(row)) row = [row];\n        rl = row.length;\n        if (lw && lw !== rl) err('Unable to create Matrix. Row dimensions do not match!');\n        el.push(row);\n        lw = rl;\n      }\n    }\n\n    this.elements = el;\n  }\n\n  Matrix.identity = function (n) {\n    var m = new Matrix();\n\n    for (var i = 0; i < n; i++) {\n      m.elements.push([]);\n\n      for (var j = 0; j < n; j++) {\n        m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\n      }\n    }\n\n    return m;\n  };\n\n  Matrix.fromArray = function (arr) {\n    function F(args) {\n      return Matrix.apply(this, args);\n    }\n\n    F.prototype = Matrix.prototype;\n    return new F(arr);\n  };\n\n  Matrix.zeroMatrix = function (rows, cols) {\n    var m = new Matrix();\n\n    for (var i = 0; i < rows; i++) {\n      m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\n    }\n\n    return m;\n  };\n\n  Matrix.prototype = {\n    // needs be true to let the parser know not to try to cast it to a symbol\n    custom: true,\n    get: function get(row, column) {\n      if (!this.elements[row]) return undefined;\n      return this.elements[row][column];\n    },\n    map: function map(f, raw_values) {\n      var M = new Matrix();\n      this.each(function (e, i, j) {\n        M.set(i, j, f.call(M, e), raw_values);\n      });\n      return M;\n    },\n    set: function set(row, column, value, raw) {\n      if (!this.elements[row]) this.elements[row] = [];\n      this.elements[row][column] = raw ? value : isSymbol(value) ? value : new Symbol(value);\n    },\n    cols: function cols() {\n      return this.elements[0].length;\n    },\n    rows: function rows() {\n      return this.elements.length;\n    },\n    row: function row(n) {\n      if (!n || n > this.cols()) return [];\n      return this.elements[n - 1];\n    },\n    col: function col(n) {\n      var nr = this.rows(),\n          col = [];\n      if (n > this.cols() || !n) return col;\n\n      for (var i = 0; i < nr; i++) {\n        col.push(this.elements[i][n - 1]);\n      }\n\n      return col;\n    },\n    eachElement: function eachElement(fn) {\n      var nr = this.rows(),\n          nc = this.cols(),\n          i,\n          j;\n\n      for (i = 0; i < nr; i++) {\n        for (j = 0; j < nc; j++) {\n          fn.call(this, this.elements[i][j], i, j);\n        }\n      }\n    },\n    // ported from Sylvester.js\n    determinant: function determinant() {\n      if (!this.isSquare()) {\n        return null;\n      }\n\n      var M = this.toRightTriangular();\n      var det = M.elements[0][0],\n          n = M.elements.length - 1,\n          k = n,\n          i;\n\n      do {\n        i = k - n + 1;\n        det = _.multiply(det, M.elements[i][i]);\n      } while (--n);\n\n      return det;\n    },\n    isSquare: function isSquare() {\n      return this.elements.length === this.elements[0].length;\n    },\n    isSingular: function isSingular() {\n      return this.isSquare() && this.determinant() === 0;\n    },\n    augment: function augment(m) {\n      var r = this.rows(),\n          rr = m.rows();\n      if (r !== rr) err(\"Cannot augment matrix. Rows don't match.\");\n\n      for (var i = 0; i < r; i++) {\n        this.elements[i] = this.elements[i].concat(m.elements[i]);\n      }\n\n      return this;\n    },\n    clone: function clone() {\n      var r = this.rows(),\n          c = this.cols(),\n          m = new Matrix();\n\n      for (var i = 0; i < r; i++) {\n        m.elements[i] = [];\n\n        for (var j = 0; j < c; j++) {\n          var symbol = this.elements[i][j];\n          m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\n        }\n      }\n\n      return m;\n    },\n    // ported from Sylvester.js\n    invert: function invert() {\n      if (!this.isSquare()) err('Matrix is not square!');\n      return block('SAFE', function () {\n        var ni = this.elements.length,\n            ki = ni,\n            i,\n            j;\n        var imatrix = Matrix.identity(ni);\n        var M = this.augment(imatrix).toRightTriangular();\n        var np,\n            kp = M.elements[0].length,\n            p,\n            els,\n            divisor;\n        var inverse_elements = [],\n            new_element; // Matrix is non-singular so there will be no zeros on the diagonal\n        // Cycle through rows from last to first\n\n        do {\n          i = ni - 1; // First, normalise diagonal elements to 1\n\n          els = [];\n          np = kp;\n          inverse_elements[i] = [];\n          divisor = M.elements[i][i];\n\n          do {\n            p = kp - np;\n            new_element = _.divide(M.elements[i][p], divisor.clone());\n            els.push(new_element); // Shuffle of the current row of the right hand side into the results\n            // array as it will not be modified by later runs through this loop\n\n            if (p >= ki) {\n              inverse_elements[i].push(new_element);\n            }\n          } while (--np);\n\n          M.elements[i] = els; // Then, subtract this row from those above it to\n          // give the identity matrix on the left hand side\n\n          for (j = 0; j < i; j++) {\n            els = [];\n            np = kp;\n\n            do {\n              p = kp - np;\n              els.push(_.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\n            } while (--np);\n\n            M.elements[j] = els;\n          }\n        } while (--ni);\n\n        return Matrix.fromArray(inverse_elements);\n      }, undefined, this);\n    },\n    // ported from Sylvester.js\n    toRightTriangular: function toRightTriangular() {\n      return block('SAFE', function () {\n        var M = this.clone(),\n            els,\n            fel,\n            nel,\n            n = this.elements.length,\n            k = n,\n            i,\n            np,\n            kp = this.elements[0].length,\n            p;\n\n        do {\n          i = k - n;\n          fel = M.elements[i][i];\n\n          if (fel.valueOf() === 0) {\n            for (var j = i + 1; j < k; j++) {\n              nel = M.elements[j][i];\n\n              if (nel && nel.valueOf() !== 0) {\n                els = [];\n                np = kp;\n\n                do {\n                  p = kp - np;\n                  els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\n                } while (--np);\n\n                M.elements[i] = els;\n                break;\n              }\n            }\n          }\n\n          var fel = M.elements[i][i];\n\n          if (fel.valueOf() !== 0) {\n            for (j = i + 1; j < k; j++) {\n              var multiplier = _.divide(M.elements[j][i].clone(), M.elements[i][i].clone());\n\n              els = [];\n              np = kp;\n\n              do {\n                p = kp - np; // Elements with column numbers up to an including the number\n                // of the row that we're subtracting can safely be set straight to\n                // zero, since that's the point of this routine and it avoids having\n                // to loop over and correct rounding errors later\n\n                els.push(p <= i ? new Symbol(0) : _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\n              } while (--np);\n\n              M.elements[j] = els;\n            }\n          }\n        } while (--n);\n\n        return M;\n      }, undefined, this);\n    },\n    transpose: function transpose() {\n      var rows = this.elements.length,\n          cols = this.elements[0].length;\n      var M = new Matrix(),\n          ni = cols,\n          i,\n          nj,\n          j;\n\n      do {\n        i = cols - ni;\n        M.elements[i] = [];\n        nj = rows;\n\n        do {\n          j = rows - nj;\n          M.elements[i][j] = this.elements[j][i].clone();\n        } while (--nj);\n      } while (--ni);\n\n      return M;\n    },\n    // Returns true if the matrix can multiply the argument from the left\n    canMultiplyFromLeft: function canMultiplyFromLeft(matrix) {\n      var l = isMatrix(matrix) ? matrix.elements.length : matrix.length; // this.columns should equal matrix.rows\n\n      return this.elements[0].length === l;\n    },\n    sameSize: function sameSize(matrix) {\n      return this.rows() === matrix.rows() && this.cols() === matrix.cols();\n    },\n    multiply: function multiply(matrix) {\n      return block('SAFE', function () {\n        var M = matrix.elements || matrix;\n\n        if (!this.canMultiplyFromLeft(M)) {\n          if (this.sameSize(matrix)) {\n            var MM = new Matrix();\n            var rows = this.rows();\n\n            for (var i = 0; i < rows; i++) {\n              var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\n\n              MM.elements[i] = e.elements;\n            }\n\n            return MM;\n          }\n\n          return null;\n        }\n\n        var ni = this.elements.length,\n            ki = ni,\n            i,\n            nj,\n            kj = M[0].length,\n            j;\n        var cols = this.elements[0].length,\n            elements = [],\n            sum,\n            nc,\n            c;\n\n        do {\n          i = ki - ni;\n          elements[i] = [];\n          nj = kj;\n\n          do {\n            j = kj - nj;\n            sum = new Symbol(0);\n            nc = cols;\n\n            do {\n              c = cols - nc;\n              sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j]));\n            } while (--nc);\n\n            elements[i][j] = sum;\n          } while (--nj);\n        } while (--ni);\n\n        return Matrix.fromArray(elements);\n      }, undefined, this);\n    },\n    add: function add(matrix, callback) {\n      var M = new Matrix();\n\n      if (this.sameSize(matrix)) {\n        this.eachElement(function (e, i, j) {\n          var result = _.add(e.clone(), matrix.elements[i][j].clone());\n\n          if (callback) {\n            result = callback.call(M, result, e, matrix.elements[i][j]);\n          }\n\n          M.set(i, j, result);\n        });\n      }\n\n      return M;\n    },\n    subtract: function subtract(matrix, callback) {\n      var M = new Matrix();\n\n      if (this.sameSize(matrix)) {\n        this.eachElement(function (e, i, j) {\n          var result = _.subtract(e.clone(), matrix.elements[i][j].clone());\n\n          if (callback) {\n            result = callback.call(M, result, e, matrix.elements[i][j]);\n          }\n\n          M.set(i, j, result);\n        });\n      }\n\n      return M;\n    },\n    negate: function negate() {\n      this.each(function (e) {\n        return e.negate();\n      });\n      return this;\n    },\n    toVector: function toVector() {\n      if (this.rows() === 1 || this.cols() === 1) {\n        var v = new Vector();\n        v.elements = this.elements;\n        return v;\n      }\n\n      return this;\n    },\n    toString: function toString(newline, to_decimal) {\n      var l = this.rows(),\n          s = [];\n      newline = newline === undefined ? '\\n' : newline;\n\n      for (var i = 0; i < l; i++) {\n        s.push('[' + this.elements[i].map(function (x) {\n          var v = to_decimal ? x.multiplier.toDecimal() : x.toString();\n          return x !== undefined ? v : '';\n        }).join(',') + ']');\n      }\n\n      return 'matrix' + inBrackets(s.join(','));\n    },\n    text: function text() {\n      return 'matrix(' + this.elements.toString('') + ')';\n    },\n    latex: function latex(option) {\n      var cols = this.cols(),\n          elements = this.elements;\n      return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function () {\n        var tex = [];\n\n        for (var row in elements) {\n          var row_tex = [];\n\n          for (var i = 0; i < cols; i++) {\n            row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\n          }\n\n          tex.push(row_tex.join(' & '));\n        }\n\n        return tex.join(' \\\\cr ');\n      });\n    }\n  }; // aliases\n\n  Matrix.prototype.each = Matrix.prototype.eachElement;\n\n  function Set(set) {\n    this.elements = []; // if the first object isn't an array, convert it to one.\n\n    if (!isVector(set)) set = Vector.fromArray(arguments);\n\n    if (set) {\n      var elements = set.elements;\n\n      for (var i = 0, l = elements.length; i < l; i++) {\n        this.add(elements[i]);\n      }\n    }\n  }\n\n  Set.fromArray = function (arr) {\n    function F(args) {\n      return Set.apply(this, args);\n    }\n\n    F.prototype = Set.prototype;\n    return new F(arr);\n  };\n\n  Set.prototype = {\n    add: function add(x) {\n      if (!this.contains(x)) this.elements.push(x.clone());\n    },\n    contains: function contains(x) {\n      for (var i = 0; i < this.elements.length; i++) {\n        var e = this.elements[i];\n        if (x.equals(e)) return true;\n      }\n\n      return false;\n    },\n    each: function each(f) {\n      var elements = this.elements;\n      var set = new Set();\n\n      for (var i = 0, l = elements.length; i < l; i++) {\n        var e = elements[i];\n        f.call(this, e, set, i);\n      }\n\n      return set;\n    },\n    clone: function clone() {\n      var set = new Set();\n      this.each(function (e) {\n        set.add(e.clone());\n      });\n      return set;\n    },\n    union: function union(set) {\n      var _union = this.clone();\n\n      set.each(function (e) {\n        _union.add(e);\n      });\n      return _union;\n    },\n    difference: function difference(set) {\n      var diff = this.clone();\n      set.each(function (e) {\n        diff.remove(e);\n      });\n      return diff;\n    },\n    remove: function remove(element) {\n      for (var i = 0, l = this.elements.length; i < l; i++) {\n        var e = this.elements[i];\n\n        if (e.equals(element)) {\n          _remove(this.elements, i);\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n    intersection: function intersection(set) {\n      var _intersection = new Set();\n\n      var A = this;\n      set.each(function (e) {\n        if (A.contains(e)) {\n          _intersection.add(e);\n        }\n\n        ;\n      });\n      return _intersection;\n    },\n    intersects: function intersects(set) {\n      return this.intersection(set).elements.length > 0;\n    },\n    is_subset: function is_subset(set) {\n      var elements = set.elements;\n\n      for (var i = 0, l = elements.length; i < l; i++) {\n        if (!this.contains(elements[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    toString: function toString() {\n      return '{' + this.elements.join(',') + '}';\n    }\n  }; //build ========================================================================\n\n  var Build = {\n    dependencies: {\n      _rename: {\n        'Math2.factorial': 'factorial'\n      },\n      factorial: {\n        'Math2.gamma': Math2.gamma\n      },\n      gamma_incomplete: {\n        'Math2.factorial': Math2.factorial\n      },\n      Li: {\n        'Math2.Ei': Math2.Ei,\n        'Math2.bigLog': Math2.bigLog,\n        'Frac': Frac\n      },\n      Ci: {\n        'Math2.factorial': Math2.factorial\n      },\n      Ei: {\n        'Math2.factorial': Math2.factorial\n      },\n      Si: {\n        'Math2.factorial': Math2.factorial\n      },\n      Shi: {\n        'Math2.factorial': Math2.factorial\n      },\n      Chi: {\n        'isInt': isInt,\n        'nround': nround,\n        'Math2.num_integrate': Math2.num_integrate\n      },\n      factor: {\n        'Math2.ifactor': Math2.ifactor,\n        'Symbol': Symbol\n      },\n      num_integrate: {\n        'Math2.simpson': Math2.simpson,\n        'nround': nround\n      },\n      fib: {\n        'even': even\n      }\n    },\n\n    /* Some functions need to be made numeric safe. Build checks if there's a\r\n     * reformat option and calls that instead when compiling the function string.\r\n     */\n    reformat: {\n      // this simply extends the build function\n      diff: function diff(symbol, deps) {\n        var v = symbol.args[1].toString();\n        var f = 'var f = ' + Build.build(symbol.args[0].toString(), [v]) + ';';\n        deps[1] += 'var diff = ' + Math2.diff.toString() + ';';\n        deps[1] += f;\n        return ['diff(f)(' + v + ')', deps];\n      }\n    },\n    getProperName: function getProperName(f) {\n      var map = {\n        continued_fraction: 'continuedFraction'\n      };\n      return map[f] || f;\n    },\n    // assumes that dependences are at max 2 levels\n    compileDependencies: function compileDependencies(f, deps) {\n      // grab the predefined dependiences\n      var dependencies = Build.dependencies[f]; // the dependency string\n\n      var dep_string = deps && deps[1] ? deps[1] : ''; // the functions to be replaced\n\n      var replacements = deps && deps[0] ? deps[0] : {}; // loop through them and add them to the list\n\n      for (var x in dependencies) {\n        if (typeof dependencies[x] === 'object') continue; // skip object\n\n        var components = x.split('.'); //Math.f becomes f\n        // if the function isn't part of an object then reference the function itself\n\n        dep_string += 'var ' + (components.length > 1 ? components[1] : components[0]) + '=' + dependencies[x] + ';';\n        replacements[x] = components.pop();\n      }\n\n      return [replacements, dep_string];\n    },\n    getArgsDeps: function getArgsDeps(symbol, dependencies) {\n      var args = symbol.args;\n\n      for (var i = 0; i < args.length; i++) {\n        symbol.args[i].each(function (x) {\n          if (x.group === FN) dependencies = Build.compileDependencies(x.fname, dependencies);\n        });\n      }\n\n      return dependencies;\n    },\n    build: function build(symbol, arg_array) {\n      symbol = block('PARSE2NUMBER', function () {\n        return _.parse(symbol);\n      }, true);\n\n      var args = _variables(symbol);\n\n      var supplements = [];\n      var dependencies = [];\n\n      var ftext = function ftext(symbol, xports) {\n        //Fix for #545 - Parentheses confuse build.\n        if (symbol.fname === '') {\n          symbol = Symbol.unwrapPARENS(symbol);\n        }\n\n        xports = xports || [];\n        var c = [],\n            group = symbol.group,\n            prefix = '';\n\n        var ftext_complex = function ftext_complex(group) {\n          var d = group === CB ? '*' : '+',\n              cc = [];\n\n          for (var x in symbol.symbols) {\n            var sym = symbol.symbols[x],\n                ft = ftext(sym, xports)[0]; // wrap it in brackets if it's group PL or CP\n\n            if (sym.isComposite()) ft = inBrackets(ft);\n            cc.push(ft);\n          }\n\n          var retval = cc.join(d);\n          retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\n          return retval;\n        },\n            ftext_function = function ftext_function(bn) {\n          var retval;\n          if (bn in Math) retval = 'Math.' + bn;else {\n            bn = Build.getProperName(bn);\n\n            if (supplements.indexOf(bn) === -1) {\n              // make sure you're not adding the function twice\n              //Math2 functions aren't part of the standard javascript\n              //Math library and must be exported.\n              xports.push('var ' + bn + ' = ' + Math2[bn].toString() + '; ');\n              supplements.push(bn);\n            }\n\n            retval = bn;\n          }\n          retval = retval + inBrackets(symbol.args.map(function (x) {\n            return ftext(x, xports)[0];\n          }).join(','));\n          return retval;\n        }; // the multiplier\n\n\n        if (group === N) c.push(symbol.multiplier.toDecimal());else if (symbol.multiplier.equals(-1)) prefix = '-';else if (!symbol.multiplier.equals(1)) c.push(symbol.multiplier.toDecimal()); // the value\n\n        var value;\n        if (group === S || group === P) value = symbol.value;else if (group === FN) {\n          dependencies = Build.compileDependencies(symbol.fname, dependencies);\n          dependencies = Build.getArgsDeps(symbol, dependencies);\n\n          if (Build.reformat[symbol.fname]) {\n            var components = Build.reformat[symbol.fname](symbol, dependencies);\n            dependencies = components[1];\n            value = components[0];\n          } else {\n            value = ftext_function(symbol.fname);\n          }\n        } else if (group === EX) {\n          var pg = symbol.previousGroup;\n          if (pg === N || pg === S) value = symbol.value;else if (pg === FN) {\n            value = ftext_function(symbol.fname);\n            dependencies = Build.compileDependencies(symbol.fname, dependencies);\n            dependencies = Build.getArgsDeps(symbol, dependencies);\n          } else value = ftext_complex(symbol.previousGroup);\n        } else {\n          value = ftext_complex(symbol.group);\n        }\n\n        if (symbol.group !== N && !symbol.power.equals(1)) {\n          var pow = ftext(_.parse(symbol.power));\n          xports.push(pow[1]);\n          value = 'Math.pow' + inBrackets(value + ',' + pow[0]);\n        }\n\n        if (value) c.push(prefix + value);\n        return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\n      };\n\n      if (arg_array) {\n        // Fix for issue #546\n        // Disable argument checking since it's a bit presumptuous.\n        // Consider f(x) = 5; If I explicitely pass in an argument array contain x \n        // this check will fail and complain since the function doesn't contain x.\n\n        /*\r\n         for (var i = 0; i < args.length; i++) {\r\n         var arg = args[i];\r\n         if (arg_array.indexOf(arg) === -1)\r\n         err(arg + ' not found in argument array');\r\n         }\r\n         */\n        args = arg_array;\n      }\n\n      var f_array = ftext(symbol); // make all the substitutions;\n\n      for (var x in dependencies[0]) {\n        var alias = dependencies[0][x];\n        f_array[1] = f_array[1].replace(x, alias);\n        dependencies[1] = dependencies[1].replace(x, alias);\n      }\n\n      var f = new Function(args, (dependencies[1] || '') + f_array[1] + ' return ' + f_array[0] + ';');\n      return f;\n    }\n  }; //finalize =====================================================================\n\n  /* FINALIZE */\n\n  (function () {\n    reserveNames(_.CONSTANTS);\n    reserveNames(_.functions);\n\n    _.initConstants(); //bug fix for error but needs to be revisited\n\n\n    if (!_.error) _.error = err; //Store the log and log10 functions\n\n    Settings.LOG_FNS = {\n      log: _.functions['log'],\n      log10: _.functions['log10']\n    };\n  })();\n  /* END FINALIZE */\n  //Core =========================================================================\n\n\n  var Utils = {\n    allSame: allSame,\n    allNumeric: allNumeric,\n    arguments2Array: arguments2Array,\n    arrayAddSlices: arrayAddSlices,\n    arrayClone: arrayClone,\n    arrayMax: arrayMax,\n    arrayMin: arrayMin,\n    arrayEqual: arrayEqual,\n    arrayUnique: arrayUnique,\n    arrayGetVariables: arrayGetVariables,\n    arraySum: arraySum,\n    block: block,\n    build: Build.build,\n    clearU: clearU,\n    comboSort: comboSort,\n    compare: compare,\n    convertToVector: convertToVector,\n    customError: customError,\n    customType: customType,\n    decompose_fn: decompose_fn,\n    each: each,\n    evaluate: evaluate,\n    even: even,\n    evenFraction: evenFraction,\n    fillHoles: fillHoles,\n    firstObject: firstObject,\n    format: format,\n    generatePrimes: generatePrimes,\n    getCoeffs: getCoeffs,\n    getU: getU,\n    importFunctions: importFunctions,\n    inBrackets: inBrackets,\n    isArray: isArray,\n    isExpression: isExpression,\n    isFraction: _isFraction,\n    isInt: isInt,\n    isMatrix: isMatrix,\n    isNegative: isNegative,\n    isNumericSymbol: isNumericSymbol,\n    isPrime: isPrime,\n    isReserved: isReserved,\n    isSymbol: isSymbol,\n    isVariableSymbol: isVariableSymbol,\n    isVector: isVector,\n    keys: keys,\n    knownVariable: knownVariable,\n    nroots: nroots,\n    remove: _remove,\n    reserveNames: reserveNames,\n    range: range,\n    round: nround,\n    sameSign: sameSign,\n    scientificToDecimal: scientificToDecimal,\n    separate: separate,\n    stringReplace: stringReplace,\n    text: _text,\n    validateName: validateName,\n    variables: _variables,\n    warn: warn\n  }; //This contains all the parts of nerdamer and enables nerdamer's internal functions\n  //to be used.\n\n  var C = {\n    groups: Groups,\n    Symbol: Symbol,\n    Expression: Expression,\n    Frac: Frac,\n    Vector: Vector,\n    Matrix: Matrix,\n    Parser: Parser,\n    Scientific: Scientific,\n    Fraction: Fraction,\n    Math2: Math2,\n    LaTeX: LaTeX,\n    Utils: Utils,\n    PARSER: _,\n    PARENTHESIS: PARENTHESIS,\n    Settings: Settings,\n    err: err,\n    bigInt: bigInt,\n    bigDec: bigDec,\n    exceptions: exceptions\n  }; //libExports ===================================================================\n\n  /**\r\n   *\r\n   * @param {String} expression the expression to be evaluated\r\n   * @param {Object} subs the object containing the variable values\r\n   * @param {Integer} location a specific location in the equation list to\r\n   * insert the evaluated expression\r\n   * @param {String} option additional options\r\n   * @returns {Expression}\r\n   */\n\n  var libExports = function libExports(expression, subs, option, location) {\n    // Initiate the numer flag\n    var numer = false; // Is the user declaring a function?\n\n    var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\n    if (fndec) return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]); // var variable, fn, args;\n    // Convert any expression passed in to a string\n\n    if (expression instanceof Expression) expression = expression.toString(); // Convert it to an array for simplicity\n\n    if (!isArray(option)) {\n      option = typeof option === 'undefined' ? [] : [option];\n    }\n\n    option.forEach(function (o) {\n      // Turn on the numer flag if requested\n      if (o === 'numer') {\n        numer = true;\n        return;\n      } // Wrap it in a function if requested. This only holds true for\n      // functions that take a single argument which is the expression\n\n\n      var f = _.functions[option]; // If there's a function and it takes a single argument, then wrap\n      // the expression in it\n\n      if (f && f[1] === 1) {\n        expression = \"\".concat(o, \"(\").concat(expression, \")\");\n      }\n    });\n    var e = block('PARSE2NUMBER', function () {\n      return _.parse(expression, subs);\n    }, numer || Settings.PARSE2NUMBER);\n\n    if (location) {\n      EXPRESSIONS[location - 1] = e;\n    } else {\n      EXPRESSIONS.push(e);\n    }\n\n    return new Expression(e);\n  };\n  /**\r\n   * Converts expression into rpn form\r\n   * @param {String} expression\r\n   * @returns {Token[]}\r\n   */\n\n\n  libExports.rpn = function (expression) {\n    return _.tokenize(_.toRPN(expression));\n  };\n  /**\r\n   * Generates LaTeX from expression string\r\n   * @param {String} e\r\n   * @param {object} opt\r\n   * @returns {String}\r\n   */\n\n\n  libExports.convertToLaTeX = function (e, opt) {\n    return _.toTeX(e, opt);\n  };\n  /**\r\n   * Converts latex to text - Very very very basic at the moment\r\n   * @param {String} e\r\n   * @returns {String}\r\n   */\n\n\n  libExports.convertFromLaTeX = function (e) {\n    var txt = LaTeX.parse(_.tokenize(e));\n    return new Expression(_.parse(txt));\n  };\n  /**\r\n   * Get the version of nerdamer or a loaded add-on\r\n   * @param {String} add_on - The add-on being checked\r\n   * @returns {String} returns the version of nerdamer\r\n   */\n\n\n  libExports.version = function (add_on) {\n    if (add_on) {\n      try {\n        return C[add_on].version;\n      } catch (e) {\n        return \"No module named \" + add_on + \" found!\";\n      }\n    }\n\n    return version;\n  };\n  /**\r\n   * Get nerdamer generated warnings\r\n   * @returns {String[]}\r\n   */\n\n\n  libExports.getWarnings = function () {\n    return WARNINGS;\n  };\n  /**\r\n   *\r\n   * @param {String} constant The name of the constant to be set\r\n   * @param {mixed} value The value of the constant\r\n   * @returns {Object} Returns the nerdamer object\r\n   */\n\n\n  libExports.setConstant = function (constant, value) {\n    validateName(constant);\n\n    if (!isReserved(constant)) {\n      //fix for issue #127\n      if (value === 'delete' || value === '') {\n        delete _.CONSTANTS[constant];\n      } else {\n        if (isNaN(value)) throw new NerdamerTypeError('Constant must be a number!');\n        _.CONSTANTS[constant] = value;\n      }\n    }\n\n    return this;\n  };\n  /**\r\n   * Returns the value of a previously set constant\r\n   * @param {type} constant\r\n   * @returns {String}\r\n   */\n\n\n  libExports.getConstant = function (constant) {\n    return String(_.constant[constant]);\n  };\n  /**\r\n   *\r\n   * @param {String} name The name of the function\r\n   * @param {Array} params_array A list containing the parameter name of the functions\r\n   * @param {String} body The body of the function\r\n   * @returns {Boolean} returns true if succeeded and falls on fail\r\n   * @example nerdamer.setFunction('f',['x'], 'x^2+2');\r\n   */\n\n\n  libExports.setFunction = setFunction;\n  /**\r\n   *\r\n   * @returns {C} Exports the nerdamer core functions and objects\r\n   */\n\n  libExports.getCore = function () {\n    return C;\n  };\n\n  libExports.getExpression = libExports.getEquation = Expression.getExpression;\n  /**\r\n   *\r\n   * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\r\n   * @returns {String|Array}\r\n   */\n\n  libExports.reserved = function (asArray) {\n    if (asArray) {\n      return RESERVED;\n    }\n\n    return RESERVED.join(', ');\n  };\n  /**\r\n   *\r\n   * @param {Integer} equation_number the number of the equation to clear.\r\n   * If 'all' is supplied then all equations are cleared\r\n   * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\r\n   * @returns {Object} Returns the nerdamer object\r\n   */\n\n\n  libExports.clear = function (equation_number, keep_EXPRESSIONS_fixed) {\n    if (equation_number === 'all') {\n      EXPRESSIONS = [];\n    } else if (equation_number === 'last') {\n      EXPRESSIONS.pop();\n    } else if (equation_number === 'first') {\n      EXPRESSIONS.shift();\n    } else {\n      var index = !equation_number ? EXPRESSIONS.length : equation_number - 1;\n      keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : _remove(EXPRESSIONS, index);\n    }\n\n    return this;\n  };\n  /**\r\n   * Alias for nerdamer.clear('all')\r\n   */\n\n\n  libExports.flush = function () {\n    this.clear('all');\n    return this;\n  };\n  /**\r\n   *\r\n   * @param {Boolean} asObject\r\n   * @param {Boolean} asLaTeX\r\n   * @param {String|String[]} option\r\n   * @returns {Array}\r\n   */\n\n\n  libExports.expressions = function (asObject, asLaTeX, option) {\n    var result = asObject ? {} : [];\n\n    for (var i = 0; i < EXPRESSIONS.length; i++) {\n      var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : _text(EXPRESSIONS[i], option);\n      asObject ? result[i + 1] = eq : result.push(eq);\n    }\n\n    return result;\n  }; //the method for registering modules\n\n\n  libExports.register = function (obj) {\n    var core = this.getCore();\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n        if (obj) this.register(obj[i]);\n      }\n    } else if (obj && Settings.exclude.indexOf(obj.name) === -1) {\n      //make sure all the dependencies are available\n      if (obj.dependencies) {\n        for (var i = 0; i < obj.dependencies.length; i++) {\n          if (!core[obj.dependencies[i]]) throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\n        }\n      } //if no parent object is provided then the function does not have an address and cannot be called directly\n\n\n      var parent_obj = obj.parent,\n          fn = obj.build.call(core); //call constructor to get function\n\n      if (parent_obj) {\n        if (!core[parent_obj]) core[obj.parent] = {};\n        var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj]; //attach the function to the core\n\n        ref_obj[obj.name] = fn;\n      }\n\n      if (obj.visible) _.functions[obj.name] = [fn, obj.numargs]; //make the function available\n    }\n  };\n  /**\r\n   * @param {String} name variable name\r\n   * @returns {boolean} validates if the profided string is a valid variable name\r\n   */\n\n\n  libExports.validateName = validateName;\n  /**\r\n   * @param {String} varname variable name\r\n   * @returns {boolean} validates if the profided string is a valid variable name\r\n   */\n\n  libExports.validVarName = function (varname) {\n    try {\n      validateName(varname);\n      return RESERVED.indexOf(varname) === -1;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\r\n   *\r\n   * @returns {Array} Array of functions currently supported by nerdamer\r\n   */\n\n\n  libExports.supported = function () {\n    return keys(_.functions);\n  };\n  /**\r\n   *\r\n   * @returns {Number} The number equations/expressions currently loaded\r\n   */\n\n\n  libExports.numEquations = libExports.numExpressions = function () {\n    return EXPRESSIONS.length;\n  };\n  /* END EXPORTS */\n\n  /**\r\n   *\r\n   * @param {String} v variable to be set\r\n   * @param {String} val value of variable. This can be a variable expression or number\r\n   * @returns {Object} Returns the nerdamer object\r\n   */\n\n\n  libExports.setVar = function (v, val) {\n    validateName(v); //check if it's not already a constant\n\n    if (v in _.CONSTANTS) err('Cannot set value for constant ' + v);\n    if (val === 'delete' || val === '') delete VARS[v];else {\n      VARS[v] = isSymbol(val) ? val : _.parse(val);\n    }\n    return this;\n  };\n  /**\r\n   * Returns the value of a set variable\r\n   * @param {type} v\r\n   * @returns {varies}\r\n   */\n\n\n  libExports.getVar = function (v) {\n    return VARS[v];\n  };\n  /**\r\n   * Clear the variables from the VARS object\r\n   * @returns {Object} Returns the nerdamer object\r\n   */\n\n\n  libExports.clearVars = function () {\n    VARS = {};\n    return this;\n  };\n  /**\r\n   *\r\n   * @param {Function} loader\r\n   * @returns {nerdamer}\r\n   */\n\n\n  libExports.load = function (loader) {\n    loader.call(this);\n    return this;\n  };\n  /**\r\n   * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\r\n   * @param {String|String[]} option\r\n   * @returns {Object} Returns an object with the variables\r\n   */\n\n\n  libExports.getVars = function (output, option) {\n    output = output || 'text';\n    var variables = {};\n    if (output === 'object') variables = VARS;else {\n      for (var v in VARS) {\n        if (output === 'latex') {\n          variables[v] = VARS[v].latex(option);\n        } else if (output === 'text') {\n          variables[v] = VARS[v].text(option);\n        }\n      }\n    }\n    return variables;\n  };\n  /**\r\n   * Set the value of a setting\r\n   * @param {String} setting The setting to be changed\r\n   * @param {boolean} value\r\n   */\n\n\n  libExports.set = function (setting, value) {\n    //current options:\n    //PARSE2NUMBER, suppress_errors\n    if (typeof setting === 'object') for (var x in setting) {\n      libExports.set(x, setting[x]);\n    }\n    var disallowed = ['SAFE'];\n    if (disallowed.indexOf(setting) !== -1) err('Cannot modify setting: ' + setting);\n\n    if (setting === 'PRECISION') {\n      bigDec.set({\n        precision: value\n      });\n      Settings.PRECISION = value; // Avoid that nerdamer puts out garbage after 21 decimal place\n\n      if (value > 21) {\n        this.set('USE_BIG', true);\n      }\n    } else if (setting === 'USE_LN' && value === true) {\n      //set log as LN\n      Settings.LOG = 'LN'; //set log10 as log\n\n      Settings.LOG10 = 'log'; //point the functions in the right direction\n\n      _.functions['log'] = Settings.LOG_FNS.log10; //log is now log10\n      //the log10 function must be explicitly set\n\n      _.functions['log'][0] = function (x) {\n        if (x.isConstant()) return new Symbol(Math.log10(x));\n        return _.symfunction(Settings.LOG10, [x]);\n      };\n\n      _.functions['LN'] = Settings.LOG_FNS.log; //LN is now log\n      //remove log10\n\n      delete _.functions['log10'];\n    } else Settings[setting] = value;\n  };\n  /**\r\n   * Get the value of a setting\r\n   * @param {type} setting\r\n   * @returns {undefined}\r\n   */\n\n\n  libExports.get = function (setting) {\n    return Settings[setting];\n  };\n  /**\r\n   * This functions makes internal functions available externally\r\n   * @param {bool} override Override the functions when calling updateAPI if it exists\r\n   */\n\n\n  libExports.updateAPI = function (override) {\n    //Map internal functions to external ones\n    var linker = function linker(fname) {\n      return function () {\n        var args = [].slice.call(arguments);\n\n        for (var i = 0; i < args.length; i++) {\n          args[i] = _.parse(args[i]);\n        }\n\n        return new Expression(block('PARSE2NUMBER', function () {\n          return _.callfunction(fname, args);\n        }));\n      };\n    }; //perform the mapping\n\n\n    for (var x in _.functions) {\n      if (!(x in libExports) || override) libExports[x] = linker(x);\n    }\n  };\n\n  libExports.replaceFunction = function (name, fn, num_args) {\n    var existing = _.functions[name];\n    var new_num_args = typeof num_args === 'undefined' ? existing[1] : num_args;\n    _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\n  };\n\n  libExports.setOperator = function (operator, shift) {\n    _.setOperator(operator, shift);\n  };\n\n  libExports.getOperator = function (operator) {\n    return _.getOperator(operator);\n  };\n\n  libExports.aliasOperator = function (operator, withOperator) {\n    _.aliasOperator(operator, withOperator);\n  };\n\n  libExports.tree = function (expression) {\n    return _.tree(_.toRPN(_.tokenize(expression)));\n  };\n\n  libExports.htmlTree = function (expression, indent) {\n    var tree = this.tree(expression);\n    return '<div class=\"tree\">\\n' + '    <ul>\\n' + '        <li>\\n' + tree.toHTML(3, indent) + '\\n' + '        </li>\\n' + '    </ul>\\n' + '</div>';\n  };\n\n  libExports.addPeeker = function (name, f) {\n    if (_.peekers[name]) _.peekers[name].push(f);\n  };\n\n  libExports.removePeeker = function (name, f) {\n    _remove(_.peekers[name], f);\n  };\n\n  libExports.parse = function (e) {\n    return String(e).split(';').map(function (x) {\n      return _.parse(x);\n    });\n  };\n\n  libExports.updateAPI();\n  return libExports; //Done\n  //imports ======================================================================\n}({\n  //https://github.com/peterolson/BigInteger.js\n  bigInt: function () {\n    var bigInt = function (undefined) {\n      \"use strict\";\n\n      var BASE = 1e7,\n          LOG_BASE = 7,\n          MAX_INT = 9007199254740992,\n          MAX_INT_ARR = smallToArray(MAX_INT),\n          LOG_MAX_INT = Math.log(MAX_INT);\n\n      function Integer(v, radix) {\n        if (typeof v === \"undefined\") return Integer[0];\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\n        return parseValue(v);\n      }\n\n      function BigInteger(value, sign) {\n        this.value = value;\n        this.sign = sign;\n        this.isSmall = false;\n      }\n\n      BigInteger.prototype = Object.create(Integer.prototype);\n\n      function SmallInteger(value) {\n        this.value = value;\n        this.sign = value < 0;\n        this.isSmall = true;\n      }\n\n      SmallInteger.prototype = Object.create(Integer.prototype);\n\n      function isPrecise(n) {\n        return -MAX_INT < n && n < MAX_INT;\n      }\n\n      function smallToArray(n) {\n        if (n < 1e7) return [n];\n        if (n < 1e14) return [n % 1e7, Math.floor(n / 1e7)];\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\n      }\n\n      function arrayToSmall(arr) {\n        trim(arr);\n        var length = arr.length;\n\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\n          switch (length) {\n            case 0:\n              return 0;\n\n            case 1:\n              return arr[0];\n\n            case 2:\n              return arr[0] + arr[1] * BASE;\n\n            default:\n              return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\n          }\n        }\n\n        return arr;\n      }\n\n      function trim(v) {\n        var i = v.length;\n\n        while (v[--i] === 0) {\n          ;\n        }\n\n        v.length = i + 1;\n      }\n\n      function createArray(length) {\n        var x = new Array(length);\n        var i = -1;\n\n        while (++i < length) {\n          x[i] = 0;\n        }\n\n        return x;\n      }\n\n      function truncate(n) {\n        if (n > 0) return Math.floor(n);\n        return Math.ceil(n);\n      }\n\n      function add(a, b) {\n        var l_a = a.length,\n            l_b = b.length,\n            r = new Array(l_a),\n            carry = 0,\n            base = BASE,\n            sum,\n            i;\n\n        for (i = 0; i < l_b; i++) {\n          sum = a[i] + b[i] + carry;\n          carry = sum >= base ? 1 : 0;\n          r[i] = sum - carry * base;\n        }\n\n        while (i < l_a) {\n          sum = a[i] + carry;\n          carry = sum === base ? 1 : 0;\n          r[i++] = sum - carry * base;\n        }\n\n        if (carry > 0) r.push(carry);\n        return r;\n      }\n\n      function addAny(a, b) {\n        if (a.length >= b.length) return add(a, b);\n        return add(b, a);\n      }\n\n      function addSmall(a, carry) {\n        var l = a.length,\n            r = new Array(l),\n            base = BASE,\n            sum,\n            i;\n\n        for (i = 0; i < l; i++) {\n          sum = a[i] - base + carry;\n          carry = Math.floor(sum / base);\n          r[i] = sum - carry * base;\n          carry += 1;\n        }\n\n        while (carry > 0) {\n          r[i++] = carry % base;\n          carry = Math.floor(carry / base);\n        }\n\n        return r;\n      }\n\n      BigInteger.prototype.add = function (v) {\n        var n = parseValue(v);\n\n        if (this.sign !== n.sign) {\n          return this.subtract(n.negate());\n        }\n\n        var a = this.value,\n            b = n.value;\n\n        if (n.isSmall) {\n          return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\n        }\n\n        return new BigInteger(addAny(a, b), this.sign);\n      };\n\n      BigInteger.prototype.plus = BigInteger.prototype.add;\n\n      SmallInteger.prototype.add = function (v) {\n        var n = parseValue(v);\n        var a = this.value;\n\n        if (a < 0 !== n.sign) {\n          return this.subtract(n.negate());\n        }\n\n        var b = n.value;\n\n        if (n.isSmall) {\n          if (isPrecise(a + b)) return new SmallInteger(a + b);\n          b = smallToArray(Math.abs(b));\n        }\n\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\n      };\n\n      SmallInteger.prototype.plus = SmallInteger.prototype.add;\n\n      function subtract(a, b) {\n        var a_l = a.length,\n            b_l = b.length,\n            r = new Array(a_l),\n            borrow = 0,\n            base = BASE,\n            i,\n            difference;\n\n        for (i = 0; i < b_l; i++) {\n          difference = a[i] - borrow - b[i];\n\n          if (difference < 0) {\n            difference += base;\n            borrow = 1;\n          } else borrow = 0;\n\n          r[i] = difference;\n        }\n\n        for (i = b_l; i < a_l; i++) {\n          difference = a[i] - borrow;\n          if (difference < 0) difference += base;else {\n            r[i++] = difference;\n            break;\n          }\n          r[i] = difference;\n        }\n\n        for (; i < a_l; i++) {\n          r[i] = a[i];\n        }\n\n        trim(r);\n        return r;\n      }\n\n      function subtractAny(a, b, sign) {\n        var value;\n\n        if (compareAbs(a, b) >= 0) {\n          value = subtract(a, b);\n        } else {\n          value = subtract(b, a);\n          sign = !sign;\n        }\n\n        value = arrayToSmall(value);\n\n        if (typeof value === \"number\") {\n          if (sign) value = -value;\n          return new SmallInteger(value);\n        }\n\n        return new BigInteger(value, sign);\n      }\n\n      function subtractSmall(a, b, sign) {\n        var l = a.length,\n            r = new Array(l),\n            carry = -b,\n            base = BASE,\n            i,\n            difference;\n\n        for (i = 0; i < l; i++) {\n          difference = a[i] + carry;\n          carry = Math.floor(difference / base);\n          difference %= base;\n          r[i] = difference < 0 ? difference + base : difference;\n        }\n\n        r = arrayToSmall(r);\n\n        if (typeof r === \"number\") {\n          if (sign) r = -r;\n          return new SmallInteger(r);\n        }\n\n        return new BigInteger(r, sign);\n      }\n\n      BigInteger.prototype.subtract = function (v) {\n        var n = parseValue(v);\n\n        if (this.sign !== n.sign) {\n          return this.add(n.negate());\n        }\n\n        var a = this.value,\n            b = n.value;\n        if (n.isSmall) return subtractSmall(a, Math.abs(b), this.sign);\n        return subtractAny(a, b, this.sign);\n      };\n\n      BigInteger.prototype.minus = BigInteger.prototype.subtract;\n\n      SmallInteger.prototype.subtract = function (v) {\n        var n = parseValue(v);\n        var a = this.value;\n\n        if (a < 0 !== n.sign) {\n          return this.add(n.negate());\n        }\n\n        var b = n.value;\n\n        if (n.isSmall) {\n          return new SmallInteger(a - b);\n        }\n\n        return subtractSmall(b, Math.abs(a), a >= 0);\n      };\n\n      SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\n\n      BigInteger.prototype.negate = function () {\n        return new BigInteger(this.value, !this.sign);\n      };\n\n      SmallInteger.prototype.negate = function () {\n        var sign = this.sign;\n        var small = new SmallInteger(-this.value);\n        small.sign = !sign;\n        return small;\n      };\n\n      BigInteger.prototype.abs = function () {\n        return new BigInteger(this.value, false);\n      };\n\n      SmallInteger.prototype.abs = function () {\n        return new SmallInteger(Math.abs(this.value));\n      };\n\n      function multiplyLong(a, b) {\n        var a_l = a.length,\n            b_l = b.length,\n            l = a_l + b_l,\n            r = createArray(l),\n            base = BASE,\n            product,\n            carry,\n            i,\n            a_i,\n            b_j;\n\n        for (i = 0; i < a_l; ++i) {\n          a_i = a[i];\n\n          for (var j = 0; j < b_l; ++j) {\n            b_j = b[j];\n            product = a_i * b_j + r[i + j];\n            carry = Math.floor(product / base);\n            r[i + j] = product - carry * base;\n            r[i + j + 1] += carry;\n          }\n        }\n\n        trim(r);\n        return r;\n      }\n\n      function multiplySmall(a, b) {\n        var l = a.length,\n            r = new Array(l),\n            base = BASE,\n            carry = 0,\n            product,\n            i;\n\n        for (i = 0; i < l; i++) {\n          product = a[i] * b + carry;\n          carry = Math.floor(product / base);\n          r[i] = product - carry * base;\n        }\n\n        while (carry > 0) {\n          r[i++] = carry % base;\n          carry = Math.floor(carry / base);\n        }\n\n        return r;\n      }\n\n      function shiftLeft(x, n) {\n        var r = [];\n\n        while (n-- > 0) {\n          r.push(0);\n        }\n\n        return r.concat(x);\n      }\n\n      function multiplyKaratsuba(x, y) {\n        var n = Math.max(x.length, y.length);\n        if (n <= 30) return multiplyLong(x, y);\n        n = Math.ceil(n / 2);\n        var b = x.slice(n),\n            a = x.slice(0, n),\n            d = y.slice(n),\n            c = y.slice(0, n);\n        var ac = multiplyKaratsuba(a, c),\n            bd = multiplyKaratsuba(b, d),\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\n        trim(product);\n        return product;\n      }\n\n      function useKaratsuba(l1, l2) {\n        return -.012 * l1 - .012 * l2 + 15e-6 * l1 * l2 > 0;\n      }\n\n      BigInteger.prototype.multiply = function (v) {\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value,\n            sign = this.sign !== n.sign,\n            abs;\n\n        if (n.isSmall) {\n          if (b === 0) return Integer[0];\n          if (b === 1) return this;\n          if (b === -1) return this.negate();\n          abs = Math.abs(b);\n\n          if (abs < BASE) {\n            return new BigInteger(multiplySmall(a, abs), sign);\n          }\n\n          b = smallToArray(abs);\n        }\n\n        if (useKaratsuba(a.length, b.length)) return new BigInteger(multiplyKaratsuba(a, b), sign);\n        return new BigInteger(multiplyLong(a, b), sign);\n      };\n\n      BigInteger.prototype.times = BigInteger.prototype.multiply;\n\n      function multiplySmallAndArray(a, b, sign) {\n        if (a < BASE) {\n          return new BigInteger(multiplySmall(b, a), sign);\n        }\n\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\n      }\n\n      SmallInteger.prototype._multiplyBySmall = function (a) {\n        if (isPrecise(a.value * this.value)) {\n          return new SmallInteger(a.value * this.value);\n        }\n\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\n      };\n\n      BigInteger.prototype._multiplyBySmall = function (a) {\n        if (a.value === 0) return Integer[0];\n        if (a.value === 1) return this;\n        if (a.value === -1) return this.negate();\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\n      };\n\n      SmallInteger.prototype.multiply = function (v) {\n        return parseValue(v)._multiplyBySmall(this);\n      };\n\n      SmallInteger.prototype.times = SmallInteger.prototype.multiply;\n\n      function square(a) {\n        var l = a.length,\n            r = createArray(l + l),\n            base = BASE,\n            product,\n            carry,\n            i,\n            a_i,\n            a_j;\n\n        for (i = 0; i < l; i++) {\n          a_i = a[i];\n          carry = 0 - a_i * a_i;\n\n          for (var j = i; j < l; j++) {\n            a_j = a[j];\n            product = 2 * (a_i * a_j) + r[i + j] + carry;\n            carry = Math.floor(product / base);\n            r[i + j] = product - carry * base;\n          }\n\n          r[i + l] = carry;\n        }\n\n        trim(r);\n        return r;\n      }\n\n      BigInteger.prototype.square = function () {\n        return new BigInteger(square(this.value), false);\n      };\n\n      SmallInteger.prototype.square = function () {\n        var value = this.value * this.value;\n        if (isPrecise(value)) return new SmallInteger(value);\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\n      };\n\n      function divMod1(a, b) {\n        var a_l = a.length,\n            b_l = b.length,\n            base = BASE,\n            result = createArray(b.length),\n            divisorMostSignificantDigit = b[b_l - 1],\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\n            remainder = multiplySmall(a, lambda),\n            divisor = multiplySmall(b, lambda),\n            quotientDigit,\n            shift,\n            carry,\n            borrow,\n            i,\n            l,\n            q;\n        if (remainder.length <= a_l) remainder.push(0);\n        divisor.push(0);\n        divisorMostSignificantDigit = divisor[b_l - 1];\n\n        for (shift = a_l - b_l; shift >= 0; shift--) {\n          quotientDigit = base - 1;\n\n          if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\n            quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\n          }\n\n          carry = 0;\n          borrow = 0;\n          l = divisor.length;\n\n          for (i = 0; i < l; i++) {\n            carry += quotientDigit * divisor[i];\n            q = Math.floor(carry / base);\n            borrow += remainder[shift + i] - (carry - q * base);\n            carry = q;\n\n            if (borrow < 0) {\n              remainder[shift + i] = borrow + base;\n              borrow = -1;\n            } else {\n              remainder[shift + i] = borrow;\n              borrow = 0;\n            }\n          }\n\n          while (borrow !== 0) {\n            quotientDigit -= 1;\n            carry = 0;\n\n            for (i = 0; i < l; i++) {\n              carry += remainder[shift + i] - base + divisor[i];\n\n              if (carry < 0) {\n                remainder[shift + i] = carry + base;\n                carry = 0;\n              } else {\n                remainder[shift + i] = carry;\n                carry = 1;\n              }\n            }\n\n            borrow += carry;\n          }\n\n          result[shift] = quotientDigit;\n        }\n\n        remainder = divModSmall(remainder, lambda)[0];\n        return [arrayToSmall(result), arrayToSmall(remainder)];\n      }\n\n      function divMod2(a, b) {\n        var a_l = a.length,\n            b_l = b.length,\n            result = [],\n            part = [],\n            base = BASE,\n            guess,\n            xlen,\n            highx,\n            highy,\n            check;\n\n        while (a_l) {\n          part.unshift(a[--a_l]);\n          trim(part);\n\n          if (compareAbs(part, b) < 0) {\n            result.push(0);\n            continue;\n          }\n\n          xlen = part.length;\n          highx = part[xlen - 1] * base + part[xlen - 2];\n          highy = b[b_l - 1] * base + b[b_l - 2];\n\n          if (xlen > b_l) {\n            highx = (highx + 1) * base;\n          }\n\n          guess = Math.ceil(highx / highy);\n\n          do {\n            check = multiplySmall(b, guess);\n            if (compareAbs(check, part) <= 0) break;\n            guess--;\n          } while (guess);\n\n          result.push(guess);\n          part = subtract(part, check);\n        }\n\n        result.reverse();\n        return [arrayToSmall(result), arrayToSmall(part)];\n      }\n\n      function divModSmall(value, lambda) {\n        var length = value.length,\n            quotient = createArray(length),\n            base = BASE,\n            i,\n            q,\n            remainder,\n            divisor;\n        remainder = 0;\n\n        for (i = length - 1; i >= 0; --i) {\n          divisor = remainder * base + value[i];\n          q = truncate(divisor / lambda);\n          remainder = divisor - q * lambda;\n          quotient[i] = q | 0;\n        }\n\n        return [quotient, remainder | 0];\n      }\n\n      function divModAny(self, v) {\n        var value,\n            n = parseValue(v);\n        var a = self.value,\n            b = n.value;\n        var quotient;\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\n\n        if (self.isSmall) {\n          if (n.isSmall) {\n            return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\n          }\n\n          return [Integer[0], self];\n        }\n\n        if (n.isSmall) {\n          if (b === 1) return [self, Integer[0]];\n          if (b == -1) return [self.negate(), Integer[0]];\n          var abs = Math.abs(b);\n\n          if (abs < BASE) {\n            value = divModSmall(a, abs);\n            quotient = arrayToSmall(value[0]);\n            var remainder = value[1];\n            if (self.sign) remainder = -remainder;\n\n            if (typeof quotient === \"number\") {\n              if (self.sign !== n.sign) quotient = -quotient;\n              return [new SmallInteger(quotient), new SmallInteger(remainder)];\n            }\n\n            return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\n          }\n\n          b = smallToArray(abs);\n        }\n\n        var comparison = compareAbs(a, b);\n        if (comparison === -1) return [Integer[0], self];\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\n        if (a.length + b.length <= 200) value = divMod1(a, b);else value = divMod2(a, b);\n        quotient = value[0];\n        var qSign = self.sign !== n.sign,\n            mod = value[1],\n            mSign = self.sign;\n\n        if (typeof quotient === \"number\") {\n          if (qSign) quotient = -quotient;\n          quotient = new SmallInteger(quotient);\n        } else quotient = new BigInteger(quotient, qSign);\n\n        if (typeof mod === \"number\") {\n          if (mSign) mod = -mod;\n          mod = new SmallInteger(mod);\n        } else mod = new BigInteger(mod, mSign);\n\n        return [quotient, mod];\n      }\n\n      BigInteger.prototype.divmod = function (v) {\n        var result = divModAny(this, v);\n        return {\n          quotient: result[0],\n          remainder: result[1]\n        };\n      };\n\n      SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\n\n      BigInteger.prototype.divide = function (v) {\n        return divModAny(this, v)[0];\n      };\n\n      SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\n\n      BigInteger.prototype.mod = function (v) {\n        return divModAny(this, v)[1];\n      };\n\n      SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\n\n      BigInteger.prototype.pow = function (v) {\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value,\n            value,\n            x,\n            y;\n        if (b === 0) return Integer[1];\n        if (a === 0) return Integer[0];\n        if (a === 1) return Integer[1];\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\n\n        if (n.sign) {\n          return Integer[0];\n        }\n\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\n\n        if (this.isSmall) {\n          if (isPrecise(value = Math.pow(a, b))) return new SmallInteger(truncate(value));\n        }\n\n        x = this;\n        y = Integer[1];\n\n        while (true) {\n          if (b & 1 === 1) {\n            y = y.times(x);\n            --b;\n          }\n\n          if (b === 0) break;\n          b /= 2;\n          x = x.square();\n        }\n\n        return y;\n      };\n\n      SmallInteger.prototype.pow = BigInteger.prototype.pow;\n\n      BigInteger.prototype.modPow = function (exp, mod) {\n        exp = parseValue(exp);\n        mod = parseValue(mod);\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\n        var r = Integer[1],\n            base = this.mod(mod);\n\n        while (exp.isPositive()) {\n          if (base.isZero()) return Integer[0];\n          if (exp.isOdd()) r = r.multiply(base).mod(mod);\n          exp = exp.divide(2);\n          base = base.square().mod(mod);\n        }\n\n        return r;\n      };\n\n      SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\n\n      function compareAbs(a, b) {\n        if (a.length !== b.length) {\n          return a.length > b.length ? 1 : -1;\n        }\n\n        for (var i = a.length - 1; i >= 0; i--) {\n          if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\n        }\n\n        return 0;\n      }\n\n      BigInteger.prototype.compareAbs = function (v) {\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value;\n        if (n.isSmall) return 1;\n        return compareAbs(a, b);\n      };\n\n      SmallInteger.prototype.compareAbs = function (v) {\n        var n = parseValue(v),\n            a = Math.abs(this.value),\n            b = n.value;\n\n        if (n.isSmall) {\n          b = Math.abs(b);\n          return a === b ? 0 : a > b ? 1 : -1;\n        }\n\n        return -1;\n      };\n\n      BigInteger.prototype.compare = function (v) {\n        if (v === Infinity) {\n          return -1;\n        }\n\n        if (v === -Infinity) {\n          return 1;\n        }\n\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value;\n\n        if (this.sign !== n.sign) {\n          return n.sign ? 1 : -1;\n        }\n\n        if (n.isSmall) {\n          return this.sign ? -1 : 1;\n        }\n\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\n      };\n\n      BigInteger.prototype.compareTo = BigInteger.prototype.compare;\n\n      SmallInteger.prototype.compare = function (v) {\n        if (v === Infinity) {\n          return -1;\n        }\n\n        if (v === -Infinity) {\n          return 1;\n        }\n\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value;\n\n        if (n.isSmall) {\n          return a == b ? 0 : a > b ? 1 : -1;\n        }\n\n        if (a < 0 !== n.sign) {\n          return a < 0 ? -1 : 1;\n        }\n\n        return a < 0 ? 1 : -1;\n      };\n\n      SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\n\n      BigInteger.prototype.equals = function (v) {\n        return this.compare(v) === 0;\n      };\n\n      SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\n\n      BigInteger.prototype.notEquals = function (v) {\n        return this.compare(v) !== 0;\n      };\n\n      SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\n\n      BigInteger.prototype.greater = function (v) {\n        return this.compare(v) > 0;\n      };\n\n      SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\n\n      BigInteger.prototype.lesser = function (v) {\n        return this.compare(v) < 0;\n      };\n\n      SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\n\n      BigInteger.prototype.greaterOrEquals = function (v) {\n        return this.compare(v) >= 0;\n      };\n\n      SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\n\n      BigInteger.prototype.lesserOrEquals = function (v) {\n        return this.compare(v) <= 0;\n      };\n\n      SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\n\n      BigInteger.prototype.isEven = function () {\n        return (this.value[0] & 1) === 0;\n      };\n\n      SmallInteger.prototype.isEven = function () {\n        return (this.value & 1) === 0;\n      };\n\n      BigInteger.prototype.isOdd = function () {\n        return (this.value[0] & 1) === 1;\n      };\n\n      SmallInteger.prototype.isOdd = function () {\n        return (this.value & 1) === 1;\n      };\n\n      BigInteger.prototype.isPositive = function () {\n        return !this.sign;\n      };\n\n      SmallInteger.prototype.isPositive = function () {\n        return this.value > 0;\n      };\n\n      BigInteger.prototype.isNegative = function () {\n        return this.sign;\n      };\n\n      SmallInteger.prototype.isNegative = function () {\n        return this.value < 0;\n      };\n\n      BigInteger.prototype.isUnit = function () {\n        return false;\n      };\n\n      SmallInteger.prototype.isUnit = function () {\n        return Math.abs(this.value) === 1;\n      };\n\n      BigInteger.prototype.isZero = function () {\n        return false;\n      };\n\n      SmallInteger.prototype.isZero = function () {\n        return this.value === 0;\n      };\n\n      BigInteger.prototype.isDivisibleBy = function (v) {\n        var n = parseValue(v);\n        var value = n.value;\n        if (value === 0) return false;\n        if (value === 1) return true;\n        if (value === 2) return this.isEven();\n        return this.mod(n).equals(Integer[0]);\n      };\n\n      SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\n\n      function isBasicPrime(v) {\n        var n = v.abs();\n        if (n.isUnit()) return false;\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\n        if (n.lesser(49)) return true;\n      }\n\n      function millerRabinTest(n, a) {\n        var nPrev = n.prev(),\n            b = nPrev,\n            r = 0,\n            d,\n            t,\n            i,\n            x;\n\n        while (b.isEven()) {\n          b = b.divide(2), r++;\n        }\n\n        next: for (i = 0; i < a.length; i++) {\n          if (n.lesser(a[i])) continue;\n          x = bigInt(a[i]).modPow(b, n);\n          if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\n\n          for (d = r - 1; d != 0; d--) {\n            x = x.square().mod(n);\n            if (x.isUnit()) return false;\n            if (x.equals(nPrev)) continue next;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n      BigInteger.prototype.isPrime = function (strict) {\n        var isPrime = isBasicPrime(this);\n        if (isPrime !== undefined) return isPrime;\n        var n = this.abs();\n        var bits = n.bitLength();\n        if (bits <= 64) return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\n        var logN = Math.log(2) * bits;\n        var t = Math.ceil(strict === true ? 2 * Math.pow(logN, 2) : logN);\n\n        for (var a = [], i = 0; i < t; i++) {\n          a.push(bigInt(i + 2));\n        }\n\n        return millerRabinTest(n, a);\n      };\n\n      SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\n\n      BigInteger.prototype.isProbablePrime = function (iterations) {\n        var isPrime = isBasicPrime(this);\n        if (isPrime !== undefined) return isPrime;\n        var n = this.abs();\n        var t = iterations === undefined ? 5 : iterations;\n\n        for (var a = [], i = 0; i < t; i++) {\n          a.push(bigInt.randBetween(2, n.minus(2)));\n        }\n\n        return millerRabinTest(n, a);\n      };\n\n      SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\n\n      BigInteger.prototype.modInv = function (n) {\n        var t = bigInt.zero,\n            newT = bigInt.one,\n            r = parseValue(n),\n            newR = this.abs(),\n            q,\n            lastT,\n            lastR;\n\n        while (!newR.equals(bigInt.zero)) {\n          q = r.divide(newR);\n          lastT = t;\n          lastR = r;\n          t = newT;\n          r = newR;\n          newT = lastT.subtract(q.multiply(newT));\n          newR = lastR.subtract(q.multiply(newR));\n        }\n\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\n\n        if (t.compare(0) === -1) {\n          t = t.add(n);\n        }\n\n        if (this.isNegative()) {\n          return t.negate();\n        }\n\n        return t;\n      };\n\n      SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\n\n      BigInteger.prototype.next = function () {\n        var value = this.value;\n\n        if (this.sign) {\n          return subtractSmall(value, 1, this.sign);\n        }\n\n        return new BigInteger(addSmall(value, 1), this.sign);\n      };\n\n      SmallInteger.prototype.next = function () {\n        var value = this.value;\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\n        return new BigInteger(MAX_INT_ARR, false);\n      };\n\n      BigInteger.prototype.prev = function () {\n        var value = this.value;\n\n        if (this.sign) {\n          return new BigInteger(addSmall(value, 1), true);\n        }\n\n        return subtractSmall(value, 1, this.sign);\n      };\n\n      SmallInteger.prototype.prev = function () {\n        var value = this.value;\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\n        return new BigInteger(MAX_INT_ARR, true);\n      };\n\n      var powersOfTwo = [1];\n\n      while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) {\n        powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\n      }\n\n      var powers2Length = powersOfTwo.length,\n          highestPower2 = powersOfTwo[powers2Length - 1];\n\n      function shift_isSmall(n) {\n        return (typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE || n instanceof BigInteger && n.value.length <= 1;\n      }\n\n      BigInteger.prototype.shiftLeft = function (n) {\n        if (!shift_isSmall(n)) {\n          throw new Error(String(n) + \" is too large for shifting.\");\n        }\n\n        n = +n;\n        if (n < 0) return this.shiftRight(-n);\n        var result = this;\n        if (result.isZero()) return result;\n\n        while (n >= powers2Length) {\n          result = result.multiply(highestPower2);\n          n -= powers2Length - 1;\n        }\n\n        return result.multiply(powersOfTwo[n]);\n      };\n\n      SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\n\n      BigInteger.prototype.shiftRight = function (n) {\n        var remQuo;\n\n        if (!shift_isSmall(n)) {\n          throw new Error(String(n) + \" is too large for shifting.\");\n        }\n\n        n = +n;\n        if (n < 0) return this.shiftLeft(-n);\n        var result = this;\n\n        while (n >= powers2Length) {\n          if (result.isZero() || result.isNegative() && result.isUnit()) return result;\n          remQuo = divModAny(result, highestPower2);\n          result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n          n -= powers2Length - 1;\n        }\n\n        remQuo = divModAny(result, powersOfTwo[n]);\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n      };\n\n      SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\n\n      function bitwise(x, y, fn) {\n        y = parseValue(y);\n        var xSign = x.isNegative(),\n            ySign = y.isNegative();\n        var xRem = xSign ? x.not() : x,\n            yRem = ySign ? y.not() : y;\n        var xDigit = 0,\n            yDigit = 0;\n        var xDivMod = null,\n            yDivMod = null;\n        var result = [];\n\n        while (!xRem.isZero() || !yRem.isZero()) {\n          xDivMod = divModAny(xRem, highestPower2);\n          xDigit = xDivMod[1].toJSNumber();\n\n          if (xSign) {\n            xDigit = highestPower2 - 1 - xDigit;\n          }\n\n          yDivMod = divModAny(yRem, highestPower2);\n          yDigit = yDivMod[1].toJSNumber();\n\n          if (ySign) {\n            yDigit = highestPower2 - 1 - yDigit;\n          }\n\n          xRem = xDivMod[0];\n          yRem = yDivMod[0];\n          result.push(fn(xDigit, yDigit));\n        }\n\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\n\n        for (var i = result.length - 1; i >= 0; i -= 1) {\n          sum = sum.multiply(highestPower2).add(bigInt(result[i]));\n        }\n\n        return sum;\n      }\n\n      BigInteger.prototype.not = function () {\n        return this.negate().prev();\n      };\n\n      SmallInteger.prototype.not = BigInteger.prototype.not;\n\n      BigInteger.prototype.and = function (n) {\n        return bitwise(this, n, function (a, b) {\n          return a & b;\n        });\n      };\n\n      SmallInteger.prototype.and = BigInteger.prototype.and;\n\n      BigInteger.prototype.or = function (n) {\n        return bitwise(this, n, function (a, b) {\n          return a | b;\n        });\n      };\n\n      SmallInteger.prototype.or = BigInteger.prototype.or;\n\n      BigInteger.prototype.xor = function (n) {\n        return bitwise(this, n, function (a, b) {\n          return a ^ b;\n        });\n      };\n\n      SmallInteger.prototype.xor = BigInteger.prototype.xor;\n      var LOBMASK_I = 1 << 30,\n          LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\n\n      function roughLOB(n) {\n        var v = n.value,\n            x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\n        return x & -x;\n      }\n\n      function integerLogarithm(value, base) {\n        if (base.compareTo(value) <= 0) {\n          var tmp = integerLogarithm(value, base.square(base));\n          var p = tmp.p;\n          var e = tmp.e;\n          var t = p.multiply(base);\n          return t.compareTo(value) <= 0 ? {\n            p: t,\n            e: e * 2 + 1\n          } : {\n            p: p,\n            e: e * 2\n          };\n        }\n\n        return {\n          p: bigInt(1),\n          e: 0\n        };\n      }\n\n      BigInteger.prototype.bitLength = function () {\n        var n = this;\n\n        if (n.compareTo(bigInt(0)) < 0) {\n          n = n.negate().subtract(bigInt(1));\n        }\n\n        if (n.compareTo(bigInt(0)) === 0) {\n          return bigInt(0);\n        }\n\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\n      };\n\n      SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\n\n      function max(a, b) {\n        a = parseValue(a);\n        b = parseValue(b);\n        return a.greater(b) ? a : b;\n      }\n\n      function min(a, b) {\n        a = parseValue(a);\n        b = parseValue(b);\n        return a.lesser(b) ? a : b;\n      }\n\n      function gcd(a, b) {\n        a = parseValue(a).abs();\n        b = parseValue(b).abs();\n        if (a.equals(b)) return a;\n        if (a.isZero()) return b;\n        if (b.isZero()) return a;\n        var c = Integer[1],\n            d,\n            t;\n\n        while (a.isEven() && b.isEven()) {\n          d = Math.min(roughLOB(a), roughLOB(b));\n          a = a.divide(d);\n          b = b.divide(d);\n          c = c.multiply(d);\n        }\n\n        while (a.isEven()) {\n          a = a.divide(roughLOB(a));\n        }\n\n        do {\n          while (b.isEven()) {\n            b = b.divide(roughLOB(b));\n          }\n\n          if (a.greater(b)) {\n            t = b;\n            b = a;\n            a = t;\n          }\n\n          b = b.subtract(a);\n        } while (!b.isZero());\n\n        return c.isUnit() ? a : a.multiply(c);\n      }\n\n      function lcm(a, b) {\n        a = parseValue(a).abs();\n        b = parseValue(b).abs();\n        return a.divide(gcd(a, b)).multiply(b);\n      }\n\n      function randBetween(a, b) {\n        a = parseValue(a);\n        b = parseValue(b);\n        var low = min(a, b),\n            high = max(a, b);\n        var range = high.subtract(low).add(1);\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\n        var length = range.value.length - 1;\n        var result = [],\n            restricted = true;\n\n        for (var i = length; i >= 0; i--) {\n          var top = restricted ? range.value[i] : BASE;\n          var digit = truncate(Math.random() * top);\n          result.unshift(digit);\n          if (digit < top) restricted = false;\n        }\n\n        result = arrayToSmall(result);\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\n      }\n\n      var parseBase = function parseBase(text, base) {\n        var length = text.length;\n        var i;\n        var absBase = Math.abs(base);\n\n        for (var i = 0; i < length; i++) {\n          var c = text[i].toLowerCase();\n          if (c === \"-\") continue;\n\n          if (/[a-z0-9]/.test(c)) {\n            if (/[0-9]/.test(c) && +c >= absBase) {\n              if (c === \"1\" && absBase === 1) continue;\n              throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n            } else if (c.charCodeAt(0) - 87 >= absBase) {\n              throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n            }\n          }\n        }\n\n        if (2 <= base && base <= 36) {\n          if (length <= LOG_MAX_INT / Math.log(base)) {\n            var result = parseInt(text, base);\n\n            if (isNaN(result)) {\n              throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n            }\n\n            return new SmallInteger(parseInt(text, base));\n          }\n        }\n\n        base = parseValue(base);\n        var digits = [];\n        var isNegative = text[0] === \"-\";\n\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\n          var c = text[i].toLowerCase(),\n              charCode = c.charCodeAt(0);\n          if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));else if (c === \"<\") {\n            var start = i;\n\n            do {\n              i++;\n            } while (text[i] !== \">\");\n\n            digits.push(parseValue(text.slice(start + 1, i)));\n          } else throw new Error(c + \" is not a valid character\");\n        }\n\n        return parseBaseFromArray(digits, base, isNegative);\n      };\n\n      function parseBaseFromArray(digits, base, isNegative) {\n        var val = Integer[0],\n            pow = Integer[1],\n            i;\n\n        for (i = digits.length - 1; i >= 0; i--) {\n          val = val.add(digits[i].times(pow));\n          pow = pow.times(base);\n        }\n\n        return isNegative ? val.negate() : val;\n      }\n\n      function stringify(digit) {\n        if (digit <= 35) {\n          return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\n        }\n\n        return \"<\" + digit + \">\";\n      }\n\n      function toBase(n, base) {\n        base = bigInt(base);\n\n        if (base.isZero()) {\n          if (n.isZero()) return {\n            value: [0],\n            isNegative: false\n          };\n          throw new Error(\"Cannot convert nonzero numbers to base 0.\");\n        }\n\n        if (base.equals(-1)) {\n          if (n.isZero()) return {\n            value: [0],\n            isNegative: false\n          };\n          if (n.isNegative()) return {\n            value: [].concat.apply([], Array.apply(null, Array(-n)).map(Array.prototype.valueOf, [1, 0])),\n            isNegative: false\n          };\n          var arr = Array.apply(null, Array(+n - 1)).map(Array.prototype.valueOf, [0, 1]);\n          arr.unshift([1]);\n          return {\n            value: [].concat.apply([], arr),\n            isNegative: false\n          };\n        }\n\n        var neg = false;\n\n        if (n.isNegative() && base.isPositive()) {\n          neg = true;\n          n = n.abs();\n        }\n\n        if (base.equals(1)) {\n          if (n.isZero()) return {\n            value: [0],\n            isNegative: false\n          };\n          return {\n            value: Array.apply(null, Array(+n)).map(Number.prototype.valueOf, 1),\n            isNegative: neg\n          };\n        }\n\n        var out = [];\n        var left = n,\n            divmod;\n\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\n          divmod = left.divmod(base);\n          left = divmod.quotient;\n          var digit = divmod.remainder;\n\n          if (digit.isNegative()) {\n            digit = base.minus(digit).abs();\n            left = left.next();\n          }\n\n          out.push(digit.toJSNumber());\n        }\n\n        out.push(left.toJSNumber());\n        return {\n          value: out.reverse(),\n          isNegative: neg\n        };\n      }\n\n      function toBaseString(n, base) {\n        var arr = toBase(n, base);\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join(\"\");\n      }\n\n      BigInteger.prototype.toArray = function (radix) {\n        return toBase(this, radix);\n      };\n\n      SmallInteger.prototype.toArray = function (radix) {\n        return toBase(this, radix);\n      };\n\n      BigInteger.prototype.toString = function (radix) {\n        if (radix === undefined) radix = 10;\n        if (radix !== 10) return toBaseString(this, radix);\n        var v = this.value,\n            l = v.length,\n            str = String(v[--l]),\n            zeros = \"0000000\",\n            digit;\n\n        while (--l >= 0) {\n          digit = String(v[l]);\n          str += zeros.slice(digit.length) + digit;\n        }\n\n        var sign = this.sign ? \"-\" : \"\";\n        return sign + str;\n      };\n\n      SmallInteger.prototype.toString = function (radix) {\n        if (radix === undefined) radix = 10;\n        if (radix != 10) return toBaseString(this, radix);\n        return String(this.value);\n      };\n\n      BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () {\n        return this.toString();\n      };\n\n      BigInteger.prototype.valueOf = function () {\n        return parseInt(this.toString(), 10);\n      };\n\n      BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\n\n      SmallInteger.prototype.valueOf = function () {\n        return this.value;\n      };\n\n      SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\n\n      function parseStringValue(v) {\n        if (isPrecise(+v)) {\n          var x = +v;\n          if (x === truncate(x)) return new SmallInteger(x);\n          throw new Error(\"Invalid integer: \" + v);\n        }\n\n        var sign = v[0] === \"-\";\n        if (sign) v = v.slice(1);\n        var split = v.split(/e/i);\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\n\n        if (split.length === 2) {\n          var exp = split[1];\n          if (exp[0] === \"+\") exp = exp.slice(1);\n          exp = +exp;\n          if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\n          var text = split[0];\n          var decimalPlace = text.indexOf(\".\");\n\n          if (decimalPlace >= 0) {\n            exp -= text.length - decimalPlace - 1;\n            text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\n          }\n\n          if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\n          text += new Array(exp + 1).join(\"0\");\n          v = text;\n        }\n\n        var isValid = /^([0-9][0-9]*)$/.test(v);\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\n        var r = [],\n            max = v.length,\n            l = LOG_BASE,\n            min = max - l;\n\n        while (max > 0) {\n          r.push(+v.slice(min, max));\n          min -= l;\n          if (min < 0) min = 0;\n          max -= l;\n        }\n\n        trim(r);\n        return new BigInteger(r, sign);\n      }\n\n      function parseNumberValue(v) {\n        if (isPrecise(v)) {\n          if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\n          return new SmallInteger(v);\n        }\n\n        return parseStringValue(v.toString());\n      }\n\n      function parseValue(v) {\n        if (typeof v === \"number\") {\n          return parseNumberValue(v);\n        }\n\n        if (typeof v === \"string\") {\n          return parseStringValue(v);\n        }\n\n        return v;\n      }\n\n      for (var i = 0; i < 1e3; i++) {\n        Integer[i] = new SmallInteger(i);\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\n      }\n\n      Integer.one = Integer[1];\n      Integer.zero = Integer[0];\n      Integer.minusOne = Integer[-1];\n      Integer.max = max;\n      Integer.min = min;\n      Integer.gcd = gcd;\n      Integer.lcm = lcm;\n\n      Integer.isInstance = function (x) {\n        return x instanceof BigInteger || x instanceof SmallInteger;\n      };\n\n      Integer.randBetween = randBetween;\n\n      Integer.fromArray = function (digits, base, isNegative) {\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\n      };\n\n      return Integer;\n    }();\n\n    if (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\n      module.exports = bigInt;\n    }\n\n    if (typeof define === \"function\" && define.amd) {\n      define(\"big-integer\", [], function () {\n        return bigInt;\n      });\n    }\n\n    return bigInt;\n  }(),\n\n  /*\r\n   *  decimal.js v10.2.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\n  bigDec: function (n) {\n    \"use strict\";\n\n    var e,\n        i,\n        t,\n        r,\n        s = 9e15,\n        o = 1e9,\n        u = \"0123456789abcdef\",\n        c = \"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",\n        f = \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",\n        a = {\n      precision: 20,\n      rounding: 4,\n      modulo: 1,\n      toExpNeg: -7,\n      toExpPos: 21,\n      minE: -s,\n      maxE: s,\n      crypto: !1\n    },\n        h = !0,\n        d = \"[DecimalError] \",\n        l = d + \"Invalid argument: \",\n        p = d + \"Precision limit exceeded\",\n        g = d + \"crypto unavailable\",\n        m = Math.floor,\n        w = Math.pow,\n        v = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\n        N = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\n        b = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\n        E = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n        x = 1e7,\n        y = 7,\n        M = c.length - 1,\n        q = f.length - 1,\n        O = {\n      name: \"[object Decimal]\"\n    };\n\n    function D(n) {\n      var e,\n          i,\n          t,\n          r = n.length - 1,\n          s = \"\",\n          o = n[0];\n\n      if (r > 0) {\n        for (s += o, e = 1; e < r; e++) {\n          t = n[e] + \"\", (i = y - t.length) && (s += k(i)), s += t;\n        }\n\n        o = n[e], (i = y - (t = o + \"\").length) && (s += k(i));\n      } else if (0 === o) return \"0\";\n\n      for (; o % 10 == 0;) {\n        o /= 10;\n      }\n\n      return s + o;\n    }\n\n    function F(n, e, i) {\n      if (n !== ~~n || n < e || n > i) throw Error(l + n);\n    }\n\n    function A(n, e, i, t) {\n      var r, s, o, u;\n\n      for (s = n[0]; s >= 10; s /= 10) {\n        --e;\n      }\n\n      return --e < 0 ? (e += y, r = 0) : (r = Math.ceil((e + 1) / y), e %= y), s = w(10, y - e), u = n[r] % s | 0, null == t ? e < 3 ? (0 == e ? u = u / 100 | 0 : 1 == e && (u = u / 10 | 0), o = i < 4 && 99999 == u || i > 3 && 49999 == u || 5e4 == u || 0 == u) : o = (i < 4 && u + 1 == s || i > 3 && u + 1 == s / 2) && (n[r + 1] / s / 100 | 0) == w(10, e - 2) - 1 || (u == s / 2 || 0 == u) && 0 == (n[r + 1] / s / 100 | 0) : e < 4 ? (0 == e ? u = u / 1e3 | 0 : 1 == e ? u = u / 100 | 0 : 2 == e && (u = u / 10 | 0), o = (t || i < 4) && 9999 == u || !t && i > 3 && 4999 == u) : o = ((t || i < 4) && u + 1 == s || !t && i > 3 && u + 1 == s / 2) && (n[r + 1] / s / 1e3 | 0) == w(10, e - 3) - 1, o;\n    }\n\n    function S(n, e, i) {\n      for (var t, r, s = [0], o = 0, c = n.length; o < c;) {\n        for (r = s.length; r--;) {\n          s[r] *= e;\n        }\n\n        for (s[0] += u.indexOf(n.charAt(o++)), t = 0; t < s.length; t++) {\n          s[t] > i - 1 && (void 0 === s[t + 1] && (s[t + 1] = 0), s[t + 1] += s[t] / i | 0, s[t] %= i);\n        }\n      }\n\n      return s.reverse();\n    }\n\n    O.absoluteValue = O.abs = function () {\n      var n = new this.constructor(this);\n      return n.s < 0 && (n.s = 1), P(n);\n    }, O.ceil = function () {\n      return P(new this.constructor(this), this.e + 1, 2);\n    }, O.comparedTo = O.cmp = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s = this,\n          o = s.d,\n          u = (n = new s.constructor(n)).d,\n          c = s.s,\n          f = n.s;\n      if (!o || !u) return c && f ? c !== f ? c : o === u ? 0 : !o ^ c < 0 ? 1 : -1 : NaN;\n      if (!o[0] || !u[0]) return o[0] ? c : u[0] ? -f : 0;\n      if (c !== f) return c;\n      if (s.e !== n.e) return s.e > n.e ^ c < 0 ? 1 : -1;\n\n      for (e = 0, i = (t = o.length) < (r = u.length) ? t : r; e < i; ++e) {\n        if (o[e] !== u[e]) return o[e] > u[e] ^ c < 0 ? 1 : -1;\n      }\n\n      return t === r ? 0 : t > r ^ c < 0 ? 1 : -1;\n    }, O.cosine = O.cos = function () {\n      var n,\n          e,\n          i = this,\n          t = i.constructor;\n      return i.d ? i.d[0] ? (n = t.precision, e = t.rounding, t.precision = n + Math.max(i.e, i.sd()) + y, t.rounding = 1, i = function (n, e) {\n        var i,\n            t,\n            r = e.d.length;\n        r < 32 ? (i = Math.ceil(r / 3), t = (1 / z(4, i)).toString()) : (i = 16, t = \"2.3283064365386962890625e-10\");\n        n.precision += i, e = J(n, 1, e.times(t), new n(1));\n\n        for (var s = i; s--;) {\n          var o = e.times(e);\n          e = o.times(o).minus(o).times(8).plus(1);\n        }\n\n        return n.precision -= i, e;\n      }(t, G(t, i)), t.precision = n, t.rounding = e, P(2 == r || 3 == r ? i.neg() : i, n, e, !0)) : new t(1) : new t(NaN);\n    }, O.cubeRoot = O.cbrt = function () {\n      var n,\n          e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a = this,\n          d = a.constructor;\n      if (!a.isFinite() || a.isZero()) return new d(a);\n\n      for (h = !1, (s = a.s * w(a.s * a, 1 / 3)) && Math.abs(s) != 1 / 0 ? t = new d(s.toString()) : (i = D(a.d), (s = ((n = a.e) - i.length + 1) % 3) && (i += 1 == s || -2 == s ? \"0\" : \"00\"), s = w(i, 1 / 3), n = m((n + 1) / 3) - (n % 3 == (n < 0 ? -1 : 2)), (t = new d(i = s == 1 / 0 ? \"5e\" + n : (i = s.toExponential()).slice(0, i.indexOf(\"e\") + 1) + n)).s = a.s), o = (n = d.precision) + 3;;) {\n        if (f = (c = (u = t).times(u).times(u)).plus(a), t = Z(f.plus(a).times(u), f.plus(c), o + 2, 1), D(u.d).slice(0, o) === (i = D(t.d)).slice(0, o)) {\n          if (\"9999\" != (i = i.slice(o - 3, o + 1)) && (r || \"4999\" != i)) {\n            +i && (+i.slice(1) || \"5\" != i.charAt(0)) || (P(t, n + 1, 1), e = !t.times(t).times(t).eq(a));\n            break;\n          }\n\n          if (!r && (P(u, n + 1, 0), u.times(u).times(u).eq(a))) {\n            t = u;\n            break;\n          }\n\n          o += 4, r = 1;\n        }\n      }\n\n      return h = !0, P(t, n, d.rounding, e);\n    }, O.decimalPlaces = O.dp = function () {\n      var n,\n          e = this.d,\n          i = NaN;\n\n      if (e) {\n        if (i = ((n = e.length - 1) - m(this.e / y)) * y, n = e[n]) for (; n % 10 == 0; n /= 10) {\n          i--;\n        }\n        i < 0 && (i = 0);\n      }\n\n      return i;\n    }, O.dividedBy = O.div = function (n) {\n      return Z(this, new this.constructor(n));\n    }, O.dividedToIntegerBy = O.divToInt = function (n) {\n      var e = this.constructor;\n      return P(Z(this, new e(n), 0, 1, 1), e.precision, e.rounding);\n    }, O.equals = O.eq = function (n) {\n      return 0 === this.cmp(n);\n    }, O.floor = function () {\n      return P(new this.constructor(this), this.e + 1, 3);\n    }, O.greaterThan = O.gt = function (n) {\n      return this.cmp(n) > 0;\n    }, O.greaterThanOrEqualTo = O.gte = function (n) {\n      var e = this.cmp(n);\n      return 1 == e || 0 === e;\n    }, O.hyperbolicCosine = O.cosh = function () {\n      var n,\n          e,\n          i,\n          t,\n          r,\n          s = this,\n          o = s.constructor,\n          u = new o(1);\n      if (!s.isFinite()) return new o(s.s ? 1 / 0 : NaN);\n      if (s.isZero()) return u;\n      i = o.precision, t = o.rounding, o.precision = i + Math.max(s.e, s.sd()) + 4, o.rounding = 1, (r = s.d.length) < 32 ? e = (1 / z(4, n = Math.ceil(r / 3))).toString() : (n = 16, e = \"2.3283064365386962890625e-10\"), s = J(o, 1, s.times(e), new o(1), !0);\n\n      for (var c, f = n, a = new o(8); f--;) {\n        c = s.times(s), s = u.minus(c.times(a.minus(c.times(a))));\n      }\n\n      return P(s, o.precision = i, o.rounding = t, !0);\n    }, O.hyperbolicSine = O.sinh = function () {\n      var n,\n          e,\n          i,\n          t,\n          r = this,\n          s = r.constructor;\n      if (!r.isFinite() || r.isZero()) return new s(r);\n      if (e = s.precision, i = s.rounding, s.precision = e + Math.max(r.e, r.sd()) + 4, s.rounding = 1, (t = r.d.length) < 3) r = J(s, 2, r, r, !0);else {\n        n = (n = 1.4 * Math.sqrt(t)) > 16 ? 16 : 0 | n, r = J(s, 2, r = r.times(1 / z(5, n)), r, !0);\n\n        for (var o, u = new s(5), c = new s(16), f = new s(20); n--;) {\n          o = r.times(r), r = r.times(u.plus(o.times(c.times(o).plus(f))));\n        }\n      }\n      return s.precision = e, s.rounding = i, P(r, e, i, !0);\n    }, O.hyperbolicTangent = O.tanh = function () {\n      var n,\n          e,\n          i = this,\n          t = i.constructor;\n      return i.isFinite() ? i.isZero() ? new t(i) : (n = t.precision, e = t.rounding, t.precision = n + 7, t.rounding = 1, Z(i.sinh(), i.cosh(), t.precision = n, t.rounding = e)) : new t(i.s);\n    }, O.inverseCosine = O.acos = function () {\n      var n,\n          e = this,\n          i = e.constructor,\n          t = e.abs().cmp(1),\n          r = i.precision,\n          s = i.rounding;\n      return -1 !== t ? 0 === t ? e.isNeg() ? U(i, r, s) : new i(0) : new i(NaN) : e.isZero() ? U(i, r + 4, s).times(.5) : (i.precision = r + 6, i.rounding = 1, e = e.asin(), n = U(i, r + 4, s).times(.5), i.precision = r, i.rounding = s, n.minus(e));\n    }, O.inverseHyperbolicCosine = O.acosh = function () {\n      var n,\n          e,\n          i = this,\n          t = i.constructor;\n      return i.lte(1) ? new t(i.eq(1) ? 0 : NaN) : i.isFinite() ? (n = t.precision, e = t.rounding, t.precision = n + Math.max(Math.abs(i.e), i.sd()) + 4, t.rounding = 1, h = !1, i = i.times(i).minus(1).sqrt().plus(i), h = !0, t.precision = n, t.rounding = e, i.ln()) : new t(i);\n    }, O.inverseHyperbolicSine = O.asinh = function () {\n      var n,\n          e,\n          i = this,\n          t = i.constructor;\n      return !i.isFinite() || i.isZero() ? new t(i) : (n = t.precision, e = t.rounding, t.precision = n + 2 * Math.max(Math.abs(i.e), i.sd()) + 6, t.rounding = 1, h = !1, i = i.times(i).plus(1).sqrt().plus(i), h = !0, t.precision = n, t.rounding = e, i.ln());\n    }, O.inverseHyperbolicTangent = O.atanh = function () {\n      var n,\n          e,\n          i,\n          t,\n          r = this,\n          s = r.constructor;\n      return r.isFinite() ? r.e >= 0 ? new s(r.abs().eq(1) ? r.s / 0 : r.isZero() ? r : NaN) : (n = s.precision, e = s.rounding, t = r.sd(), Math.max(t, n) < 2 * -r.e - 1 ? P(new s(r), n, e, !0) : (s.precision = i = t - r.e, r = Z(r.plus(1), new s(1).minus(r), i + n, 1), s.precision = n + 4, s.rounding = 1, r = r.ln(), s.precision = n, s.rounding = e, r.times(.5))) : new s(NaN);\n    }, O.inverseSine = O.asin = function () {\n      var n,\n          e,\n          i,\n          t,\n          r = this,\n          s = r.constructor;\n      return r.isZero() ? new s(r) : (e = r.abs().cmp(1), i = s.precision, t = s.rounding, -1 !== e ? 0 === e ? ((n = U(s, i + 4, t).times(.5)).s = r.s, n) : new s(NaN) : (s.precision = i + 6, s.rounding = 1, r = r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(), s.precision = i, s.rounding = t, r.times(2)));\n    }, O.inverseTangent = O.atan = function () {\n      var n,\n          e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f = this,\n          a = f.constructor,\n          d = a.precision,\n          l = a.rounding;\n\n      if (f.isFinite()) {\n        if (f.isZero()) return new a(f);\n        if (f.abs().eq(1) && d + 4 <= q) return (o = U(a, d + 4, l).times(.25)).s = f.s, o;\n      } else {\n        if (!f.s) return new a(NaN);\n        if (d + 4 <= q) return (o = U(a, d + 4, l).times(.5)).s = f.s, o;\n      }\n\n      for (a.precision = u = d + 10, a.rounding = 1, n = i = Math.min(28, u / y + 2 | 0); n; --n) {\n        f = f.div(f.times(f).plus(1).sqrt().plus(1));\n      }\n\n      for (h = !1, e = Math.ceil(u / y), t = 1, c = f.times(f), o = new a(f), r = f; -1 !== n;) {\n        if (r = r.times(c), s = o.minus(r.div(t += 2)), r = r.times(c), void 0 !== (o = s.plus(r.div(t += 2))).d[e]) for (n = e; o.d[n] === s.d[n] && n--;) {\n          ;\n        }\n      }\n\n      return i && (o = o.times(2 << i - 1)), h = !0, P(o, a.precision = d, a.rounding = l, !0);\n    }, O.isFinite = function () {\n      return !!this.d;\n    }, O.isInteger = O.isInt = function () {\n      return !!this.d && m(this.e / y) > this.d.length - 2;\n    }, O.isNaN = function () {\n      return !this.s;\n    }, O.isNegative = O.isNeg = function () {\n      return this.s < 0;\n    }, O.isPositive = O.isPos = function () {\n      return this.s > 0;\n    }, O.isZero = function () {\n      return !!this.d && 0 === this.d[0];\n    }, O.lessThan = O.lt = function (n) {\n      return this.cmp(n) < 0;\n    }, O.lessThanOrEqualTo = O.lte = function (n) {\n      return this.cmp(n) < 1;\n    }, O.logarithm = O.log = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f = this.constructor,\n          a = f.precision,\n          d = f.rounding;\n      if (null == n) n = new f(10), e = !0;else {\n        if (i = (n = new f(n)).d, n.s < 0 || !i || !i[0] || n.eq(1)) return new f(NaN);\n        e = n.eq(10);\n      }\n      if (i = this.d, this.s < 0 || !i || !i[0] || this.eq(1)) return new f(i && !i[0] ? -1 / 0 : 1 != this.s ? NaN : i ? 0 : 1 / 0);\n      if (e) if (i.length > 1) s = !0;else {\n        for (r = i[0]; r % 10 == 0;) {\n          r /= 10;\n        }\n\n        s = 1 !== r;\n      }\n      if (h = !1, o = V(this, u = a + 5), t = e ? T(f, u + 10) : V(n, u), A((c = Z(o, t, u, 1)).d, r = a, d)) do {\n        if (o = V(this, u += 10), t = e ? T(f, u + 10) : V(n, u), c = Z(o, t, u, 1), !s) {\n          +D(c.d).slice(r + 1, r + 15) + 1 == 1e14 && (c = P(c, a + 1, 0));\n          break;\n        }\n      } while (A(c.d, r += 10, d));\n      return h = !0, P(c, a, d);\n    }, O.minus = O.sub = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          d,\n          l,\n          p = this,\n          g = p.constructor;\n      if (n = new g(n), !p.d || !n.d) return p.s && n.s ? p.d ? n.s = -n.s : n = new g(n.d || p.s !== n.s ? p : NaN) : n = new g(NaN), n;\n      if (p.s != n.s) return n.s = -n.s, p.plus(n);\n\n      if (f = p.d, l = n.d, u = g.precision, c = g.rounding, !f[0] || !l[0]) {\n        if (l[0]) n.s = -n.s;else {\n          if (!f[0]) return new g(3 === c ? -0 : 0);\n          n = new g(p);\n        }\n        return h ? P(n, u, c) : n;\n      }\n\n      if (i = m(n.e / y), a = m(p.e / y), f = f.slice(), s = a - i) {\n        for ((d = s < 0) ? (e = f, s = -s, o = l.length) : (e = l, i = a, o = f.length), s > (t = Math.max(Math.ceil(u / y), o) + 2) && (s = t, e.length = 1), e.reverse(), t = s; t--;) {\n          e.push(0);\n        }\n\n        e.reverse();\n      } else {\n        for ((d = (t = f.length) < (o = l.length)) && (o = t), t = 0; t < o; t++) {\n          if (f[t] != l[t]) {\n            d = f[t] < l[t];\n            break;\n          }\n        }\n\n        s = 0;\n      }\n\n      for (d && (e = f, f = l, l = e, n.s = -n.s), o = f.length, t = l.length - o; t > 0; --t) {\n        f[o++] = 0;\n      }\n\n      for (t = l.length; t > s;) {\n        if (f[--t] < l[t]) {\n          for (r = t; r && 0 === f[--r];) {\n            f[r] = x - 1;\n          }\n\n          --f[r], f[t] += x;\n        }\n\n        f[t] -= l[t];\n      }\n\n      for (; 0 === f[--o];) {\n        f.pop();\n      }\n\n      for (; 0 === f[0]; f.shift()) {\n        --i;\n      }\n\n      return f[0] ? (n.d = f, n.e = L(f, i), h ? P(n, u, c) : n) : new g(3 === c ? -0 : 0);\n    }, O.modulo = O.mod = function (n) {\n      var e,\n          i = this,\n          t = i.constructor;\n      return n = new t(n), !i.d || !n.s || n.d && !n.d[0] ? new t(NaN) : !n.d || i.d && !i.d[0] ? P(new t(i), t.precision, t.rounding) : (h = !1, 9 == t.modulo ? (e = Z(i, n.abs(), 0, 3, 1)).s *= n.s : e = Z(i, n, 0, t.modulo, 1), e = e.times(n), h = !0, i.minus(e));\n    }, O.naturalExponential = O.exp = function () {\n      return B(this);\n    }, O.naturalLogarithm = O.ln = function () {\n      return V(this);\n    }, O.negated = O.neg = function () {\n      var n = new this.constructor(this);\n      return n.s = -n.s, P(n);\n    }, O.plus = O.add = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          d = this,\n          l = d.constructor;\n      if (n = new l(n), !d.d || !n.d) return d.s && n.s ? d.d || (n = new l(n.d || d.s === n.s ? d : NaN)) : n = new l(NaN), n;\n      if (d.s != n.s) return n.s = -n.s, d.minus(n);\n      if (f = d.d, a = n.d, u = l.precision, c = l.rounding, !f[0] || !a[0]) return a[0] || (n = new l(d)), h ? P(n, u, c) : n;\n\n      if (s = m(d.e / y), t = m(n.e / y), f = f.slice(), r = s - t) {\n        for (r < 0 ? (i = f, r = -r, o = a.length) : (i = a, t = s, o = f.length), r > (o = (s = Math.ceil(u / y)) > o ? s + 1 : o + 1) && (r = o, i.length = 1), i.reverse(); r--;) {\n          i.push(0);\n        }\n\n        i.reverse();\n      }\n\n      for ((o = f.length) - (r = a.length) < 0 && (r = o, i = a, a = f, f = i), e = 0; r;) {\n        e = (f[--r] = f[r] + a[r] + e) / x | 0, f[r] %= x;\n      }\n\n      for (e && (f.unshift(e), ++t), o = f.length; 0 == f[--o];) {\n        f.pop();\n      }\n\n      return n.d = f, n.e = L(f, t), h ? P(n, u, c) : n;\n    }, O.precision = O.sd = function (n) {\n      var e,\n          i = this;\n      if (void 0 !== n && n !== !!n && 1 !== n && 0 !== n) throw Error(l + n);\n      return i.d ? (e = _(i.d), n && i.e + 1 > e && (e = i.e + 1)) : e = NaN, e;\n    }, O.round = function () {\n      var n = this,\n          e = n.constructor;\n      return P(new e(n), n.e + 1, e.rounding);\n    }, O.sine = O.sin = function () {\n      var n,\n          e,\n          i = this,\n          t = i.constructor;\n      return i.isFinite() ? i.isZero() ? new t(i) : (n = t.precision, e = t.rounding, t.precision = n + Math.max(i.e, i.sd()) + y, t.rounding = 1, i = function (n, e) {\n        var i,\n            t = e.d.length;\n        if (t < 3) return J(n, 2, e, e);\n        i = (i = 1.4 * Math.sqrt(t)) > 16 ? 16 : 0 | i, e = e.times(1 / z(5, i)), e = J(n, 2, e, e);\n\n        for (var r, s = new n(5), o = new n(16), u = new n(20); i--;) {\n          r = e.times(e), e = e.times(s.plus(r.times(o.times(r).minus(u))));\n        }\n\n        return e;\n      }(t, G(t, i)), t.precision = n, t.rounding = e, P(r > 2 ? i.neg() : i, n, e, !0)) : new t(NaN);\n    }, O.squareRoot = O.sqrt = function () {\n      var n,\n          e,\n          i,\n          t,\n          r,\n          s,\n          o = this,\n          u = o.d,\n          c = o.e,\n          f = o.s,\n          a = o.constructor;\n      if (1 !== f || !u || !u[0]) return new a(!f || f < 0 && (!u || u[0]) ? NaN : u ? o : 1 / 0);\n\n      for (h = !1, 0 == (f = Math.sqrt(+o)) || f == 1 / 0 ? (((e = D(u)).length + c) % 2 == 0 && (e += \"0\"), f = Math.sqrt(e), c = m((c + 1) / 2) - (c < 0 || c % 2), t = new a(e = f == 1 / 0 ? \"5e\" + c : (e = f.toExponential()).slice(0, e.indexOf(\"e\") + 1) + c)) : t = new a(f.toString()), i = (c = a.precision) + 3;;) {\n        if (t = (s = t).plus(Z(o, s, i + 2, 1)).times(.5), D(s.d).slice(0, i) === (e = D(t.d)).slice(0, i)) {\n          if (\"9999\" != (e = e.slice(i - 3, i + 1)) && (r || \"4999\" != e)) {\n            +e && (+e.slice(1) || \"5\" != e.charAt(0)) || (P(t, c + 1, 1), n = !t.times(t).eq(o));\n            break;\n          }\n\n          if (!r && (P(s, c + 1, 0), s.times(s).eq(o))) {\n            t = s;\n            break;\n          }\n\n          i += 4, r = 1;\n        }\n      }\n\n      return h = !0, P(t, c, a.rounding, n);\n    }, O.tangent = O.tan = function () {\n      var n,\n          e,\n          i = this,\n          t = i.constructor;\n      return i.isFinite() ? i.isZero() ? new t(i) : (n = t.precision, e = t.rounding, t.precision = n + 10, t.rounding = 1, (i = i.sin()).s = 1, i = Z(i, new t(1).minus(i.times(i)).sqrt(), n + 10, 0), t.precision = n, t.rounding = e, P(2 == r || 4 == r ? i.neg() : i, n, e, !0)) : new t(NaN);\n    }, O.times = O.mul = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a = this,\n          d = a.constructor,\n          l = a.d,\n          p = (n = new d(n)).d;\n      if (n.s *= a.s, !(l && l[0] && p && p[0])) return new d(!n.s || l && !l[0] && !p || p && !p[0] && !l ? NaN : l && p ? 0 * n.s : n.s / 0);\n\n      for (i = m(a.e / y) + m(n.e / y), (c = l.length) < (f = p.length) && (s = l, l = p, p = s, o = c, c = f, f = o), s = [], t = o = c + f; t--;) {\n        s.push(0);\n      }\n\n      for (t = f; --t >= 0;) {\n        for (e = 0, r = c + t; r > t;) {\n          u = s[r] + p[t] * l[r - t - 1] + e, s[r--] = u % x | 0, e = u / x | 0;\n        }\n\n        s[r] = (s[r] + e) % x | 0;\n      }\n\n      for (; !s[--o];) {\n        s.pop();\n      }\n\n      return e ? ++i : s.shift(), n.d = s, n.e = L(s, i), h ? P(n, d.precision, d.rounding) : n;\n    }, O.toBinary = function (n, e) {\n      return K(this, 2, n, e);\n    }, O.toDecimalPlaces = O.toDP = function (n, e) {\n      var i = this,\n          t = i.constructor;\n      return i = new t(i), void 0 === n ? i : (F(n, 0, o), void 0 === e ? e = t.rounding : F(e, 0, 8), P(i, n + i.e + 1, e));\n    }, O.toExponential = function (n, e) {\n      var i,\n          t = this,\n          r = t.constructor;\n      return void 0 === n ? i = R(t, !0) : (F(n, 0, o), void 0 === e ? e = r.rounding : F(e, 0, 8), i = R(t = P(new r(t), n + 1, e), !0, n + 1)), t.isNeg() && !t.isZero() ? \"-\" + i : i;\n    }, O.toFixed = function (n, e) {\n      var i,\n          t,\n          r = this,\n          s = r.constructor;\n      return void 0 === n ? i = R(r) : (F(n, 0, o), void 0 === e ? e = s.rounding : F(e, 0, 8), i = R(t = P(new s(r), n + r.e + 1, e), !1, n + t.e + 1)), r.isNeg() && !r.isZero() ? \"-\" + i : i;\n    }, O.toFraction = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          d,\n          p,\n          g = this,\n          m = g.d,\n          v = g.constructor;\n      if (!m) return new v(g);\n      if (f = i = new v(1), t = c = new v(0), o = (s = (e = new v(t)).e = _(m) - g.e - 1) % y, e.d[0] = w(10, o < 0 ? y + o : o), null == n) n = s > 0 ? e : f;else {\n        if (!(u = new v(n)).isInt() || u.lt(f)) throw Error(l + u);\n        n = u.gt(e) ? s > 0 ? e : f : u;\n      }\n\n      for (h = !1, u = new v(D(m)), a = v.precision, v.precision = s = m.length * y * 2; d = Z(u, e, 0, 1, 1), 1 != (r = i.plus(d.times(t))).cmp(n);) {\n        i = t, t = r, r = f, f = c.plus(d.times(r)), c = r, r = e, e = u.minus(d.times(r)), u = r;\n      }\n\n      return r = Z(n.minus(i), t, 0, 1, 1), c = c.plus(r.times(f)), i = i.plus(r.times(t)), c.s = f.s = g.s, p = Z(f, t, s, 1).minus(g).abs().cmp(Z(c, i, s, 1).minus(g).abs()) < 1 ? [f, t] : [c, i], v.precision = a, h = !0, p;\n    }, O.toHexadecimal = O.toHex = function (n, e) {\n      return K(this, 16, n, e);\n    }, O.toNearest = function (n, e) {\n      var i = this,\n          t = i.constructor;\n\n      if (i = new t(i), null == n) {\n        if (!i.d) return i;\n        n = new t(1), e = t.rounding;\n      } else {\n        if (n = new t(n), void 0 === e ? e = t.rounding : F(e, 0, 8), !i.d) return n.s ? i : n;\n        if (!n.d) return n.s && (n.s = i.s), n;\n      }\n\n      return n.d[0] ? (h = !1, i = Z(i, n, 0, e, 1).times(n), h = !0, P(i)) : (n.s = i.s, i = n), i;\n    }, O.toNumber = function () {\n      return +this;\n    }, O.toOctal = function (n, e) {\n      return K(this, 8, n, e);\n    }, O.toPower = O.pow = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u = this,\n          c = u.constructor,\n          f = +(n = new c(n));\n      if (!(u.d && n.d && u.d[0] && n.d[0])) return new c(w(+u, f));\n      if ((u = new c(u)).eq(1)) return u;\n      if (t = c.precision, s = c.rounding, n.eq(1)) return P(u, t, s);\n      if ((e = m(n.e / y)) >= n.d.length - 1 && (i = f < 0 ? -f : f) <= 9007199254740991) return r = C(c, u, i, t), n.s < 0 ? new c(1).div(r) : P(r, t, s);\n\n      if ((o = u.s) < 0) {\n        if (e < n.d.length - 1) return new c(NaN);\n        if (0 == (1 & n.d[e]) && (o = 1), 0 == u.e && 1 == u.d[0] && 1 == u.d.length) return u.s = o, u;\n      }\n\n      return (e = 0 != (i = w(+u, f)) && isFinite(i) ? new c(i + \"\").e : m(f * (Math.log(\"0.\" + D(u.d)) / Math.LN10 + u.e + 1))) > c.maxE + 1 || e < c.minE - 1 ? new c(e > 0 ? o / 0 : 0) : (h = !1, c.rounding = u.s = 1, i = Math.min(12, (e + \"\").length), (r = B(n.times(V(u, t + i)), t)).d && A((r = P(r, t + 5, 1)).d, t, s) && (e = t + 10, +D((r = P(B(n.times(V(u, e + i)), e), e + 5, 1)).d).slice(t + 1, t + 15) + 1 == 1e14 && (r = P(r, t + 1, 0))), r.s = o, h = !0, c.rounding = s, P(r, t, s));\n    }, O.toPrecision = function (n, e) {\n      var i,\n          t = this,\n          r = t.constructor;\n      return void 0 === n ? i = R(t, t.e <= r.toExpNeg || t.e >= r.toExpPos) : (F(n, 1, o), void 0 === e ? e = r.rounding : F(e, 0, 8), i = R(t = P(new r(t), n, e), n <= t.e || t.e <= r.toExpNeg, n)), t.isNeg() && !t.isZero() ? \"-\" + i : i;\n    }, O.toSignificantDigits = O.toSD = function (n, e) {\n      var i = this.constructor;\n      return void 0 === n ? (n = i.precision, e = i.rounding) : (F(n, 1, o), void 0 === e ? e = i.rounding : F(e, 0, 8)), P(new i(this), n, e);\n    }, O.toString = function () {\n      var n = this,\n          e = n.constructor,\n          i = R(n, n.e <= e.toExpNeg || n.e >= e.toExpPos);\n      return n.isNeg() && !n.isZero() ? \"-\" + i : i;\n    }, O.truncated = O.trunc = function () {\n      return P(new this.constructor(this), this.e + 1, 1);\n    }, O.valueOf = O.toJSON = function () {\n      var n = this,\n          e = n.constructor,\n          i = R(n, n.e <= e.toExpNeg || n.e >= e.toExpPos);\n      return n.isNeg() ? \"-\" + i : i;\n    };\n\n    var Z = function () {\n      function n(n, e, i) {\n        var t,\n            r = 0,\n            s = n.length;\n\n        for (n = n.slice(); s--;) {\n          t = n[s] * e + r, n[s] = t % i | 0, r = t / i | 0;\n        }\n\n        return r && n.unshift(r), n;\n      }\n\n      function e(n, e, i, t) {\n        var r, s;\n        if (i != t) s = i > t ? 1 : -1;else for (r = s = 0; r < i; r++) {\n          if (n[r] != e[r]) {\n            s = n[r] > e[r] ? 1 : -1;\n            break;\n          }\n        }\n        return s;\n      }\n\n      function t(n, e, i, t) {\n        for (var r = 0; i--;) {\n          n[i] -= r, r = n[i] < e[i] ? 1 : 0, n[i] = r * t + n[i] - e[i];\n        }\n\n        for (; !n[0] && n.length > 1;) {\n          n.shift();\n        }\n      }\n\n      return function (r, s, o, u, c, f) {\n        var a,\n            h,\n            d,\n            l,\n            p,\n            g,\n            w,\n            v,\n            N,\n            b,\n            E,\n            M,\n            q,\n            O,\n            D,\n            F,\n            A,\n            S,\n            Z,\n            R,\n            L = r.constructor,\n            T = r.s == s.s ? 1 : -1,\n            U = r.d,\n            _ = s.d;\n        if (!(U && U[0] && _ && _[0])) return new L(r.s && s.s && (U ? !_ || U[0] != _[0] : _) ? U && 0 == U[0] || !_ ? 0 * T : T / 0 : NaN);\n\n        for (f ? (p = 1, h = r.e - s.e) : (f = x, p = y, h = m(r.e / p) - m(s.e / p)), Z = _.length, A = U.length, b = (N = new L(T)).d = [], d = 0; _[d] == (U[d] || 0); d++) {\n          ;\n        }\n\n        if (_[d] > (U[d] || 0) && h--, null == o ? (O = o = L.precision, u = L.rounding) : O = c ? o + (r.e - s.e) + 1 : o, O < 0) b.push(1), g = !0;else {\n          if (O = O / p + 2 | 0, d = 0, 1 == Z) {\n            for (l = 0, _ = _[0], O++; (d < A || l) && O--; d++) {\n              D = l * f + (U[d] || 0), b[d] = D / _ | 0, l = D % _ | 0;\n            }\n\n            g = l || d < A;\n          } else {\n            for ((l = f / (_[0] + 1) | 0) > 1 && (_ = n(_, l, f), U = n(U, l, f), Z = _.length, A = U.length), F = Z, M = (E = U.slice(0, Z)).length; M < Z;) {\n              E[M++] = 0;\n            }\n\n            (R = _.slice()).unshift(0), S = _[0], _[1] >= f / 2 && ++S;\n\n            do {\n              l = 0, (a = e(_, E, Z, M)) < 0 ? (q = E[0], Z != M && (q = q * f + (E[1] || 0)), (l = q / S | 0) > 1 ? (l >= f && (l = f - 1), 1 == (a = e(w = n(_, l, f), E, v = w.length, M = E.length)) && (l--, t(w, Z < v ? R : _, v, f))) : (0 == l && (a = l = 1), w = _.slice()), (v = w.length) < M && w.unshift(0), t(E, w, M, f), -1 == a && (a = e(_, E, Z, M = E.length)) < 1 && (l++, t(E, Z < M ? R : _, M, f)), M = E.length) : 0 === a && (l++, E = [0]), b[d++] = l, a && E[0] ? E[M++] = U[F] || 0 : (E = [U[F]], M = 1);\n            } while ((F++ < A || void 0 !== E[0]) && O--);\n\n            g = void 0 !== E[0];\n          }\n\n          b[0] || b.shift();\n        }\n        if (1 == p) N.e = h, i = g;else {\n          for (d = 1, l = b[0]; l >= 10; l /= 10) {\n            d++;\n          }\n\n          N.e = d + h * p - 1, P(N, c ? o + N.e + 1 : o, u, g);\n        }\n        return N;\n      };\n    }();\n\n    function P(n, e, i, t) {\n      var r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          d,\n          l,\n          p = n.constructor;\n\n      n: if (null != e) {\n        if (!(d = n.d)) return n;\n\n        for (r = 1, u = d[0]; u >= 10; u /= 10) {\n          r++;\n        }\n\n        if ((s = e - r) < 0) s += y, o = e, c = (a = d[l = 0]) / w(10, r - o - 1) % 10 | 0;else if ((l = Math.ceil((s + 1) / y)) >= (u = d.length)) {\n          if (!t) break n;\n\n          for (; u++ <= l;) {\n            d.push(0);\n          }\n\n          a = c = 0, r = 1, o = (s %= y) - y + 1;\n        } else {\n          for (a = u = d[l], r = 1; u >= 10; u /= 10) {\n            r++;\n          }\n\n          c = (o = (s %= y) - y + r) < 0 ? 0 : a / w(10, r - o - 1) % 10 | 0;\n        }\n        if (t = t || e < 0 || void 0 !== d[l + 1] || (o < 0 ? a : a % w(10, r - o - 1)), f = i < 4 ? (c || t) && (0 == i || i == (n.s < 0 ? 3 : 2)) : c > 5 || 5 == c && (4 == i || t || 6 == i && (s > 0 ? o > 0 ? a / w(10, r - o) : 0 : d[l - 1]) % 10 & 1 || i == (n.s < 0 ? 8 : 7)), e < 1 || !d[0]) return d.length = 0, f ? (e -= n.e + 1, d[0] = w(10, (y - e % y) % y), n.e = -e || 0) : d[0] = n.e = 0, n;\n        if (0 == s ? (d.length = l, u = 1, l--) : (d.length = l + 1, u = w(10, y - s), d[l] = o > 0 ? (a / w(10, r - o) % w(10, o) | 0) * u : 0), f) for (;;) {\n          if (0 == l) {\n            for (s = 1, o = d[0]; o >= 10; o /= 10) {\n              s++;\n            }\n\n            for (o = d[0] += u, u = 1; o >= 10; o /= 10) {\n              u++;\n            }\n\n            s != u && (n.e++, d[0] == x && (d[0] = 1));\n            break;\n          }\n\n          if (d[l] += u, d[l] != x) break;\n          d[l--] = 0, u = 1;\n        }\n\n        for (s = d.length; 0 === d[--s];) {\n          d.pop();\n        }\n      }\n\n      return h && (n.e > p.maxE ? (n.d = null, n.e = NaN) : n.e < p.minE && (n.e = 0, n.d = [0])), n;\n    }\n\n    function R(n, e, i) {\n      if (!n.isFinite()) return j(n);\n      var t,\n          r = n.e,\n          s = D(n.d),\n          o = s.length;\n      return e ? (i && (t = i - o) > 0 ? s = s.charAt(0) + \".\" + s.slice(1) + k(t) : o > 1 && (s = s.charAt(0) + \".\" + s.slice(1)), s = s + (n.e < 0 ? \"e\" : \"e+\") + n.e) : r < 0 ? (s = \"0.\" + k(-r - 1) + s, i && (t = i - o) > 0 && (s += k(t))) : r >= o ? (s += k(r + 1 - o), i && (t = i - r - 1) > 0 && (s = s + \".\" + k(t))) : ((t = r + 1) < o && (s = s.slice(0, t) + \".\" + s.slice(t)), i && (t = i - o) > 0 && (r + 1 === o && (s += \".\"), s += k(t))), s;\n    }\n\n    function L(n, e) {\n      var i = n[0];\n\n      for (e *= y; i >= 10; i /= 10) {\n        e++;\n      }\n\n      return e;\n    }\n\n    function T(n, e, i) {\n      if (e > M) throw h = !0, i && (n.precision = i), Error(p);\n      return P(new n(c), e, 1, !0);\n    }\n\n    function U(n, e, i) {\n      if (e > q) throw Error(p);\n      return P(new n(f), e, i, !0);\n    }\n\n    function _(n) {\n      var e = n.length - 1,\n          i = e * y + 1;\n\n      if (e = n[e]) {\n        for (; e % 10 == 0; e /= 10) {\n          i--;\n        }\n\n        for (e = n[0]; e >= 10; e /= 10) {\n          i++;\n        }\n      }\n\n      return i;\n    }\n\n    function k(n) {\n      for (var e = \"\"; n--;) {\n        e += \"0\";\n      }\n\n      return e;\n    }\n\n    function C(n, e, i, t) {\n      var r,\n          s = new n(1),\n          o = Math.ceil(t / y + 4);\n\n      for (h = !1;;) {\n        if (i % 2 && Q((s = s.times(e)).d, o) && (r = !0), 0 === (i = m(i / 2))) {\n          i = s.d.length - 1, r && 0 === s.d[i] && ++s.d[i];\n          break;\n        }\n\n        Q((e = e.times(e)).d, o);\n      }\n\n      return h = !0, s;\n    }\n\n    function I(n) {\n      return 1 & n.d[n.d.length - 1];\n    }\n\n    function H(n, e, i) {\n      for (var t, r = new n(e[0]), s = 0; ++s < e.length;) {\n        if (!(t = new n(e[s])).s) {\n          r = t;\n          break;\n        }\n\n        r[i](t) && (r = t);\n      }\n\n      return r;\n    }\n\n    function B(n, e) {\n      var i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f = 0,\n          a = 0,\n          d = 0,\n          l = n.constructor,\n          p = l.rounding,\n          g = l.precision;\n      if (!n.d || !n.d[0] || n.e > 17) return new l(n.d ? n.d[0] ? n.s < 0 ? 0 : 1 / 0 : 1 : n.s ? n.s < 0 ? 0 : n : NaN);\n\n      for (null == e ? (h = !1, c = g) : c = e, u = new l(.03125); n.e > -2;) {\n        n = n.times(u), d += 5;\n      }\n\n      for (c += t = Math.log(w(2, d)) / Math.LN10 * 2 + 5 | 0, i = s = o = new l(1), l.precision = c;;) {\n        if (s = P(s.times(n), c, 1), i = i.times(++a), D((u = o.plus(Z(s, i, c, 1))).d).slice(0, c) === D(o.d).slice(0, c)) {\n          for (r = d; r--;) {\n            o = P(o.times(o), c, 1);\n          }\n\n          if (null != e) return l.precision = g, o;\n          if (!(f < 3 && A(o.d, c - t, p, f))) return P(o, l.precision = g, p, h = !0);\n          l.precision = c += 10, i = s = u = new l(1), a = 0, f++;\n        }\n\n        o = u;\n      }\n    }\n\n    function V(n, e) {\n      var i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          d,\n          l,\n          p = 1,\n          g = n,\n          m = g.d,\n          w = g.constructor,\n          v = w.rounding,\n          N = w.precision;\n      if (g.s < 0 || !m || !m[0] || !g.e && 1 == m[0] && 1 == m.length) return new w(m && !m[0] ? -1 / 0 : 1 != g.s ? NaN : m ? 0 : g);\n      if (null == e ? (h = !1, a = N) : a = e, w.precision = a += 10, t = (i = D(m)).charAt(0), !(Math.abs(s = g.e) < 15e14)) return f = T(w, a + 2, N).times(s + \"\"), g = V(new w(t + \".\" + i.slice(1)), a - 10).plus(f), w.precision = N, null == e ? P(g, N, v, h = !0) : g;\n\n      for (; t < 7 && 1 != t || 1 == t && i.charAt(1) > 3;) {\n        t = (i = D((g = g.times(n)).d)).charAt(0), p++;\n      }\n\n      for (s = g.e, t > 1 ? (g = new w(\"0.\" + i), s++) : g = new w(t + \".\" + i.slice(1)), d = g, c = o = g = Z(g.minus(1), g.plus(1), a, 1), l = P(g.times(g), a, 1), r = 3;;) {\n        if (o = P(o.times(l), a, 1), D((f = c.plus(Z(o, new w(r), a, 1))).d).slice(0, a) === D(c.d).slice(0, a)) {\n          if (c = c.times(2), 0 !== s && (c = c.plus(T(w, a + 2, N).times(s + \"\"))), c = Z(c, new w(p), a, 1), null != e) return w.precision = N, c;\n          if (!A(c.d, a - 10, v, u)) return P(c, w.precision = N, v, h = !0);\n          w.precision = a += 10, f = o = g = Z(d.minus(1), d.plus(1), a, 1), l = P(g.times(g), a, 1), r = u = 1;\n        }\n\n        c = f, r += 2;\n      }\n    }\n\n    function j(n) {\n      return String(n.s * n.s / 0);\n    }\n\n    function $(n, e) {\n      var i, t, r;\n\n      for ((i = e.indexOf(\".\")) > -1 && (e = e.replace(\".\", \"\")), (t = e.search(/e/i)) > 0 ? (i < 0 && (i = t), i += +e.slice(t + 1), e = e.substring(0, t)) : i < 0 && (i = e.length), t = 0; 48 === e.charCodeAt(t); t++) {\n        ;\n      }\n\n      for (r = e.length; 48 === e.charCodeAt(r - 1); --r) {\n        ;\n      }\n\n      if (e = e.slice(t, r)) {\n        if (r -= t, n.e = i = i - t - 1, n.d = [], t = (i + 1) % y, i < 0 && (t += y), t < r) {\n          for (t && n.d.push(+e.slice(0, t)), r -= y; t < r;) {\n            n.d.push(+e.slice(t, t += y));\n          }\n\n          e = e.slice(t), t = y - e.length;\n        } else t -= r;\n\n        for (; t--;) {\n          e += \"0\";\n        }\n\n        n.d.push(+e), h && (n.e > n.constructor.maxE ? (n.d = null, n.e = NaN) : n.e < n.constructor.minE && (n.e = 0, n.d = [0]));\n      } else n.e = 0, n.d = [0];\n\n      return n;\n    }\n\n    function W(n, i) {\n      var t, r, s, o, u, c, f, a, d;\n      if (\"Infinity\" === i || \"NaN\" === i) return +i || (n.s = NaN), n.e = NaN, n.d = null, n;\n      if (N.test(i)) t = 16, i = i.toLowerCase();else if (v.test(i)) t = 2;else {\n        if (!b.test(i)) throw Error(l + i);\n        t = 8;\n      }\n\n      for ((o = i.search(/p/i)) > 0 ? (f = +i.slice(o + 1), i = i.substring(2, o)) : i = i.slice(2), u = (o = i.indexOf(\".\")) >= 0, r = n.constructor, u && (o = (c = (i = i.replace(\".\", \"\")).length) - o, s = C(r, new r(t), o, 2 * o)), o = d = (a = S(i, t, x)).length - 1; 0 === a[o]; --o) {\n        a.pop();\n      }\n\n      return o < 0 ? new r(0 * n.s) : (n.e = L(a, d), n.d = a, h = !1, u && (n = Z(n, s, 4 * c)), f && (n = n.times(Math.abs(f) < 54 ? w(2, f) : e.pow(2, f))), h = !0, n);\n    }\n\n    function J(n, e, i, t, r) {\n      var s,\n          o,\n          u,\n          c,\n          f = n.precision,\n          a = Math.ceil(f / y);\n\n      for (h = !1, c = i.times(i), u = new n(t);;) {\n        if (o = Z(u.times(c), new n(e++ * e++), f, 1), u = r ? t.plus(o) : t.minus(o), t = Z(o.times(c), new n(e++ * e++), f, 1), void 0 !== (o = u.plus(t)).d[a]) {\n          for (s = a; o.d[s] === u.d[s] && s--;) {\n            ;\n          }\n\n          if (-1 == s) break;\n        }\n\n        s = u, u = t, t = o, o = s, 0;\n      }\n\n      return h = !0, o.d.length = a + 1, o;\n    }\n\n    function z(n, e) {\n      for (var i = n; --e;) {\n        i *= n;\n      }\n\n      return i;\n    }\n\n    function G(n, e) {\n      var i,\n          t = e.s < 0,\n          s = U(n, n.precision, 1),\n          o = s.times(.5);\n      if ((e = e.abs()).lte(o)) return r = t ? 4 : 1, e;\n      if ((i = e.divToInt(s)).isZero()) r = t ? 3 : 2;else {\n        if ((e = e.minus(i.times(s))).lte(o)) return r = I(i) ? t ? 2 : 3 : t ? 4 : 1, e;\n        r = I(i) ? t ? 1 : 4 : t ? 3 : 2;\n      }\n      return e.minus(s).abs();\n    }\n\n    function K(n, e, t, r) {\n      var s,\n          c,\n          f,\n          a,\n          h,\n          d,\n          l,\n          p,\n          g,\n          m = n.constructor,\n          w = void 0 !== t;\n\n      if (w ? (F(t, 1, o), void 0 === r ? r = m.rounding : F(r, 0, 8)) : (t = m.precision, r = m.rounding), n.isFinite()) {\n        for (w ? (s = 2, 16 == e ? t = 4 * t - 3 : 8 == e && (t = 3 * t - 2)) : s = e, (f = (l = R(n)).indexOf(\".\")) >= 0 && (l = l.replace(\".\", \"\"), (g = new m(1)).e = l.length - f, g.d = S(R(g), 10, s), g.e = g.d.length), c = h = (p = S(l, 10, s)).length; 0 == p[--h];) {\n          p.pop();\n        }\n\n        if (p[0]) {\n          if (f < 0 ? c-- : ((n = new m(n)).d = p, n.e = c, p = (n = Z(n, g, t, r, 0, s)).d, c = n.e, d = i), f = p[t], a = s / 2, d = d || void 0 !== p[t + 1], d = r < 4 ? (void 0 !== f || d) && (0 === r || r === (n.s < 0 ? 3 : 2)) : f > a || f === a && (4 === r || d || 6 === r && 1 & p[t - 1] || r === (n.s < 0 ? 8 : 7)), p.length = t, d) for (; ++p[--t] > s - 1;) {\n            p[t] = 0, t || (++c, p.unshift(1));\n          }\n\n          for (h = p.length; !p[h - 1]; --h) {\n            ;\n          }\n\n          for (f = 0, l = \"\"; f < h; f++) {\n            l += u.charAt(p[f]);\n          }\n\n          if (w) {\n            if (h > 1) if (16 == e || 8 == e) {\n              for (f = 16 == e ? 4 : 3, --h; h % f; h++) {\n                l += \"0\";\n              }\n\n              for (h = (p = S(l, s, e)).length; !p[h - 1]; --h) {\n                ;\n              }\n\n              for (f = 1, l = \"1.\"; f < h; f++) {\n                l += u.charAt(p[f]);\n              }\n            } else l = l.charAt(0) + \".\" + l.slice(1);\n            l = l + (c < 0 ? \"p\" : \"p+\") + c;\n          } else if (c < 0) {\n            for (; ++c;) {\n              l = \"0\" + l;\n            }\n\n            l = \"0.\" + l;\n          } else if (++c > h) for (c -= h; c--;) {\n            l += \"0\";\n          } else c < h && (l = l.slice(0, c) + \".\" + l.slice(c));\n        } else l = w ? \"0p+0\" : \"0\";\n\n        l = (16 == e ? \"0x\" : 2 == e ? \"0b\" : 8 == e ? \"0o\" : \"\") + l;\n      } else l = j(n);\n\n      return n.s < 0 ? \"-\" + l : l;\n    }\n\n    function Q(n, e) {\n      if (n.length > e) return n.length = e, !0;\n    }\n\n    function X(n) {\n      return new this(n).abs();\n    }\n\n    function Y(n) {\n      return new this(n).acos();\n    }\n\n    function nn(n) {\n      return new this(n).acosh();\n    }\n\n    function en(n, e) {\n      return new this(n).plus(e);\n    }\n\n    function tn(n) {\n      return new this(n).asin();\n    }\n\n    function rn(n) {\n      return new this(n).asinh();\n    }\n\n    function sn(n) {\n      return new this(n).atan();\n    }\n\n    function on(n) {\n      return new this(n).atanh();\n    }\n\n    function un(n, e) {\n      n = new this(n), e = new this(e);\n      var i,\n          t = this.precision,\n          r = this.rounding,\n          s = t + 4;\n      return n.s && e.s ? n.d || e.d ? !e.d || n.isZero() ? (i = e.s < 0 ? U(this, t, r) : new this(0)).s = n.s : !n.d || e.isZero() ? (i = U(this, s, 1).times(.5)).s = n.s : e.s < 0 ? (this.precision = s, this.rounding = 1, i = this.atan(Z(n, e, s, 1)), e = U(this, s, 1), this.precision = t, this.rounding = r, i = n.s < 0 ? i.minus(e) : i.plus(e)) : i = this.atan(Z(n, e, s, 1)) : (i = U(this, s, 1).times(e.s > 0 ? .25 : .75)).s = n.s : i = new this(NaN), i;\n    }\n\n    function cn(n) {\n      return new this(n).cbrt();\n    }\n\n    function fn(n) {\n      return P(n = new this(n), n.e + 1, 2);\n    }\n\n    function an(n) {\n      if (!n || \"object\" != typeof n) throw Error(d + \"Object expected\");\n      var e,\n          i,\n          t,\n          r = !0 === n.defaults,\n          u = [\"precision\", 1, o, \"rounding\", 0, 8, \"toExpNeg\", -s, 0, \"toExpPos\", 0, s, \"maxE\", 0, s, \"minE\", -s, 0, \"modulo\", 0, 9];\n\n      for (e = 0; e < u.length; e += 3) {\n        if (i = u[e], r && (this[i] = a[i]), void 0 !== (t = n[i])) {\n          if (!(m(t) === t && t >= u[e + 1] && t <= u[e + 2])) throw Error(l + i + \": \" + t);\n          this[i] = t;\n        }\n      }\n\n      if (i = \"crypto\", r && (this[i] = a[i]), void 0 !== (t = n[i])) {\n        if (!0 !== t && !1 !== t && 0 !== t && 1 !== t) throw Error(l + i + \": \" + t);\n\n        if (t) {\n          if (\"undefined\" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw Error(g);\n          this[i] = !0;\n        } else this[i] = !1;\n      }\n\n      return this;\n    }\n\n    function hn(n) {\n      return new this(n).cos();\n    }\n\n    function dn(n) {\n      return new this(n).cosh();\n    }\n\n    function ln(n, e) {\n      return new this(n).div(e);\n    }\n\n    function pn(n) {\n      return new this(n).exp();\n    }\n\n    function gn(n) {\n      return P(n = new this(n), n.e + 1, 3);\n    }\n\n    function mn() {\n      var n,\n          e,\n          i = new this(0);\n\n      for (h = !1, n = 0; n < arguments.length;) {\n        if ((e = new this(arguments[n++])).d) i.d && (i = i.plus(e.times(e)));else {\n          if (e.s) return h = !0, new this(1 / 0);\n          i = e;\n        }\n      }\n\n      return h = !0, i.sqrt();\n    }\n\n    function wn(n) {\n      return n instanceof e || n && \"[object Decimal]\" === n.name || !1;\n    }\n\n    function vn(n) {\n      return new this(n).ln();\n    }\n\n    function Nn(n, e) {\n      return new this(n).log(e);\n    }\n\n    function bn(n) {\n      return new this(n).log(2);\n    }\n\n    function En(n) {\n      return new this(n).log(10);\n    }\n\n    function xn() {\n      return H(this, arguments, \"lt\");\n    }\n\n    function yn() {\n      return H(this, arguments, \"gt\");\n    }\n\n    function Mn(n, e) {\n      return new this(n).mod(e);\n    }\n\n    function qn(n, e) {\n      return new this(n).mul(e);\n    }\n\n    function On(n, e) {\n      return new this(n).pow(e);\n    }\n\n    function Dn(n) {\n      var e,\n          i,\n          t,\n          r,\n          s = 0,\n          u = new this(1),\n          c = [];\n      if (void 0 === n ? n = this.precision : F(n, 1, o), t = Math.ceil(n / y), this.crypto) {\n        if (crypto.getRandomValues) for (e = crypto.getRandomValues(new Uint32Array(t)); s < t;) {\n          (r = e[s]) >= 429e7 ? e[s] = crypto.getRandomValues(new Uint32Array(1))[0] : c[s++] = r % 1e7;\n        } else {\n          if (!crypto.randomBytes) throw Error(g);\n\n          for (e = crypto.randomBytes(t *= 4); s < t;) {\n            (r = e[s] + (e[s + 1] << 8) + (e[s + 2] << 16) + ((127 & e[s + 3]) << 24)) >= 214e7 ? crypto.randomBytes(4).copy(e, s) : (c.push(r % 1e7), s += 4);\n          }\n\n          s = t / 4;\n        }\n      } else for (; s < t;) {\n        c[s++] = 1e7 * Math.random() | 0;\n      }\n\n      for (t = c[--s], n %= y, t && n && (r = w(10, y - n), c[s] = (t / r | 0) * r); 0 === c[s]; s--) {\n        c.pop();\n      }\n\n      if (s < 0) i = 0, c = [0];else {\n        for (i = -1; 0 === c[0]; i -= y) {\n          c.shift();\n        }\n\n        for (t = 1, r = c[0]; r >= 10; r /= 10) {\n          t++;\n        }\n\n        t < y && (i -= y - t);\n      }\n      return u.e = i, u.d = c, u;\n    }\n\n    function Fn(n) {\n      return P(n = new this(n), n.e + 1, this.rounding);\n    }\n\n    function An(n) {\n      return (n = new this(n)).d ? n.d[0] ? n.s : 0 * n.s : n.s || NaN;\n    }\n\n    function Sn(n) {\n      return new this(n).sin();\n    }\n\n    function Zn(n) {\n      return new this(n).sinh();\n    }\n\n    function Pn(n) {\n      return new this(n).sqrt();\n    }\n\n    function Rn(n, e) {\n      return new this(n).sub(e);\n    }\n\n    function Ln(n) {\n      return new this(n).tan();\n    }\n\n    function Tn(n) {\n      return new this(n).tanh();\n    }\n\n    function Un(n) {\n      return P(n = new this(n), n.e + 1, 1);\n    }\n\n    return (e = function n(e) {\n      var i, t, r;\n\n      function s(n) {\n        var e,\n            i,\n            t,\n            r = this;\n        if (!(r instanceof s)) return new s(n);\n        if (r.constructor = s, n instanceof s) return r.s = n.s, void (h ? !n.d || n.e > s.maxE ? (r.e = NaN, r.d = null) : n.e < s.minE ? (r.e = 0, r.d = [0]) : (r.e = n.e, r.d = n.d.slice()) : (r.e = n.e, r.d = n.d ? n.d.slice() : n.d));\n\n        if (\"number\" == (t = typeof n)) {\n          if (0 === n) return r.s = 1 / n < 0 ? -1 : 1, r.e = 0, void (r.d = [0]);\n\n          if (n < 0 ? (n = -n, r.s = -1) : r.s = 1, n === ~~n && n < 1e7) {\n            for (e = 0, i = n; i >= 10; i /= 10) {\n              e++;\n            }\n\n            return void (h ? e > s.maxE ? (r.e = NaN, r.d = null) : e < s.minE ? (r.e = 0, r.d = [0]) : (r.e = e, r.d = [n]) : (r.e = e, r.d = [n]));\n          }\n\n          return 0 * n != 0 ? (n || (r.s = NaN), r.e = NaN, void (r.d = null)) : $(r, n.toString());\n        }\n\n        if (\"string\" !== t) throw Error(l + n);\n        return 45 === (i = n.charCodeAt(0)) ? (n = n.slice(1), r.s = -1) : (43 === i && (n = n.slice(1)), r.s = 1), E.test(n) ? $(r, n) : W(r, n);\n      }\n\n      if (s.prototype = O, s.ROUND_UP = 0, s.ROUND_DOWN = 1, s.ROUND_CEIL = 2, s.ROUND_FLOOR = 3, s.ROUND_HALF_UP = 4, s.ROUND_HALF_DOWN = 5, s.ROUND_HALF_EVEN = 6, s.ROUND_HALF_CEIL = 7, s.ROUND_HALF_FLOOR = 8, s.EUCLID = 9, s.config = s.set = an, s.clone = n, s.isDecimal = wn, s.abs = X, s.acos = Y, s.acosh = nn, s.add = en, s.asin = tn, s.asinh = rn, s.atan = sn, s.atanh = on, s.atan2 = un, s.cbrt = cn, s.ceil = fn, s.cos = hn, s.cosh = dn, s.div = ln, s.exp = pn, s.floor = gn, s.hypot = mn, s.ln = vn, s.log = Nn, s.log10 = En, s.log2 = bn, s.max = xn, s.min = yn, s.mod = Mn, s.mul = qn, s.pow = On, s.random = Dn, s.round = Fn, s.sign = An, s.sin = Sn, s.sinh = Zn, s.sqrt = Pn, s.sub = Rn, s.tan = Ln, s.tanh = Tn, s.trunc = Un, void 0 === e && (e = {}), e && !0 !== e.defaults) for (r = [\"precision\", \"rounding\", \"toExpNeg\", \"toExpPos\", \"maxE\", \"minE\", \"modulo\", \"crypto\"], i = 0; i < r.length;) {\n        e.hasOwnProperty(t = r[i++]) || (e[t] = this[t]);\n      }\n      return s.config(e), s;\n    }(a)).default = e.Decimal = e, c = new e(c), f = new e(f), \"function\" == typeof define && define.amd ? define(function () {\n      return e;\n    }) : \"undefined\" != typeof module && module.exports ? (\"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator && (O[Symbol.for(\"nodejs.util.inspect.custom\")] = O.toString, O[Symbol.toStringTag] = \"Decimal\"), module.exports = e) : (n || (n = \"undefined\" != typeof self && self && self.self == self ? self : window), t = n.Decimal, e.noConflict = function () {\n      return n.Decimal = t, e;\n    }, n.Decimal = e), e;\n  }(this) //    bigDec: require('decimal.js')\n\n});\n\nif (typeof module !== 'undefined') {\n  module.exports = nerdamer;\n}\n\n;"],"names":["bigInt","nerdamer","imports","_","Parser","bigDec","set","precision","Groups","PRIMES","CUSTOM_OPERATORS","Settings","callPeekers","init_primes","exclude","suppress_errors","PARSE2NUMBER","SAFE","IMAGINARY","FUNCTION_MODULES","Math","ALLOW_CHARS","USE_MULTICHARACTER_VARS","POWER_OPERATOR","VALIDATION_REGEX","IMPLIED_MULTIPLICATION_REGEX","ALIASES","POSITIVE_MULTIPLIERS","CACHE","SILENCE_WARNINGS","PRECISION","EXPRESSION_DECP","DEFAULT_DECP","VECTOR","PARENTHESIS","SQRT","ABS","FACTORIAL","DOUBLEFACTORIAL","LONG_PI","LONG_E","PI","E","LOG","LOG10","LOG10_LATEX","MAX_EXP","SCIENTIFIC_MAX_DECIMAL_PLACES","SCIENTIFIC_IGNORE_ZERO_EXPONENTS","roots","i","j","nthpow","pow","N","P","S","EX","FN","PL","CB","CP","CONST_HASH","EXPRESSIONS","VARS","RESERVED","WARNINGS","err","msg","ErrorObj","Error","customError","name","message","this","undefined","error","stack","prototype","Object","create","isReserved","value","indexOf","allSame","arr","last","l","length","equals","warn","push","SHOW_WARNINGS","console","validateName","typ","test","InvalidVariableNameError","scientificToDecimal","num","nsign","sign","abs","parts","String","toLowerCase","split","e","pop","coeff_array","slice","zero","Array","join","dec","isPrime","n","q","floor","sqrt","isNumber","_isFraction","isSymbol","multiplier","toDecimal","obj","Symbol","isExpression","Expression","_variables","poly","vars","c","add","isNaN","group","prevgroup","previousGroup","power","x","symbols","firstObject","args","sort","isVector","Vector","isMatrix","Matrix","isSet","Set","isNumericSymbol","symbol","isArray","isInt","toString","isNegative","lessThan","stringify","o","inBrackets","str","format","call","arguments","shift","new_str","replace","match","index","arg","keys","key","both","setFunction","params_array","body","parse","functions","mapped_function","params","arrayMin","min","apply","decompose_fn","fn","wrt","as_obj","ax","a","b","t","expand","clone","stripVar","subtract","divide","nround","s","Number","MAX_VALUE","round","each","hasOwnProperty","even","evenFraction","arrayUnique","item","removeDuplicates","condition","conditionType","seen","temp","reserveNames","_remove","indexOrKey","result","splice","block","setting","f","opt","current_setting","retval","arguments2Array","evaluate","generatePrimes","upto","allNumbers","allConstants","isPi","isE","isConstant","mix","isComposite","isLinear","_ref","y","term","multiply","expanded","DivisionByZero","ParseError","UndefinedError","OutOfFunctionDomainError","MaximumIterationsReached","NerdamerTypeError","ParityError","OperatorError","OutOfRangeError","DimensionError","ValueLimitExceededError","NerdamerValueError","SolveError","InfiniteLoopError","UnexpectedTokenError","exceptions","Math2","csc","sin","sec","cos","cot","tan","acsc","asin","asec","acos","acot","atan","erf","exp","diff","h","median","_len","values","_key","half","fromContinued","contd","fractions","whole","continuedFraction","w","absn","ni","done","EPSILON","idx","bigpow","p","Frac","isInteger","den","nthroot","gamma","z","C","g","bigfactorial","times","bigLog","quick","k","r","invert","factorial","is_int","NaN","dfactorial","GCD","map","QGCD","gcd","negate","LCM","factor","ifactors","ifactor","factors","updateHash","sfactor","prime","input","lt","safety","rho","xf","cz","mod","minus","sm","boxfactor","max","d","fib","integer_part","simpson","step","get_value","side","v","dx","xi","num_integrate","tol","maxdepth","adsimp","fa","fm","fb","V0","depth","state","nanEncountered","f1","f2","sl","sr","s2","m","V1","V2","maxDepthCount","integrate","Ci","sum","n2","log","Si","Ei","Infinity","Shi","Chi","cosh","Li","gamma_incomplete","rect","sinc","tri","A","dk","dk0","d0","xk","powb","dk_dec","gte","xn","ld","same_delta","delta","decimal","_text","option","useGroup","decp","asHash","wrapCondition","asDecimal","valueOf","frac","exec","negative","quotient","digits","passed","numer","denom","divmod","remainder","operator","Scientific","om","collectSymbols","txt","pg","pwg","fname","E_TO_EXP","charAt","cv","parens","elements","text","primeFactors","startsWith","substr","isScientific","fromScientific","convert","simple","Fraction","quickConversion","isInfinity","imaginary","bin","preprocessors","names","actions","Slice","upper","lower","start","end","Collection","Token","node","node_type","column","type","OPERATOR","operators","FUNCTION","precedence","MAX_PRECEDENCE","leftAssoc","append","getItems","pretty_print","collection","is_prefix","VARIABLE_OR_LITERAL","UNIT","KEYWORD","classes","complex","prec","re","im","sinh","removeDen","sq","squared","fromArray","_sqrt","_log","concat","infinity","tanh","sech","csch","coth","acosh","asinh","atanh","asech","acsch","acoth","realpart","imagpart","hyp","phi","USE_BIG","atan2","symfunction","greaterThan","trig","isImaginary","getQuadrant","dividedBy","gt","trigh","units","action","prefix","postfix","operation","overloaded","overloadAction","overloadLeftAssoc","vectorFn","brackets","id","is_open","is_close","maps_to","SYMBOLIC_MIN_MAX","symMinMax","_symbol","cf","sigfigs","scientific","pfactor","identity","cbrt","expand_denominator","expand_functions","mat","determinant","cols","rows","transpose","vec1","vec2","dot","cross","vector","tolerance","matrix","M","col_index","col","rationalize","l2","conjugate","theta","toPolarFormArray","original","getDenom","getNum","getval","aval","bval","set1","set2","union","contains","intersection","difference","intersects","is_subset","ostr","override","which","with_what","restore","what","extend","force_call","fn_name","callfunction","allowed_args","fn_settings","num_allowed_args","is_array","min_args","max_args","num_args","error_msg","numericArgs","fmodules","fmodule","findFunction","bigConvert","operator_filter_regex","filter","RegExp","setOperator","postif","getOperator","aliasOperator","getOperators","getBrackets","Node","token","left","right","initConstants","CONSTANTS","peekers","pre_operator","post_operator","pre_function","post_function","tokenize","trim","regex","L","lpos","tokens","scopes","target","open_brackets","has_space","addScope","scope_type","new_scope","goUp","get_operator_str","start_at","substring","chunkify","operator_str","_operators","ch","add_token","at","add_function","set_last_position","position","last_token_is_numeric","bracket","pair","prev","nxt","is_operator","toRPN","output","prefixes","collapse","destination","next","previous","next_is_operator","last_on_stack","parseRPN","rpn","substitutions","pi","Q","is_comma","fromSet","ans","parent","fn_args","ret","getter","il","element","subbed","isUnit","forEach","toHTML","indent","tab","repeat","html","tree","location","group1","group2","before","g1","g2","prepare_expression","toObject","expression_string","objectify","isConversion","chunkAtCommas","chunks","rem_brackets","ms","distributeMultiplier","toUnitMultiplier","V","symbol1","symbol2","retnum","retden","is_negative","img","setPower","qa","tw","nn","unwrapPARENS","toLinear","rem","isOne","sym","asbig","numVal","base","log_sym","log_base","img_part","sIsConstant","toExponential","isFinite","rank","testSQRT","absEquals","toTeX","expression_or_obj","decimals","TeX","cdot","narr","next_is_array","next_is_minus","unshift","before_last","remove_redundant_powers","nobj","LaTeX","braces","expr","argSplit","latex","clean","new_num","new_den","getFunction","addPreprocessor","order","shift_cells","PreprocessorError","getPreprocessors","removePreprocessor","subs","aIsSymbol","bIsSymbol","unit","Unit","aneg","bneg","inf","_ref2","ap","bp","h1","h2","powEQ","v1","v2","aIsComposite","bIsComposite","PN","PNEQ","valEQ","attach","insert","shell","canIterate","bothPL","bIsMatrix","eachElement","row","dimensions","toFixed","bnum","bden","a_pow","a_multiplier","ONN","u","distributeExponent","combine","bm","p1","p2","isSymbolP1","isSymbolP2","toEX","logV","n1","ndiv","ddiv","ps","isMatrixB","isMatrixA","isVectorA","isVectorB","raised","aIsZero","bIsZero","nre","nim","bIsConstant","aIsConstant","bIsInt","multiplyPower","sgn","aa","_a","_b","a1","log_a","b1","c1","neg_num","nr","tn","evenr","evenp","evennp","_result","fct","testPow","isEX","pt","IGNORE_E","comma","percent","assign","function_assign","bool2Symbol","eq","lte","log10","LOG10E","trunc","ceil","getExpression","expression_number","asType","expression","text_","first_arg","buildFunction","Build","build","variables","isFraction","isPolynomial","isPoly","sub","for_symbol","otype","callback","numerator","denominator","hasFunction","containsFunction","variable","coeff","exponent","removeLeadingZeroes","removeTrailingZeroes","dot_location","zeroes","leadingZeroes","wholes","copy","rounded","next_two","ed","is_neg","isFrac","m_dc","simplify","neg","qcompare","isnegative","lcm","div","unwrapSQRT","all","getNth","root","isToNth","nthPower","nthMultiplier","isSquare","isCube","isSimple","powSimp","powers","mfactors","out_","in_","xt","multivariate","exclude_x","toArray","hasFunc","fn_group","same_pow","a_is_unit_multiplier","find","needle","nargs","isMonomial","isSQRT","check_all","check_symbols","retainSign","isSymbolic","isInverse","properties","keepSign","deep","power_only","is_one","cp","isImgSymbol","keyForGroup","existing","hash","contents","is_parens","sort_fn","expand_symbol","collected","isCombination","opts","qc","fullConversion","nparts","stripSign","cparts","d1","d2","parser","keep","space","LaTeXArray","rowTeX","m_array","v_array","formatFrac","p_array","greek","alpha","beta","epsilon","zeta","eta","iota","kappa","lambda","mu","nu","omnikron","sigma","tau","upsilon","chi","psi","omega","Gamma","Delta","Epsilon","Theta","Lambda","Xi","Pi","Sigma","Phi","Psi","Omega","arccos","ker","limsup","arcsin","deg","lg","ln","Pr","sup","arctan","det","hom","lim","LN","dim","liminf","inverted","formatSubscripts","t_varray","den_map","num_map","num_c","den_c","setBrackets","container","counter","laTex","combine_power","isBracketed","formatP","tp","merge","mn","md","vn","vd","top","bottom","glue","is_pow","square","brace","angle","filterTokens","filtered","next_token","raw_tokens","parse_next","get","items","lw","rl","el","arrayPrefill","val","custom","modulus","eql","toUnitVector","angleFrom","mod1","mod2","product","theta_val","isParallelTo","isAntiparallelTo","isPerpendicularTo","B","magnitude","tex","F","zeroMatrix","raw_values","raw","nc","toRightTriangular","isSingular","augment","np","els","divisor","new_element","ki","imatrix","kp","inverse_elements","nel","nj","canMultiplyFromLeft","sameSize","MM","kj","toVector","newline","to_decimal","row_tex","_union","remove","_intersection","dependencies","_rename","reformat","deps","getProperName","continued_fraction","compileDependencies","dep_string","replacements","components","getArgsDeps","arg_array","supplements","f_array","ftext","xports","ftext_complex","cc","ft","ftext_function","bn","alias","Function","LOG_FNS","Utils","allNumeric","arrayAddSlices","slices","arrayClone","new_array","arrayMax","arrayEqual","arr1","arr2","arrayGetVariables","arraySum","toNumber","clearU","indx","comboSort","combined","na","nb","compare","sym1","sym2","comparison","scope","random","convertToVector","customType","fillHoles","getCoeffs","info","coeffs","getU","importFunctions","isVariableSymbol","knownVariable","nroots","_roots","range","sameSign","separate","stringReplace","from","to","with_str","groups","PARSER","libExports","fndec","convertToLaTeX","convertFromLaTeX","version","add_on","getWarnings","setConstant","constant","getConstant","getCore","getEquation","reserved","asArray","clear","equation_number","keep_EXPRESSIONS_fixed","flush","expressions","asObject","asLaTeX","register","core","parent_obj","visible","numargs","validVarName","varname","supported","numEquations","numExpressions","setVar","getVar","clearVars","load","loader","getVars","updateAPI","linker","replaceFunction","new_num_args","withOperator","htmlTree","addPeeker","removePeeker","BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Integer","radix","parseValue","parseBase","BigInteger","isSmall","SmallInteger","isPrecise","arrayToSmall","compareAbs","createArray","truncate","l_a","l_b","carry","addAny","addSmall","a_l","b_l","borrow","subtractSmall","multiplyLong","a_i","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","multiplySmallAndArray","divModSmall","divModAny","self","quotientDigit","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","reverse","divMod2","qSign","mSign","isBasicPrime","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","modPow","plus","subtractAny","small","l1","_multiplyBySmall","over","isZero","isPositive","isOdd","compareTo","notEquals","neq","greater","greaterOrEquals","geq","lesserOrEquals","leq","strict","bits","bitLength","logN","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","shiftRight","remQuo","and","or","xor","LOBMASK_I","roughLOB","integerLogarithm","tmp","absBase","charCodeAt","parseInt","charCode","parseBaseFromArray","digit","toBase","out","toBaseString","parseStringValue","decimalPlace","parseNumberValue","toJSON","minusOne","isInstance","low","restricted","module","exports","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","O","D","absoluteValue","constructor","comparedTo","cmp","cosine","sd","J","G","cubeRoot","Z","decimalPlaces","dp","dividedToIntegerBy","divToInt","greaterThanOrEqualTo","hyperbolicCosine","hyperbolicSine","hyperbolicTangent","inverseCosine","isNeg","U","inverseHyperbolicCosine","inverseHyperbolicSine","inverseHyperbolicTangent","inverseSine","inverseTangent","isPos","lessThanOrEqualTo","logarithm","T","naturalExponential","naturalLogarithm","negated","sine","squareRoot","tangent","mul","toBinary","K","toDecimalPlaces","toDP","R","toFraction","toHexadecimal","toHex","toNearest","toOctal","toPower","LN10","toPrecision","toSignificantDigits","toSD","truncated","I","H","$","search","W","X","Y","en","rn","sn","on","un","cn","an","defaults","getRandomValues","randomBytes","hn","dn","pn","gn","wn","Nn","En","yn","Mn","qn","On","Dn","Uint32Array","Fn","An","Sn","Zn","Pn","Rn","Ln","Tn","Un","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","isDecimal","hypot","log2","default","Decimal"],"sourceRoot":""}