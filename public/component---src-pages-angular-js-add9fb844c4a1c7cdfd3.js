"use strict";(self.webpackChunkphysicalculator=self.webpackChunkphysicalculator||[]).push([[647],{8881:function(e,t,l){l.r(t),l.d(t,{Head:function(){return c}});var n=l(7294),a=l(5718),r=l(8161),u=l(2824),c=function(){return n.createElement("title",null,"Angular Stuff")};t.default=function(){return n.createElement(a.Z,{className:"page"},n.createElement(r.Z,null),n.createElement("h1",null,"Angular"),n.createElement("p",null,"Angular motion is just like linear motion, but we'll need to transform some of our units. Angular motion has some different ways of writing equivalents to linear variables:"),n.createElement("table",null,n.createElement("tr",null,n.createElement("th",null,"Linear Variable"),n.createElement("th",null,"Angular Equivalent")),n.createElement("tr",null,n.createElement("td",null,"F"),n.createElement("td",null,"τ")),n.createElement("tr",null,n.createElement("td",null,"m"),n.createElement("td",null,"I")),n.createElement("tr",null,n.createElement("td",null,"x"),n.createElement("td",null,"θ")),n.createElement("tr",null,n.createElement("td",null,"v"),n.createElement("td",null,"ω")),n.createElement("tr",null,n.createElement("td",null,"a"),n.createElement("td",null,"α"))),n.createElement("h1",null,"Angular ⇔ Linear"),n.createElement("div",{className:"rowy"},n.createElement(u.Z,{equation:"a = r * α"}),n.createElement(u.Z,{equation:"v = r * ω"}),n.createElement(u.Z,{equation:"S = r * θ"})),n.createElement("h1",null,"Rotational Motion"),n.createElement(u.Z,{equation:"τ = I * α"}),n.createElement(u.Z,{equation:"K = 1/2  I * ω^2"}),n.createElement("h1",null,"Angular Momentum"),n.createElement(u.Z,{equation:"L = I * ω"}))}}}]);
//# sourceMappingURL=component---src-pages-angular-js-add9fb844c4a1c7cdfd3.js.map